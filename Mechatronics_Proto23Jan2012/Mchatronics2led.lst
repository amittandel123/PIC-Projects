

HI-TECH Software PIC PRO Macro Assembler V9.70 build 5239 
                                                                                               Tue Jan 24 14:23:19 2012

HI-TECH Software Omniscient Code Generator (PRO mode) build 5239
     1                           	processor	16F677
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,reloc=256,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,local,class=CODE,delta=2
    14                           	psect	text860,local,class=CODE,delta=2
    15                           	psect	text861,local,class=CODE,delta=2
    16                           	psect	text862,local,class=CODE,delta=2
    17                           	psect	text863,local,class=CODE,delta=2
    18                           	psect	text864,local,class=CODE,delta=2
    19                           	psect	text865,local,class=CODE,delta=2
    20                           	psect	text866,local,class=CODE,delta=2
    21                           	psect	text867,local,class=CODE,delta=2
    22                           	psect	text868,local,class=CODE,delta=2
    23                           	psect	text869,local,class=CODE,delta=2
    24                           	psect	text870,local,class=CODE,delta=2
    25                           	psect	text871,local,class=CODE,delta=2
    26                           	psect	text872,local,class=CODE,delta=2
    27                           	psect	text873,local,class=CODE,delta=2
    28                           	psect	text874,local,class=CODE,delta=2
    29                           	psect	text875,local,class=CODE,delta=2
    30                           	psect	text876,local,class=CODE,delta=2
    31                           	psect	text877,local,class=CODE,delta=2
    32                           	psect	text878,local,class=CODE,delta=2
    33                           	psect	text879,local,class=CODE,delta=2
    34                           	psect	text880,local,class=CODE,delta=2
    35                           	psect	text881,local,class=CODE,delta=2
    36                           	psect	text882,local,class=CODE,delta=2
    37                           	psect	text883,local,class=CODE,delta=2
    38                           	psect	text884,local,class=CODE,delta=2
    39                           	psect	text885,local,class=CODE,delta=2
    40                           	psect	text886,local,class=CODE,delta=2
    41                           	psect	text887,local,class=CODE,delta=2
    42                           	psect	text888,local,class=CODE,delta=2
    43                           	psect	text889,local,class=CODE,delta=2
    44                           	psect	text890,local,class=CODE,delta=2
    45                           	psect	text891,local,class=CODE,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text892,local,class=CODE,delta=2
    48                           	psect	pa_nodes,global,class=CODE,delta=2
    49                           	dabs	1,0x7E,2
    50  000A                     	;#
    51                           
    52                           	psect	config
    53  2007  3094               	dw	12436	;#
    54                           
    55                           	psect	strings
    56  0500                     __pstrings:	;COMMON:	_main->_BuzzerBeep
    57                           ;BANK0:	_BuzzerBeep->_DelayMs
    58                           ;BANK0:	_main->_LockOperation
    59                           ;COMMON:	_LockOperation->_BuzzerBeep
    60                           ;BANK0:	_BuzzerBeep->_DelayMs
    61                           ;BANK0:	_LockOperation->_Configuration
    62                           ;COMMON:	_Configuration->_BuzzerBeep
    63                           ;BANK0:	_BuzzerBeep->_DelayMs
    64                           ;BANK0:	_Configuration->_BuzzerBeep
    65                           ;BANK0:	_BuzzerBeep->_DelayMs
    66  0500                     stringtab:
    67                           ;	String table - string pointers are 2 bytes each
    68  0500  00FE               	movwf	btemp& (0+127)
    69  0501  1FFE               	btfss	btemp& (0+127),7
    70  0502  2D08               	goto	stringcode
    71  0503  1383               	bcf	3,7
    72  0504  187E               	btfsc	btemp& (0+127),0
    73  0505  1783               	bsf	3,7
    74  0506  0800               	movf	0,w
    75  0507  0008               	return
    76  0508                     stringcode:
    77  0508  008A               	movwf	10
    78  0509  0804               	movf	4,w
    79  050A                     stringdir:
    80  050A  0082               	movwf	2
    81  050B                     __stringbase:
    82                           
    83                           	psect	stringtext1
    84  000F                     __pstringtext1:
    85  000F                     _CRCValue:
    86  000F  3400               	retlw	0
    87  0010  345E               	retlw	94
    88  0011  34BC               	retlw	188
    89  0012  34E2               	retlw	226
    90  0013  3461               	retlw	97
    91  0014  343F               	retlw	63
    92  0015  34DD               	retlw	221
    93  0016  3483               	retlw	131
    94  0017  34C2               	retlw	194
    95  0018  349C               	retlw	156
    96  0019  347E               	retlw	126
    97  001A  3420               	retlw	32
    98  001B  34A3               	retlw	163
    99  001C  34FD               	retlw	253
   100  001D  341F               	retlw	31
   101  001E  3441               	retlw	65
   102  001F  349D               	retlw	157
   103  0020  34C3               	retlw	195
   104  0021  3421               	retlw	33
   105  0022  347F               	retlw	127
   106  0023  34FC               	retlw	252
   107  0024  34A2               	retlw	162
   108  0025  3440               	retlw	64
   109  0026  341E               	retlw	30
   110  0027  345F               	retlw	95
   111  0028  3401               	retlw	1
   112  0029  34E3               	retlw	227
   113  002A  34BD               	retlw	189
   114  002B  343E               	retlw	62
   115  002C  3460               	retlw	96
   116  002D  3482               	retlw	130
   117  002E  34DC               	retlw	220
   118  002F  3423               	retlw	35
   119  0030  347D               	retlw	125
   120  0031  349F               	retlw	159
   121  0032  34C1               	retlw	193
   122  0033  3442               	retlw	66
   123  0034  341C               	retlw	28
   124  0035  34FE               	retlw	254
   125  0036  34A0               	retlw	160
   126  0037  34E1               	retlw	225
   127  0038  34BF               	retlw	191
   128  0039  345D               	retlw	93
   129  003A  3403               	retlw	3
   130  003B  3480               	retlw	128
   131  003C  34DE               	retlw	222
   132  003D  343C               	retlw	60
   133  003E  3462               	retlw	98
   134  003F  34BE               	retlw	190
   135  0040  34E0               	retlw	224
   136  0041  3402               	retlw	2
   137  0042  345C               	retlw	92
   138  0043  34DF               	retlw	223
   139  0044  3481               	retlw	129
   140  0045  3463               	retlw	99
   141  0046  343D               	retlw	61
   142  0047  347C               	retlw	124
   143  0048  3422               	retlw	34
   144  0049  34C0               	retlw	192
   145  004A  349E               	retlw	158
   146  004B  341D               	retlw	29
   147  004C  3443               	retlw	67
   148  004D  34A1               	retlw	161
   149  004E  34FF               	retlw	255
   150  004F  3446               	retlw	70
   151  0050  3418               	retlw	24
   152  0051  34FA               	retlw	250
   153  0052  34A4               	retlw	164
   154  0053  3427               	retlw	39
   155  0054  3479               	retlw	121
   156  0055  349B               	retlw	155
   157  0056  34C5               	retlw	197
   158  0057  3484               	retlw	132
   159  0058  34DA               	retlw	218
   160  0059  3438               	retlw	56
   161  005A  3466               	retlw	102
   162  005B  34E5               	retlw	229
   163  005C  34BB               	retlw	187
   164  005D  3459               	retlw	89
   165  005E  3407               	retlw	7
   166  005F  34DB               	retlw	219
   167  0060  3485               	retlw	133
   168  0061  3467               	retlw	103
   169  0062  3439               	retlw	57
   170  0063  34BA               	retlw	186
   171  0064  34E4               	retlw	228
   172  0065  3406               	retlw	6
   173  0066  3458               	retlw	88
   174  0067  3419               	retlw	25
   175  0068  3447               	retlw	71
   176  0069  34A5               	retlw	165
   177  006A  34FB               	retlw	251
   178  006B  3478               	retlw	120
   179  006C  3426               	retlw	38
   180  006D  34C4               	retlw	196
   181  006E  349A               	retlw	154
   182  006F  3465               	retlw	101
   183  0070  343B               	retlw	59
   184  0071  34D9               	retlw	217
   185  0072  3487               	retlw	135
   186  0073  3404               	retlw	4
   187  0074  345A               	retlw	90
   188  0075  34B8               	retlw	184
   189  0076  34E6               	retlw	230
   190  0077  34A7               	retlw	167
   191  0078  34F9               	retlw	249
   192  0079  341B               	retlw	27
   193  007A  3445               	retlw	69
   194  007B  34C6               	retlw	198
   195  007C  3498               	retlw	152
   196  007D  347A               	retlw	122
   197  007E  3424               	retlw	36
   198  007F  34F8               	retlw	248
   199  0080  34A6               	retlw	166
   200  0081  3444               	retlw	68
   201  0082  341A               	retlw	26
   202  0083  3499               	retlw	153
   203  0084  34C7               	retlw	199
   204  0085  3425               	retlw	37
   205  0086  347B               	retlw	123
   206  0087  343A               	retlw	58
   207  0088  3464               	retlw	100
   208  0089  3486               	retlw	134
   209  008A  34D8               	retlw	216
   210  008B  345B               	retlw	91
   211  008C  3405               	retlw	5
   212  008D  34E7               	retlw	231
   213  008E  34B9               	retlw	185
   214  008F  348C               	retlw	140
   215  0090  34D2               	retlw	210
   216  0091  3430               	retlw	48
   217  0092  346E               	retlw	110
   218  0093  34ED               	retlw	237
   219  0094  34B3               	retlw	179
   220  0095  3451               	retlw	81
   221  0096  340F               	retlw	15
   222  0097  344E               	retlw	78
   223  0098  3410               	retlw	16
   224  0099  34F2               	retlw	242
   225  009A  34AC               	retlw	172
   226  009B  342F               	retlw	47
   227  009C  3471               	retlw	113
   228  009D  3493               	retlw	147
   229  009E  34CD               	retlw	205
   230  009F  3411               	retlw	17
   231  00A0  344F               	retlw	79
   232  00A1  34AD               	retlw	173
   233  00A2  34F3               	retlw	243
   234  00A3  3470               	retlw	112
   235  00A4  342E               	retlw	46
   236  00A5  34CC               	retlw	204
   237  00A6  3492               	retlw	146
   238  00A7  34D3               	retlw	211
   239  00A8  348D               	retlw	141
   240  00A9  346F               	retlw	111
   241  00AA  3431               	retlw	49
   242  00AB  34B2               	retlw	178
   243  00AC  34EC               	retlw	236
   244  00AD  340E               	retlw	14
   245  00AE  3450               	retlw	80
   246  00AF  34AF               	retlw	175
   247  00B0  34F1               	retlw	241
   248  00B1  3413               	retlw	19
   249  00B2  344D               	retlw	77
   250  00B3  34CE               	retlw	206
   251  00B4  3490               	retlw	144
   252  00B5  3472               	retlw	114
   253  00B6  342C               	retlw	44
   254  00B7  346D               	retlw	109
   255  00B8  3433               	retlw	51
   256  00B9  34D1               	retlw	209
   257  00BA  348F               	retlw	143
   258  00BB  340C               	retlw	12
   259  00BC  3452               	retlw	82
   260  00BD  34B0               	retlw	176
   261  00BE  34EE               	retlw	238
   262  00BF  3432               	retlw	50
   263  00C0  346C               	retlw	108
   264  00C1  348E               	retlw	142
   265  00C2  34D0               	retlw	208
   266  00C3  3453               	retlw	83
   267  00C4  340D               	retlw	13
   268  00C5  34EF               	retlw	239
   269  00C6  34B1               	retlw	177
   270  00C7  34F0               	retlw	240
   271  00C8  34AE               	retlw	174
   272  00C9  344C               	retlw	76
   273  00CA  3412               	retlw	18
   274  00CB  3491               	retlw	145
   275  00CC  34CF               	retlw	207
   276  00CD  342D               	retlw	45
   277  00CE  3473               	retlw	115
   278  00CF  34CA               	retlw	202
   279  00D0  3494               	retlw	148
   280  00D1  3476               	retlw	118
   281  00D2  3428               	retlw	40
   282  00D3  34AB               	retlw	171
   283  00D4  34F5               	retlw	245
   284  00D5  3417               	retlw	23
   285  00D6  3449               	retlw	73
   286  00D7  3408               	retlw	8
   287  00D8  3456               	retlw	86
   288  00D9  34B4               	retlw	180
   289  00DA  34EA               	retlw	234
   290  00DB  3469               	retlw	105
   291  00DC  3437               	retlw	55
   292  00DD  34D5               	retlw	213
   293  00DE  348B               	retlw	139
   294  00DF  3457               	retlw	87
   295  00E0  3409               	retlw	9
   296  00E1  34EB               	retlw	235
   297  00E2  34B5               	retlw	181
   298  00E3  3436               	retlw	54
   299  00E4  3468               	retlw	104
   300  00E5  348A               	retlw	138
   301  00E6  34D4               	retlw	212
   302  00E7  3495               	retlw	149
   303  00E8  34CB               	retlw	203
   304  00E9  3429               	retlw	41
   305  00EA  3477               	retlw	119
   306  00EB  34F4               	retlw	244
   307  00EC  34AA               	retlw	170
   308  00ED  3448               	retlw	72
   309  00EE  3416               	retlw	22
   310  00EF  34E9               	retlw	233
   311  00F0  34B7               	retlw	183
   312  00F1  3455               	retlw	85
   313  00F2  340B               	retlw	11
   314  00F3  3488               	retlw	136
   315  00F4  34D6               	retlw	214
   316  00F5  3434               	retlw	52
   317  00F6  346A               	retlw	106
   318  00F7  342B               	retlw	43
   319  00F8  3475               	retlw	117
   320  00F9  3497               	retlw	151
   321  00FA  34C9               	retlw	201
   322  00FB  344A               	retlw	74
   323  00FC  3414               	retlw	20
   324  00FD  34F6               	retlw	246
   325  00FE  34A8               	retlw	168
   326  00FF  3474               	retlw	116
   327  0100  342A               	retlw	42
   328  0101  34C8               	retlw	200
   329  0102  3496               	retlw	150
   330  0103  3415               	retlw	21
   331  0104  344B               	retlw	75
   332  0105  34A9               	retlw	169
   333  0106  34F7               	retlw	247
   334  0107  34B6               	retlw	182
   335  0108  34E8               	retlw	232
   336  0109  340A               	retlw	10
   337  010A  3454               	retlw	84
   338  010B  34D7               	retlw	215
   339  010C  3489               	retlw	137
   340  010D  346B               	retlw	107
   341  010E  3435               	retlw	53
   342  0C63                     
   343                           	psect	cinit
   344  04C6                     start_initialization:
   345                           ; Clear objects allocated to COMMON
   346  04C6  3076               	movlw	low __pbssCOMMON
   347  04C7  0084               	movwf	4
   348  04C8  307C               	movlw	low (__pbssCOMMON+6)
   349  04C9  2528               	fcall	clear_ram
   350                           ; Clear objects allocated to BANK0
   351  04CA  1383               	bcf	3,7	;select IRP bank0
   352  04CB  3020               	movlw	low __pbssBANK0
   353  04CC  0084               	movwf	4
   354  04CD  3036               	movlw	low (__pbssBANK0+22)
   355  04CE  2528               	fcall	clear_ram
   356  04CF                     end_of_initialization:	;End of C runtime variable initationation code
   357  04CF  0183               	clrf	3
   358  04D0  2B25               	ljmp	_main	;jump to C main() function
   359                           
   360                           	psect	bssCOMMON
   361  0076                     __pbssCOMMON:
   362  0076                     _DataEEData:
   363  0076                     	ds	2
   364  0078                     _InvalidKeyCount:
   365  0078                     	ds	1
   366  0079                     _LowBatt:
   367  0079                     	ds	1
   368  007A                     _MatchKey:
   369  007A                     	ds	1
   370  007B                     _TimeCounter:
   371  007B                     	ds	1
   372                           
   373                           	psect	bssBANK0
   374  0020                     __pbssBANK0:
   375  0020                     _DataEEAddr:
   376  0020                     	ds	2
   377  0022                     _ToggleSkipFlag:
   378  0022                     	ds	1
   379  0023                     _t:
   380  0023                     	ds	1
   381  0024                     _EEPROMKey:
   382  0024                     	ds	9
   383  002D                     _iButtonKey:
   384  002D                     	ds	9
   385                           
   386                           	psect	clrtext
   387  0528                     clear_ram:	;	Called with FSR containing the base address, and
   388                           ;	W with the last address+1
   389  0528  0064               	clrwdt	;clear the watchdog before getting into this loop
   390  0529                     clrloop:
   391  0529  0180               	clrf	0	;clear RAM location pointed to by FSR
   392  052A  0A84               	incf	4,f	;increment pointer
   393  052B  0604               	xorwf	4,w	;XOR with final address
   394  052C  1903               	btfsc	3,2	;have we reached the end yet?
   395  052D  3400               	retlw	0	;all done for this memory range, return
   396  052E  0604               	xorwf	4,w	;XOR again to restore value
   397  052F  2D29               	goto	clrloop	;do the next byte
   398                           
   399                           	psect	cstackCOMMON
   400  0070                     __pcstackCOMMON:
   401  0070                     ??_DoorClose:
   402  0070                     ?_DoorClose:	;@ 0x0
   403  0070                     ??_EEPROMWriteKeyByte:	;@ 0x0
   404  0070                     ?_CHK_LOW_BAT_OPEN:	;@ 0x0
   405  0070                     ??_ClearAllKeys:	;@ 0x0
   406  0070                     ?_ToggleBuzzErrorLED:	;@ 0x0
   407  0070                     ??_DoorOpen:	;@ 0x0
   408  0070                     ??_ToggleBuzzErrorLED:	;@ 0x0
   409  0070                     ??_GoToSleep:	;@ 0x0
   410  0070                     ?_GoToSleep:	;@ 0x0
   411  0070                     ??_ReadiButton:	;@ 0x0
   412  0070                     ??_EEPROMReadKey:	;@ 0x0
   413  0070                     ??_EEPROMWriteKey:	;@ 0x0
   414  0070                     ??_BuzzerBeep:	;@ 0x0
   415  0070                     ??_strcmp:	;@ 0x0
   416  0070                     ??_WriteByteToiButton:	;@ 0x0
   417  0070                     ??_CHK_LOW_BAT_OPEN:	;@ 0x0
   418  0070                     ??_ClearKey:	;@ 0x0
   419  0070                     ??_Wait_With_LED_Blink:	;@ 0x0
   420  0070                     ??_CRCCheck:	;@ 0x0
   421  0070                     ?_ReadEEPROM:	;@ 0x0
   422  0070                     ??_ReadEEPROM:	;@ 0x0
   423  0070                     ??_DelayMs:	;@ 0x0
   424  0070                     ??_PowerInit:	;@ 0x0
   425  0070                     ?_PowerInit:	;@ 0x0
   426  0070                     ?_delay_10us:	;@ 0x0
   427  0070                     ??_delay_10us:	;@ 0x0
   428  0070                     ??_WriteEEPROM:	;@ 0x0
   429  0070                     ??_InitiButton:	;@ 0x0
   430  0070                     ?_WriteEEPROM:	;@ 0x0
   431  0070                     ??_ReadByteToiButton:	;@ 0x0
   432  0070                     ??_ToggleBuzzLED:	;@ 0x0
   433  0070                     ?_ToggleLED:	;@ 0x0
   434  0070                     ?_ToggleBuzzLED:	;@ 0x0
   435  0070                     ??_CheckForiButtonDisconnect:	;@ 0x0
   436  0070                     ??_ToggleLED:	;@ 0x0
   437  0070                     ?_CRCCheck:	;@ 0x0
   438  0070                     ?_ReadByteToiButton:	;@ 0x0
   439  0070                     WriteByteToiButton@d:	;@ 0x0
   440  0070                     InitiButton@PresencePulse:	; 1 bytes @ 0x0
   441  0070                     EEPROMWriteKey@WriteAddress:	; 1 bytes @ 0x0
   442  0070                     EEPROMWriteKeyByte@WriteAddress:	; 1 bytes @ 0x0
   443  0070                     DoorOpen@BattStatus:	; 1 bytes @ 0x0
   444  0070                     EEPROMReadKey@ReadAddress:	; 1 bytes @ 0x0
   445                           ; 1 bytes @ 0x0
   446  0070                     	ds	1
   447  0071                     ?_DoorOpen:
   448  0071                     ??_InvalidKeyIndication:	;@ 0x1
   449  0071                     ?_EEPROMWriteKeyByte:	;@ 0x1
   450  0071                     ?_ClearAllKeys:	;@ 0x1
   451  0071                     ?_ClearKey:	;@ 0x1
   452  0071                     ?_Wait_With_LED_Blink:	;@ 0x1
   453  0071                     ??_AvailabeKey:	;@ 0x1
   454  0071                     ?_InitiButton:	;@ 0x1
   455  0071                     ?_CheckForiButtonDisconnect:	;@ 0x1
   456  0071                     ?_strcmp:	;@ 0x1
   457  0071                     strcmp@y:	;@ 0x1
   458  0071                     WriteByteToiButton@n:	; 1 bytes @ 0x1
   459  0071                     EEPROMWriteKey@KeyLength:	; 1 bytes @ 0x1
   460  0071                     EEPROMReadKey@KeyLength:	; 1 bytes @ 0x1
   461                           ; 1 bytes @ 0x1
   462  0071                     	ds	1
   463  0072                     ?_EEPROMReadKey:
   464  0072                     ?_WriteByteToiButton:	;@ 0x2
   465  0072                     ?_EEPROMWriteKey:	;@ 0x2
   466  0072                     ?_InvalidKeyIndication:	;@ 0x2
   467  0072                     ?_AvailabeKey:	;@ 0x2
   468  0072                     ?_ReadiButton:	;@ 0x2
   469                           ;@ 0x2
   470  0072                     	ds	4
   471                           
   472                           	psect	cstackBANK0
   473  0036                     __pcstackBANK0:
   474  0036                     ??_Configuration:
   475  0036                     ??_main:	;@ 0x0
   476  0036                     ??_ConfigureMasterKey:	;@ 0x0
   477  0036                     ??_LockOperation:	;@ 0x0
   478  0036                     ReadByteToiButton@temp:	;@ 0x0
   479  0036                     CRCCheck@KeyAllByteZero:	; 1 bytes @ 0x0
   480  0036                     strcmp@x:	; 1 bytes @ 0x0
   481  0036                     Wait_With_LED_Blink@k:	; 1 bytes @ 0x0
   482  0036                     DelayMs@i:	; 2 bytes @ 0x0
   483                           ; 2 bytes @ 0x0
   484  0036                     	ds	1
   485  0037                     ReadByteToiButton@i_byte:
   486  0037                     strcmp@i:	; 1 bytes @ 0x1
   487  0037                     CRCCheck@CRC:	; 1 bytes @ 0x1
   488                           ; 1 bytes @ 0x1
   489  0037                     	ds	1
   490  0038                     ReadByteToiButton@n:
   491  0038                     AvailabeKey@key:	; 1 bytes @ 0x2
   492  0038                     CRCCheck@LenForCrc:	; 1 bytes @ 0x2
   493  0038                     DelayMs@j:	; 1 bytes @ 0x2
   494                           ; 2 bytes @ 0x2
   495  0038                     	ds	1
   496  0039                     AvailabeKey@i:
   497  0039                     CRCCheck@KeyPointer:	; 1 bytes @ 0x3
   498                           ; 1 bytes @ 0x3
   499  0039                     	ds	1
   500  003A                     ?_DelayMs:
   501  003A                     ReadiButton@iButtonPresent:	;@ 0x4
   502  003A                     DelayMs@TimeCnt:	; 1 bytes @ 0x4
   503                           ; 2 bytes @ 0x4
   504  003A                     	ds	1
   505  003B                     ReadiButton@n:
   506                           ; 1 bytes @ 0x5
   507  003B                     	ds	1
   508  003C                     ClearAllKeys@Master_Also:
   509  003C                     ClearKey@KeyNum:	; 1 bytes @ 0x6
   510  003C                     BuzzerBeep@BeepNum:	; 1 bytes @ 0x6
   511                           ; 1 bytes @ 0x6
   512  003C                     	ds	1
   513  003D                     ClearAllKeys@i:
   514  003D                     ClearKey@i:	; 1 bytes @ 0x7
   515  003D                     BuzzerBeep@BeepTime:	; 1 bytes @ 0x7
   516                           ; 2 bytes @ 0x7
   517  003D                     	ds	2
   518  003F                     BuzzerBeep@BeepCnt:
   519                           ; 1 bytes @ 0x9
   520  003F                     	ds	1
   521  0040                     ?_BuzzerBeep:
   522  0040                     BuzzerBeep@LONG_BEEP:	;@ 0xA
   523                           ; 1 bytes @ 0xA
   524  0040                     	ds	1
   525  0041                     Configuration@key:
   526  0041                     ConfigureMasterKey@PowerOnBeep:	; 1 bytes @ 0xB
   527                           ; 1 bytes @ 0xB
   528  0041                     	ds	1
   529  0042                     ?_ConfigureMasterKey:
   530  0042                     Configuration@KeyConfigured:	;@ 0xC
   531                           ; 1 bytes @ 0xC
   532  0042                     	ds	1
   533  0043                     Configuration@i:
   534                           ; 1 bytes @ 0xD
   535  0043                     	ds	1
   536  0044                     ?_Configuration:
   537  0044                     LockOperation@i:	;@ 0xE
   538                           ; 2 bytes @ 0xE
   539  0044                     	ds	2
   540  0046                     LockOperation@ShouldCheckConfig:
   541                           ; 1 bytes @ 0x10
   542  0046                     	ds	1
   543  0047                     ?_LockOperation:
   544  0047                     main@PowerOnBeep:	;@ 0x11
   545                           ; 1 bytes @ 0x11
   546  0047                     	ds	1
   547  0048                     ??_isr:
   548  0048                     ?_main:	;@ 0x12
   549                           ;@ 0x12
   550  0048                     	ds	3
   551  004B                     ?_isr:
   552                           
   553                           	psect	maintext
   554  0325                     __pmaintext:	;@ 0x15
   555                           ;Data sizes: Strings 0, constant 256, data 0, bss 28, persistent 0 stack 0
   556                           ;Auto spaces:   Size  Autos    Used
   557                           ; COMMON          14      6      12
   558                           ; BANK0           80     21      43
   559                           ; BANK1           32      0       0
   560                           ;Pointer list with targets:
   561                           ;strcmp@y	PTR unsigned char  size(1); Largest target is 9
   562                           ;		 -> EEPROMKey(BANK0[9]), 
   563                           ;strcmp@x	PTR unsigned char  size(1); Largest target is 9
   564                           ;		 -> iButtonKey(BANK0[9]), 
   565                           ;CRCCheck@KeyPointer	PTR unsigned char  size(1); Largest target is 9
   566                           ;		 -> EEPROMKey(BANK0[9]), iButtonKey(BANK0[9]), 
   567                           ;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   568                           ;Call graph:                      Base Space Used Autos Args Refs Density
   569                           ;_main                                                1    0 9222   0.00
   570                           ;                                   17 BANK0    1
   571                           ;          _PowerInit
   572                           ;            _DelayMs
   573                           ;         _BuzzerBeep
   574                           ; _ConfigureMasterKey
   575                           ;        _WriteEEPROM
   576                           ;       _ClearAllKeys
   577                           ;      _LockOperation
   578                           ;          _GoToSleep
   579                           ;  _ConfigureMasterKey                      
   580                           ; *************** function _main *****************
   581                           ; Defined at:
   582                           ;		line 557 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
   583                           ; Parameters:    Size  Location     Type
   584                           ;		None
   585                           ; Auto vars:     Size  Location     Type
   586                           ;  PowerOnBeep     1   17[BANK0 ] unsigned char 
   587                           ; Return value:  Size  Location     Type
   588                           ;		None               void
   589                           ; Registers used:
   590                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, btemp+2, btem
      +                          p+3, pclath, cstack
   591                           ; Tracked objects:
   592                           ;		On entry : 17F/0
   593                           ;		On exit  : 60/0
   594                           ;		Unchanged: FFE00/0
   595                           ; Data sizes:     COMMON   BANK0   BANK1
   596                           ;      Locals:         0       1       0
   597                           ;      Temp:     0
   598                           ;      Total:    1
   599                           ; This function calls:
   600                           ;		_PowerInit
   601                           ;		_DelayMs
   602                           ;		_BuzzerBeep
   603                           ;		_ConfigureMasterKey
   604                           ;		_WriteEEPROM
   605                           ;		_ClearAllKeys
   606                           ;		_LockOperation
   607                           ;		_GoToSleep
   608                           ; This function is called by:
   609                           ;		Startup code after reset
   610                           ; This function uses a non-reentrant model
   611                           ; 
   612  0325                     _main:	;main.c: 556: void main(void)
   613                           ;main.c: 557: {
   614                           ;main.c: 558: unsigned char PowerOnBeep;
   615                           ;main.c: 559: PowerInit();
   616                           ; Regs used in _main: [allreg]
   617  0325  2219               	fcall	_PowerInit
   618                           ;main.c: 560: PowerOnBeep=0x00;
   619  0326  1283               	bcf	3,5	;RP0=0, select bank0
   620  0327  01C7               	clrf	main@PowerOnBeep
   621                           ;main.c: 561: DelayMs(100);
   622  0328  3064               	movlw	100
   623  0329  00BA               	movwf	?_DelayMs
   624  032A  01BB               	clrf	?_DelayMs+1
   625  032B  23F4               	fcall	_DelayMs
   626                           ;main.c: 563: BuzzerBeep(2,0);
   627  032C  01C0               	clrf	?_BuzzerBeep
   628  032D  3002               	movlw	2
   629  032E  21E2               	fcall	_BuzzerBeep
   630  032F  2B3C               	goto	l30001875
   631  0330                     l30001878:
   632                           ;main.c: 573: {
   633                           ;main.c: 574: BuzzerBeep(3,1);
   634  0330  01C0               	clrf	?_BuzzerBeep
   635  0331  0AC0               	incf	?_BuzzerBeep,f
   636  0332  3003               	movlw	3
   637  0333  21E2               	fcall	_BuzzerBeep
   638  0334  30FF               	movlw	255
   639  0335  00A0               	movwf	_DataEEAddr
   640  0336  01A1               	clrf	_DataEEAddr+1
   641  0337  01F6               	clrf	_DataEEData
   642  0338  01F7               	clrf	_DataEEData+1
   643  0339  23A0               	fcall	_WriteEEPROM
   644                           ;main.c: 576: ClearAllKeys(1);
   645  033A  3001               	movlw	1
   646  033B  23D8               	fcall	_ClearAllKeys
   647  033C                     l30001875:
   648                           ;main.c: 566: {
   649                           ;main.c: 567: ConfigureMasterKey(PowerOnBeep);
   650  033C  0847               	movf	main@PowerOnBeep,w
   651  033D  2304               	fcall	_ConfigureMasterKey
   652                           ;main.c: 568: PowerOnBeep=0x01;
   653  033E  01C7               	clrf	main@PowerOnBeep
   654  033F  0AC7               	incf	main@PowerOnBeep,f
   655  0340                     l30001877:
   656                           ;main.c: 571: {
   657                           ;main.c: 572: if(!RA5)
   658  0340  1E85               	btfss	5,5
   659  0341  2B30               	goto	l30001878
   660                           ;main.c: 579: }
   661                           ;main.c: 580: LockOperation();
   662  0342  217B               	fcall	_LockOperation
   663                           ;main.c: 581: GoToSleep();
   664  0343  2516               	fcall	_GoToSleep
   665  0344  2B40               	goto	l30001877
   666  0345                     __end_of_main:
   667                           
   668                           	psect	text860
   669  0304                     __ptext860:	; =============== function _main ends ============
   670                           ; *************** function _ConfigureMasterKey *****************
   671                           ; Defined at:
   672                           ;		line 432 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
   673                           ; Parameters:    Size  Location     Type
   674                           ;  PowerOnBeep     1    wreg     unsigned char 
   675                           ; Auto vars:     Size  Location     Type
   676                           ;  PowerOnBeep     1   11[BANK0 ] unsigned char 
   677                           ; Return value:  Size  Location     Type
   678                           ;		None               void
   679                           ; Registers used:
   680                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   681                           ; Tracked objects:
   682                           ;		On entry : 60/0
   683                           ;		On exit  : 60/0
   684                           ;		Unchanged: FFE00/0
   685                           ; Data sizes:     COMMON   BANK0   BANK1
   686                           ;      Locals:         0       1       0
   687                           ;      Temp:     0
   688                           ;      Total:    1
   689                           ; This function calls:
   690                           ;		_EEPROMReadKey
   691                           ;		_CRCCheck
   692                           ;		_BuzzerBeep
   693                           ;		_ReadiButton
   694                           ;		_EEPROMWriteKey
   695                           ;		_Wait_With_LED_Blink
   696                           ;		_GoToSleep
   697                           ; This function is called by:
   698                           ;		_main
   699                           ; This function uses a non-reentrant model
   700                           ; 
   701  0304                     _ConfigureMasterKey:	;main.c: 431: void ConfigureMasterKey(unsigned char PowerOnBeep)
   702                           ;main.c: 432: {
   703                           ; Regs used in _ConfigureMasterKey: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   704                           ;ConfigureMasterKey@PowerOnBeep stored from wreg
   705  0304  00C1               	movwf	ConfigureMasterKey@PowerOnBeep
   706                           ;main.c: 433: EEPROMReadKey(0);
   707  0305  3000               	movlw	0
   708  0306  2383               	fcall	_EEPROMReadKey
   709                           ;main.c: 434: if(CRCCheck(EEPROMKey) == 0)
   710  0307  3024               	movlw	_EEPROMKey& (0+255)
   711  0308  229D               	fcall	_CRCCheck
   712  0309  3800               	iorlw	0
   713  030A  1D03               	skipz
   714  030B  0008               	return
   715                           ;main.c: 435: {
   716                           ;main.c: 436: if(!PowerOnBeep)
   717  030C  08C1               	movf	ConfigureMasterKey@PowerOnBeep,f
   718  030D  1D03               	skipz
   719  030E  2B13               	goto	l30001898
   720                           ;main.c: 437: BuzzerBeep(3,1);
   721  030F  01C0               	clrf	?_BuzzerBeep
   722  0310  0AC0               	incf	?_BuzzerBeep,f
   723  0311  3003               	movlw	3
   724  0312  21E2               	fcall	_BuzzerBeep
   725  0313                     l30001898:
   726                           ;main.c: 440: {
   727                           ;main.c: 441: if(ReadiButton())
   728  0313  23BC               	fcall	_ReadiButton
   729  0314  3A00               	xorlw	0
   730  0315  1903               	skipnz
   731  0316  2B1D               	goto	l155
   732                           ;main.c: 442: {
   733                           ;main.c: 443: EEPROMWriteKey(0);
   734  0317  3000               	movlw	0
   735  0318  22C1               	fcall	_EEPROMWriteKey
   736                           ;main.c: 444: BuzzerBeep(3,0);
   737  0319  01C0               	clrf	?_BuzzerBeep
   738  031A  3003               	movlw	3
   739  031B  21E2               	fcall	_BuzzerBeep
   740                           ;main.c: 446: Wait_With_LED_Blink();
   741  031C  2C70               	ljmp	l30001929
   742  031D                     l155:
   743                           ;main.c: 448: }
   744                           ;main.c: 449: if(RA5 == 0)
   745  031D  1A85               	btfsc	5,5
   746  031E  2B23               	goto	l156
   747                           ;main.c: 450: BuzzerBeep(3,1);
   748  031F  01C0               	clrf	?_BuzzerBeep
   749  0320  0AC0               	incf	?_BuzzerBeep,f
   750  0321  3003               	movlw	3
   751  0322  21E2               	fcall	_BuzzerBeep
   752  0323                     l156:
   753                           ;main.c: 452: GoToSleep();
   754  0323  2516               	fcall	_GoToSleep
   755  0324  2B13               	goto	l30001898
   756  0325                     __end_of_ConfigureMasterKey:
   757                           
   758                           	psect	text861
   759  017B                     __ptext861:	; =============== function _ConfigureMasterKey ends ============
   760                           ; *************** function _LockOperation *****************
   761                           ; Defined at:
   762                           ;		line 458 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
   763                           ; Parameters:    Size  Location     Type
   764                           ;		None
   765                           ; Auto vars:     Size  Location     Type
   766                           ;  i               2   14[BANK0 ] unsigned int 
   767                           ;  ShouldCheckC    1   16[BANK0 ] unsigned char 
   768                           ; Return value:  Size  Location     Type
   769                           ;		None               void
   770                           ; Registers used:
   771                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, btemp+2, btem
      +                          p+3, pclath, cstack
   772                           ; Tracked objects:
   773                           ;		On entry : 60/0
   774                           ;		On exit  : 60/0
   775                           ;		Unchanged: FFE00/0
   776                           ; Data sizes:     COMMON   BANK0   BANK1
   777                           ;      Locals:         0       3       0
   778                           ;      Temp:     0
   779                           ;      Total:    3
   780                           ; This function calls:
   781                           ;		_ReadiButton
   782                           ;		_AvailabeKey
   783                           ;		_BuzzerBeep
   784                           ;		_DoorOpen
   785                           ;		_ToggleBuzzLED
   786                           ;		_CheckForiButtonDisconnect
   787                           ;		_Configuration
   788                           ;		_DelayMs
   789                           ;		_DoorClose
   790                           ;		_InvalidKeyIndication
   791                           ;		_ToggleBuzzErrorLED
   792                           ; This function is called by:
   793                           ;		_main
   794                           ; This function uses a non-reentrant model
   795                           ; 
   796  017B                     _LockOperation:	;main.c: 457: void LockOperation(void)
   797                           ;main.c: 458: {
   798                           ;main.c: 459: unsigned int i;
   799                           ;main.c: 460: unsigned char ShouldCheckConfig;
   800                           ;main.c: 462: if(ReadiButton())
   801                           ; Regs used in _LockOperation: [allreg]
   802  017B  23BC               	fcall	_ReadiButton
   803  017C  3A00               	xorlw	0
   804  017D  1903               	skipnz
   805  017E  0008               	return
   806                           ;main.c: 463: {
   807                           ;main.c: 464: MatchKey = AvailabeKey();
   808  017F  2428               	fcall	_AvailabeKey
   809  0180  00FA               	movwf	_MatchKey
   810                           ;main.c: 465: if(MatchKey)
   811  0181  087A               	movf	_MatchKey,w
   812  0182  1903               	btfsc	3,2
   813  0183  29C4               	goto	l30001860
   814                           ;main.c: 466: {
   815                           ;main.c: 467: RC0=0x01;
   816  0184  1407               	bsf	7,0
   817                           ;main.c: 468: BuzzerBeep(1,0);
   818  0185  01C0               	clrf	?_BuzzerBeep
   819  0186  3001               	movlw	1
   820  0187  21E2               	fcall	_BuzzerBeep
   821                           ;main.c: 469: DoorOpen();
   822  0188  2249               	fcall	_DoorOpen
   823                           ;main.c: 470: TimeCounter=0x00;
   824  0189  01FB               	clrf	_TimeCounter
   825                           ;main.c: 472: SlaveConfigured=0x00;
   826  018A  01C6               	clrf	LockOperation@ShouldCheckConfig
   827                           ;main.c: 473: ToggleSkipFlag=0x01;
   828  018B  01A2               	clrf	_ToggleSkipFlag
   829  018C  0AA2               	incf	_ToggleSkipFlag,f
   830  018D  2998               	goto	l30001855
   831  018E                     l30001852:
   832                           ;main.c: 495: }
   833                           ;main.c: 496: }
   834                           ;main.c: 497: DelayMs(30);
   835  018E  301E               	movlw	30
   836  018F  00BA               	movwf	?_DelayMs
   837  0190  01BB               	clrf	?_DelayMs+1
   838  0191  23F4               	fcall	_DelayMs
   839                           ;main.c: 498: RC1=0x00;
   840  0192  1087               	bcf	7,1
   841                           ;main.c: 499: DelayMs(170);
   842  0193  30AA               	movlw	170
   843  0194  00BA               	movwf	?_DelayMs
   844  0195  01BB               	clrf	?_DelayMs+1
   845  0196  23F4               	fcall	_DelayMs
   846                           ;main.c: 500: TimeCounter++;
   847  0197  0AFB               	incf	_TimeCounter,f
   848  0198                     l30001855:
   849  0198  3036               	movlw	54
   850  0199  027B               	subwf	_TimeCounter,w
   851  019A  1803               	btfsc	3,0
   852  019B  29BA               	goto	l162
   853                           ;main.c: 475: {
   854                           ;main.c: 476: if(LowBatt)
   855  019C  0879               	movf	_LowBatt,w
   856  019D  1903               	btfsc	3,2
   857  019E  29A0               	goto	l30001843
   858                           ;main.c: 477: ToggleBuzzLED();
   859  019F  2530               	fcall	_ToggleBuzzLED
   860  01A0                     l30001843:
   861                           ;main.c: 479: if(ShouldCheckConfig == 0)
   862  01A0  08C6               	movf	LockOperation@ShouldCheckConfig,f
   863  01A1  1D03               	skipz
   864  01A2  29AD               	goto	l30001847
   865                           ;main.c: 480: {
   866                           ;main.c: 481: if((MatchKey == 2) && (!CheckForiButtonDisconnect()))
   867  01A3  087A               	movf	_MatchKey,w
   868  01A4  3A02               	xorlw	2
   869  01A5  1D03               	skipz
   870  01A6  29AD               	goto	l30001847
   871  01A7  2538               	fcall	_CheckForiButtonDisconnect
   872  01A8  3800               	iorlw	0
   873  01A9  1D03               	skipz
   874  01AA  29AD               	goto	l30001847
   875                           ;main.c: 482: {
   876                           ;main.c: 483: ShouldCheckConfig=0x01;
   877  01AB  01C6               	clrf	LockOperation@ShouldCheckConfig
   878  01AC  0AC6               	incf	LockOperation@ShouldCheckConfig,f
   879  01AD                     l30001847:
   880                           ;main.c: 484: }
   881                           ;main.c: 485: }
   882                           ;main.c: 487: if(ReadiButton() && ShouldCheckConfig)
   883  01AD  23BC               	fcall	_ReadiButton
   884  01AE  3A00               	xorlw	0
   885  01AF  1903               	skipnz
   886  01B0  298E               	goto	l30001852
   887  01B1  0846               	movf	LockOperation@ShouldCheckConfig,w
   888  01B2  1903               	btfsc	3,2
   889  01B3  298E               	goto	l30001852
   890                           ;main.c: 488: {
   891                           ;main.c: 489: MatchKey = AvailabeKey();
   892  01B4  2428               	fcall	_AvailabeKey
   893  01B5  00FA               	movwf	_MatchKey
   894                           ;main.c: 490: if(MatchKey == 2)
   895  01B6  3A02               	xorlw	2
   896  01B7  1D03               	skipz
   897  01B8  298E               	goto	l30001852
   898                           ;main.c: 493: SlaveConfigured=0x01;
   899  01B9  210F               	fcall	_Configuration
   900  01BA                     l162:
   901                           ;main.c: 501: }
   902                           ;main.c: 502: RC1=0x00;
   903  01BA  1087               	bcf	7,1
   904                           ;main.c: 503: RC0=0x00;
   905  01BB  1007               	bcf	7,0
   906                           ;main.c: 504: DoorClose();
   907  01BC  2482               	fcall	_DoorClose
   908                           ;main.c: 505: RC2=0x00;
   909  01BD  1107               	bcf	7,2
   910  01BE                     l30001858:
   911  01BE  2538               	fcall	_CheckForiButtonDisconnect
   912  01BF  3800               	iorlw	0
   913  01C0  1D03               	skipz
   914  01C1  29BE               	goto	l30001858
   915                           ;main.c: 507: InvalidKeyCount=0x00;
   916  01C2  01F8               	clrf	_InvalidKeyCount
   917  01C3  0008               	return
   918  01C4                     l30001860:
   919                           ;main.c: 509: else
   920                           ;main.c: 510: {
   921                           ;main.c: 511: if((++InvalidKeyCount)>2)
   922  01C4  3003               	movlw	3
   923  01C5  0AF8               	incf	_InvalidKeyCount,f
   924  01C6  0278               	subwf	_InvalidKeyCount& (0+127),w
   925  01C7  1C03               	skipc
   926  01C8  29CC               	goto	l30001863
   927                           ;main.c: 512: {
   928                           ;main.c: 513: InvalidKeyCount = 0;
   929  01C9  01F8               	clrf	_InvalidKeyCount
   930                           ;main.c: 514: InvalidKeyIndication();
   931  01CA  2345               	fcall	_InvalidKeyIndication
   932  01CB  29DD               	goto	l30001870
   933  01CC                     l30001863:
   934                           ;main.c: 516: else
   935                           ;main.c: 517: {
   936                           ;main.c: 518: for(i=0;i<4;i++)
   937  01CC  01C4               	clrf	LockOperation@i
   938  01CD  01C5               	clrf	LockOperation@i+1
   939  01CE                     l30001866:
   940                           ;main.c: 519: {
   941                           ;main.c: 520: ToggleBuzzErrorLED();
   942  01CE  2520               	fcall	_ToggleBuzzErrorLED
   943                           ;main.c: 521: DelayMs(125);
   944  01CF  307D               	movlw	125
   945  01D0  00BA               	movwf	?_DelayMs
   946  01D1  01BB               	clrf	?_DelayMs+1
   947  01D2  23F4               	fcall	_DelayMs
   948  01D3  0AC4               	incf	LockOperation@i,f
   949  01D4  1903               	skipnz
   950  01D5  0AC5               	incf	LockOperation@i+1,f
   951  01D6  3000               	movlw	0
   952  01D7  0245               	subwf	LockOperation@i+1,w
   953  01D8  3004               	movlw	4
   954  01D9  1903               	skipnz
   955  01DA  0244               	subwf	LockOperation@i,w
   956  01DB  1C03               	skipc
   957  01DC  29CE               	goto	l30001866
   958  01DD                     l30001870:
   959  01DD  2538               	fcall	_CheckForiButtonDisconnect
   960  01DE  3800               	iorlw	0
   961  01DF  1903               	btfsc	3,2
   962  01E0  0008               	return
   963  01E1  29DD               	goto	l30001870
   964  01E2                     __end_of_LockOperation:
   965                           
   966                           	psect	text862
   967  0219                     __ptext862:	; =============== function _LockOperation ends ============
   968                           ; *************** function _PowerInit *****************
   969                           ; Defined at:
   970                           ;		line 18 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
   971                           ; Parameters:    Size  Location     Type
   972                           ;		None
   973                           ; Auto vars:     Size  Location     Type
   974                           ;		None
   975                           ; Return value:  Size  Location     Type
   976                           ;		None               void
   977                           ; Registers used:
   978                           ;		wreg, status,2
   979                           ; Tracked objects:
   980                           ;		On entry : 17F/0
   981                           ;		On exit  : 17F/20
   982                           ;		Unchanged: FFE80/0
   983                           ; Data sizes:     COMMON   BANK0   BANK1
   984                           ;      Locals:         0       0       0
   985                           ;      Temp:     0
   986                           ;      Total:    0
   987                           ; This function calls:
   988                           ;		Nothing
   989                           ; This function is called by:
   990                           ;		_main
   991                           ; This function uses a non-reentrant model
   992                           ; 
   993  0219                     _PowerInit:	;main.c: 13: unsigned char InvalidKeyCount = 0;
   994                           ;main.c: 15: asm("\tpsect config,class=CONFIG,delta=2"); asm("\tdw ""0x3FFC & 0x3FF7 & 0
      +                          x3FFF & 0x3FDF & 0x3FBF & 0x3CFF & 0x3BFF & 0x37FF");
   995                           ;main.c: 17: void PowerInit(void)
   996                           ;main.c: 18: {
   997                           ;main.c: 19: IRCF0=0x00;
   998                           ; Regs used in _PowerInit: [wreg+status,2]
   999  0219  1683               	bsf	3,5	;RP0=1, select bank1
  1000  021A  120F               	bcf	15,4
  1001                           ;main.c: 20: SCS=0x01;
  1002  021B  140F               	bsf	15,0
  1003                           ;main.c: 21: IRCF1=0x01;
  1004  021C  168F               	bsf	15,5
  1005                           ;main.c: 22: IRCF2=0x01;
  1006  021D  170F               	bsf	15,6
  1007                           ;main.c: 24: OSCTUNE=0x00;
  1008  021E  0190               	clrf	16
  1009                           ;main.c: 26: CM1CON0=0x00;
  1010  021F  1283               	bcf	3,5	;RP0=0, select bank2
  1011  0220  1703               	bsf	3,6	;RP1=1, select bank2
  1012  0221  0199               	clrf	25	;volatile
  1013                           ;main.c: 27: ANSEL=0x00;
  1014  0222  019E               	clrf	30
  1015                           ;main.c: 28: ANSELH=0x00;
  1016  0223  019F               	clrf	31
  1017                           ;main.c: 30: TRISC1=0x00;
  1018  0224  1683               	bsf	3,5	;RP0=1, select bank1
  1019  0225  1303               	bcf	3,6	;RP1=0, select bank1
  1020  0226  1087               	bcf	7,1
  1021                           ;main.c: 31: RC1=0x00;
  1022  0227  1283               	bcf	3,5	;RP0=0, select bank0
  1023  0228  1087               	bcf	7,1
  1024                           ;main.c: 33: TRISA5=0x01;
  1025  0229  1683               	bsf	3,5	;RP0=1, select bank1
  1026  022A  1685               	bsf	5,5
  1027                           ;main.c: 34: WPUA=0x24;
  1028  022B  3024               	movlw	36
  1029  022C  0095               	movwf	21
  1030                           ;main.c: 36: TRISC5=0x00;
  1031  022D  1287               	bcf	7,5
  1032                           ;main.c: 37: RC5=0x00;
  1033  022E  1283               	bcf	3,5	;RP0=0, select bank0
  1034  022F  1287               	bcf	7,5
  1035                           ;main.c: 38: TRISA4=0x01;
  1036  0230  1683               	bsf	3,5	;RP0=1, select bank1
  1037  0231  1605               	bsf	5,4
  1038                           ;main.c: 39: RABPU=0x00;
  1039  0232  1381               	bcf	1,7
  1040                           ;main.c: 40: TRISC0=0x00;
  1041  0233  1007               	bcf	7,0
  1042                           ;main.c: 41: TRISC2=0x00;
  1043  0234  1107               	bcf	7,2
  1044                           ;main.c: 42: TRISA2=0x01;
  1045  0235  1505               	bsf	5,2
  1046                           ;main.c: 43: RC0=0x00;
  1047  0236  1283               	bcf	3,5	;RP0=0, select bank0
  1048  0237  1007               	bcf	7,0
  1049                           ;main.c: 45: TRISC6=0x00;
  1050  0238  1683               	bsf	3,5	;RP0=1, select bank1
  1051  0239  1307               	bcf	7,6
  1052                           ;main.c: 46: TRISC7=0x00;
  1053  023A  1387               	bcf	7,7
  1054  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1055  023C  1307               	bcf	7,6
  1056  023D  1387               	bcf	7,7
  1057                           ;main.c: 50: EECON1=0x00;
  1058  023E  1683               	bsf	3,5	;RP0=1, select bank3
  1059  023F  1703               	bsf	3,6	;RP1=1, select bank3
  1060  0240  018C               	clrf	12	;volatile
  1061                           ;main.c: 52: INTCON=0x88;
  1062  0241  3088               	movlw	136
  1063  0242  1283               	bcf	3,5	;RP0=0, select bank0
  1064  0243  1303               	bcf	3,6	;RP1=0, select bank0
  1065  0244  008B               	movwf	11	;volatile
  1066                           ;main.c: 54: AutoMode=0x01;
  1067  0245  3024               	movlw	36
  1068  0246  1683               	bsf	3,5	;RP0=1, select bank1
  1069  0247  0096               	movwf	22
  1070  0248  0008               	return
  1071  0249                     __end_of_PowerInit:
  1072                           
  1073                           	psect	text863
  1074  010F                     __ptext863:	; =============== function _PowerInit ends ============
  1075                           ; *************** function _Configuration *****************
  1076                           ; Defined at:
  1077                           ;		line 325 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  1078                           ; Parameters:    Size  Location     Type
  1079                           ;		None
  1080                           ; Auto vars:     Size  Location     Type
  1081                           ;  i               1   13[BANK0 ] unsigned char 
  1082                           ;  KeyConfigure    1   12[BANK0 ] unsigned char 
  1083                           ;  key             1   11[BANK0 ] unsigned char 
  1084                           ; Return value:  Size  Location     Type
  1085                           ;		None               void
  1086                           ; Registers used:
  1087                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1088                           ; Tracked objects:
  1089                           ;		On entry : 160/0
  1090                           ;		On exit  : 60/0
  1091                           ;		Unchanged: FFE00/0
  1092                           ; Data sizes:     COMMON   BANK0   BANK1
  1093                           ;      Locals:         0       3       0
  1094                           ;      Temp:     0
  1095                           ;      Total:    3
  1096                           ; This function calls:
  1097                           ;		_BuzzerBeep
  1098                           ;		_Wait_With_LED_Blink
  1099                           ;		_ReadiButton
  1100                           ;		_AvailabeKey
  1101                           ;		_EEPROMReadKey
  1102                           ;		_strcmp
  1103                           ;		_ClearKey
  1104                           ;		_CRCCheck
  1105                           ;		_EEPROMWriteKey
  1106                           ;		_ClearAllKeys
  1107                           ;		_DelayMs
  1108                           ;		_ToggleLED
  1109                           ; This function is called by:
  1110                           ;		_LockOperation
  1111                           ; This function uses a non-reentrant model
  1112                           ; 
  1113  010F                     _Configuration:	;main.c: 324: void Configuration(void)
  1114                           ;main.c: 325: {
  1115                           ;main.c: 326: unsigned char i, key, KeyConfigured = 0;
  1116                           ; Regs used in _Configuration: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1117  010F  01C2               	clrf	Configuration@KeyConfigured
  1118                           ;main.c: 327: unsigned int k;
  1119                           ;main.c: 329: BuzzerBeep(1,1);
  1120  0110  01C0               	clrf	?_BuzzerBeep
  1121  0111  0AC0               	incf	?_BuzzerBeep,f
  1122  0112  3001               	movlw	1
  1123  0113  21E2               	fcall	_BuzzerBeep
  1124                           ;main.c: 331: Wait_With_LED_Blink();
  1125  0114  2470               	fcall	_Wait_With_LED_Blink
  1126                           ;main.c: 333: TimeCounter = 0;
  1127  0115  01FB               	clrf	_TimeCounter
  1128  0116                     l30001830:
  1129  0116  3024               	movlw	36
  1130  0117  027B               	subwf	_TimeCounter,w
  1131  0118  1803               	btfsc	3,0
  1132  0119  2977               	goto	l30001831
  1133                           ;main.c: 335: {
  1134                           ;main.c: 336: if(ReadiButton())
  1135  011A  23BC               	fcall	_ReadiButton
  1136  011B  3A00               	xorlw	0
  1137  011C  1903               	skipnz
  1138  011D  296F               	goto	l30001827
  1139                           ;main.c: 337: {
  1140                           ;main.c: 338: MatchKey = AvailabeKey();
  1141  011E  2428               	fcall	_AvailabeKey
  1142  011F  00FA               	movwf	_MatchKey
  1143                           ;main.c: 339: if(MatchKey != 2)
  1144  0120  3A02               	xorlw	2
  1145  0121  1903               	skipnz
  1146  0122  2961               	goto	l30001823
  1147                           ;main.c: 340: {
  1148                           ;main.c: 341: KeyConfigured=0x01;
  1149  0123  01C2               	clrf	Configuration@KeyConfigured
  1150  0124  0AC2               	incf	Configuration@KeyConfigured,f
  1151                           ;main.c: 342: for(i=1;i<23;i++)
  1152  0125  01C3               	clrf	Configuration@i
  1153  0126  0AC3               	incf	Configuration@i,f
  1154  0127  292D               	goto	l30001802
  1155  0128                     l30001808:
  1156  0128  0AC3               	incf	Configuration@i,f
  1157  0129  3017               	movlw	23
  1158  012A  0243               	subwf	Configuration@i,w
  1159  012B  1803               	btfsc	3,0
  1160  012C  293E               	goto	l30001810
  1161  012D                     l30001802:
  1162                           ;main.c: 343: {
  1163                           ;main.c: 344: EEPROMReadKey(i);
  1164  012D  0843               	movf	Configuration@i,w
  1165  012E  2383               	fcall	_EEPROMReadKey
  1166                           ;main.c: 345: key = strcmp(iButtonKey,EEPROMKey);
  1167  012F  3024               	movlw	_EEPROMKey& (0+255)
  1168  0130  00F1               	movwf	?_strcmp
  1169  0131  302D               	movlw	_iButtonKey& (0+255)
  1170  0132  2441               	fcall	_strcmp
  1171  0133  00C1               	movwf	Configuration@key
  1172                           ;main.c: 346: if(key)
  1173  0134  0841               	movf	Configuration@key,w
  1174  0135  1903               	btfsc	3,2
  1175  0136  2928               	goto	l30001808
  1176                           ;main.c: 347: {
  1177                           ;main.c: 348: ClearKey(i);
  1178  0137  0843               	movf	Configuration@i,w
  1179  0138  249E               	fcall	_ClearKey
  1180                           ;main.c: 349: BuzzerBeep(2,0);
  1181  0139  01C0               	clrf	?_BuzzerBeep
  1182  013A  3002               	movlw	2
  1183  013B  21E2               	fcall	_BuzzerBeep
  1184                           ;main.c: 350: TimeCounter=0x00;
  1185  013C  01FB               	clrf	_TimeCounter
  1186                           ;main.c: 352: Wait_With_LED_Blink();
  1187  013D  2470               	fcall	_Wait_With_LED_Blink
  1188  013E                     l30001810:
  1189                           ;main.c: 354: }
  1190                           ;main.c: 355: }
  1191                           ;main.c: 356: if(i==23)
  1192  013E  0843               	movf	Configuration@i,w
  1193  013F  3A17               	xorlw	23
  1194  0140  1D03               	skipz
  1195  0141  296F               	goto	l30001827
  1196                           ;main.c: 357: {
  1197                           ;main.c: 358: for(i=1;i<23;i++)
  1198  0142  01C3               	clrf	Configuration@i
  1199  0143  0AC3               	incf	Configuration@i,f
  1200  0144                     l30001814:
  1201                           ;main.c: 359: {
  1202                           ;main.c: 360: EEPROMReadKey(i);
  1203  0144  0843               	movf	Configuration@i,w
  1204  0145  2383               	fcall	_EEPROMReadKey
  1205                           ;main.c: 361: if(CRCCheck(EEPROMKey) == 0)
  1206  0146  3024               	movlw	_EEPROMKey& (0+255)
  1207  0147  229D               	fcall	_CRCCheck
  1208  0148  3800               	iorlw	0
  1209  0149  1D03               	skipz
  1210  014A  2953               	goto	l30001819
  1211                           ;main.c: 362: {
  1212                           ;main.c: 363: EEPROMWriteKey(i);
  1213  014B  0843               	movf	Configuration@i,w
  1214  014C  22C1               	fcall	_EEPROMWriteKey
  1215                           ;main.c: 364: BuzzerBeep(1,0);
  1216  014D  01C0               	clrf	?_BuzzerBeep
  1217  014E  3001               	movlw	1
  1218  014F  21E2               	fcall	_BuzzerBeep
  1219                           ;main.c: 365: TimeCounter=0x00;
  1220  0150  01FB               	clrf	_TimeCounter
  1221                           ;main.c: 367: Wait_With_LED_Blink();
  1222  0151  2470               	fcall	_Wait_With_LED_Blink
  1223  0152  2958               	goto	l30001821
  1224  0153                     l30001819:
  1225  0153  0AC3               	incf	Configuration@i,f
  1226  0154  3017               	movlw	23
  1227  0155  0243               	subwf	Configuration@i,w
  1228  0156  1C03               	skipc
  1229  0157  2944               	goto	l30001814
  1230  0158                     l30001821:
  1231                           ;main.c: 369: }
  1232                           ;main.c: 370: }
  1233                           ;main.c: 372: if(i==23)
  1234  0158  0843               	movf	Configuration@i,w
  1235  0159  3A17               	xorlw	23
  1236  015A  1D03               	skipz
  1237  015B  296F               	goto	l30001827
  1238                           ;main.c: 373: BuzzerBeep(3,1);
  1239  015C  01C0               	clrf	?_BuzzerBeep
  1240  015D  0AC0               	incf	?_BuzzerBeep,f
  1241  015E  3003               	movlw	3
  1242  015F  21E2               	fcall	_BuzzerBeep
  1243  0160  296F               	goto	l30001827
  1244  0161                     l30001823:
  1245                           ;main.c: 377: else
  1246                           ;main.c: 378: {
  1247                           ;main.c: 379: if(KeyConfigured==0)
  1248  0161  08C2               	movf	Configuration@KeyConfigured,f
  1249  0162  1D03               	skipz
  1250  0163  296B               	goto	l30001826
  1251                           ;main.c: 380: {
  1252                           ;main.c: 381: ClearAllKeys(0);
  1253  0164  3000               	movlw	0
  1254  0165  23D8               	fcall	_ClearAllKeys
  1255                           ;main.c: 382: BuzzerBeep(3,1);
  1256  0166  01C0               	clrf	?_BuzzerBeep
  1257  0167  0AC0               	incf	?_BuzzerBeep,f
  1258  0168  3003               	movlw	3
  1259  0169  21E2               	fcall	_BuzzerBeep
  1260  016A  2977               	goto	l30001831
  1261  016B                     l30001826:
  1262                           ;main.c: 384: else
  1263                           ;main.c: 385: BuzzerBeep(1,0);
  1264  016B  01C0               	clrf	?_BuzzerBeep
  1265  016C  3001               	movlw	1
  1266  016D  21E2               	fcall	_BuzzerBeep
  1267  016E  2977               	goto	l30001831
  1268  016F                     l30001827:
  1269                           ;main.c: 387: }
  1270                           ;main.c: 388: }
  1271                           ;main.c: 389: DelayMs(170+30*3);
  1272  016F  3004               	movlw	4
  1273  0170  00BA               	movwf	?_DelayMs
  1274  0171  3001               	movlw	1
  1275  0172  00BB               	movwf	?_DelayMs+1
  1276  0173  23F4               	fcall	_DelayMs
  1277                           ;main.c: 390: ToggleLED();
  1278  0174  24B9               	fcall	_ToggleLED
  1279                           ;main.c: 391: TimeCounter++;
  1280  0175  0AFB               	incf	_TimeCounter,f
  1281  0176  2916               	goto	l30001830
  1282  0177                     l30001831:
  1283                           ;main.c: 392: }
  1284                           ;main.c: 393: TimeCounter = 54;
  1285  0177  3036               	movlw	54
  1286  0178  00FB               	movwf	_TimeCounter
  1287                           ;main.c: 394: TimeCounter++;
  1288  0179  0AFB               	incf	_TimeCounter,f
  1289  017A  0008               	return
  1290  017B                     __end_of_Configuration:
  1291                           
  1292                           	psect	text864
  1293  0530                     __ptext864:	; =============== function _Configuration ends ============
  1294                           ; *************** function _ToggleBuzzLED *****************
  1295                           ; Defined at:
  1296                           ;		line 100 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  1297                           ; Parameters:    Size  Location     Type
  1298                           ;		None
  1299                           ; Auto vars:     Size  Location     Type
  1300                           ;		None
  1301                           ; Return value:  Size  Location     Type
  1302                           ;		None               void
  1303                           ; Registers used:
  1304                           ;		None
  1305                           ; Tracked objects:
  1306                           ;		On entry : 60/0
  1307                           ;		On exit  : 60/0
  1308                           ;		Unchanged: FFF9F/0
  1309                           ; Data sizes:     COMMON   BANK0   BANK1
  1310                           ;      Locals:         0       0       0
  1311                           ;      Temp:     0
  1312                           ;      Total:    0
  1313                           ; This function calls:
  1314                           ;		Nothing
  1315                           ; This function is called by:
  1316                           ;		_LockOperation
  1317                           ; This function uses a non-reentrant model
  1318                           ; 
  1319  0530                     _ToggleBuzzLED:	;main.c: 99: void ToggleBuzzLED(void)
  1320                           ;main.c: 100: {
  1321                           ;main.c: 101: if(RC0)
  1322                           ; Regs used in _ToggleBuzzLED: []
  1323  0530  1C07               	btfss	7,0
  1324  0531  2D35               	goto	l20
  1325                           ;main.c: 102: {
  1326                           ;main.c: 103: RC1=0x00;
  1327  0532  1087               	bcf	7,1
  1328                           ;main.c: 104: RC0=0x00;
  1329  0533  1007               	bcf	7,0
  1330  0534  0008               	return
  1331  0535                     l20:
  1332                           ;main.c: 106: else
  1333                           ;main.c: 107: {
  1334                           ;main.c: 108: RC1=0x01;
  1335  0535  1487               	bsf	7,1
  1336                           ;main.c: 109: RC0=0x01;
  1337  0536  1407               	bsf	7,0
  1338  0537  0008               	return
  1339  0538                     __end_of_ToggleBuzzLED:
  1340                           
  1341                           	psect	text865
  1342  0249                     __ptext865:	; =============== function _ToggleBuzzLED ends ============
  1343                           ; *************** function _DoorOpen *****************
  1344                           ; Defined at:
  1345                           ;		line 128 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  1346                           ; Parameters:    Size  Location     Type
  1347                           ;		None
  1348                           ; Auto vars:     Size  Location     Type
  1349                           ;  BattStatus      1    0[COMMON] unsigned char 
  1350                           ; Return value:  Size  Location     Type
  1351                           ;		None               void
  1352                           ; Registers used:
  1353                           ;		wreg, status,2, status,0, pclath, cstack
  1354                           ; Tracked objects:
  1355                           ;		On entry : 60/0
  1356                           ;		On exit  : 60/0
  1357                           ;		Unchanged: FFF9F/0
  1358                           ; Data sizes:     COMMON   BANK0   BANK1
  1359                           ;      Locals:         1       0       0
  1360                           ;      Temp:     0
  1361                           ;      Total:    1
  1362                           ; This function calls:
  1363                           ;		_DelayMs
  1364                           ; This function is called by:
  1365                           ;		_LockOperation
  1366                           ; This function uses a non-reentrant model
  1367                           ; 
  1368  0249                     _DoorOpen:	;main.c: 127: void DoorOpen(void)
  1369                           ;main.c: 128: {
  1370                           ;main.c: 129: unsigned char BattStatus;
  1371                           ;main.c: 130: BattStatus=0x00;
  1372                           ; Regs used in _DoorOpen: [wreg+status,2+status,0+pclath+cstack]
  1373  0249  01F0               	clrf	DoorOpen@BattStatus
  1374                           ;main.c: 131: if(RA5)
  1375  024A  1A85               	btfsc	5,5
  1376                           ;main.c: 132: BattStatus++;
  1377  024B  0AF0               	incf	DoorOpen@BattStatus,f
  1378                           ;main.c: 133: DelayMs(10);
  1379  024C  300A               	movlw	10
  1380  024D  00BA               	movwf	?_DelayMs
  1381  024E  01BB               	clrf	?_DelayMs+1
  1382  024F  23F4               	fcall	_DelayMs
  1383                           ;main.c: 134: if(RA5)
  1384  0250  1A85               	btfsc	5,5
  1385                           ;main.c: 135: BattStatus++;
  1386  0251  0AF0               	incf	DoorOpen@BattStatus,f
  1387  0252  1707               	bsf	7,6
  1388  0253  1787               	bsf	7,7
  1389                           ;main.c: 140: DelayMs(10);
  1390  0254  300A               	movlw	10
  1391  0255  00BA               	movwf	?_DelayMs
  1392  0256  01BB               	clrf	?_DelayMs+1
  1393  0257  23F4               	fcall	_DelayMs
  1394  0258  1707               	bsf	7,6
  1395  0259  1387               	bcf	7,7
  1396                           ;main.c: 143: DelayMs(195);
  1397  025A  30C3               	movlw	195
  1398  025B  00BA               	movwf	?_DelayMs
  1399  025C  01BB               	clrf	?_DelayMs+1
  1400  025D  23F4               	fcall	_DelayMs
  1401                           ;main.c: 144: }
  1402                           ;main.c: 145: if(!RA5)
  1403  025E  1E85               	btfss	5,5
  1404                           ;main.c: 146: BattStatus++;
  1405  025F  0AF0               	incf	DoorOpen@BattStatus,f
  1406                           ;main.c: 147: DelayMs(10);
  1407  0260  300A               	movlw	10
  1408  0261  00BA               	movwf	?_DelayMs
  1409  0262  01BB               	clrf	?_DelayMs+1
  1410  0263  23F4               	fcall	_DelayMs
  1411                           ;main.c: 148: if(!RA5)
  1412  0264  1E85               	btfss	5,5
  1413                           ;main.c: 149: BattStatus++;
  1414  0265  0AF0               	incf	DoorOpen@BattStatus,f
  1415                           ;main.c: 150: DelayMs(195);
  1416  0266  30C3               	movlw	195
  1417  0267  00BA               	movwf	?_DelayMs
  1418  0268  01BB               	clrf	?_DelayMs+1
  1419  0269  23F4               	fcall	_DelayMs
  1420  026A  1307               	bcf	7,6
  1421  026B  1387               	bcf	7,7
  1422                           ;main.c: 155: if(BattStatus == 4)
  1423  026C  0870               	movf	DoorOpen@BattStatus,w
  1424  026D  3A04               	xorlw	4
  1425  026E  1D03               	skipz
  1426  026F  2A73               	goto	l30001543
  1427                           ;main.c: 156: LowBatt=0x01;
  1428  0270  01F9               	clrf	_LowBatt
  1429  0271  0AF9               	incf	_LowBatt,f
  1430  0272  0008               	return
  1431  0273                     l30001543:
  1432                           ;main.c: 157: else
  1433                           ;main.c: 158: LowBatt=0x00;
  1434  0273  01F9               	clrf	_LowBatt
  1435  0274  0008               	return
  1436  0275                     __end_of_DoorOpen:
  1437                           
  1438                           	psect	text866
  1439  0345                     __ptext866:	; =============== function _DoorOpen ends ============
  1440                           ; *************** function _InvalidKeyIndication *****************
  1441                           ; Defined at:
  1442                           ;		line 398 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  1443                           ; Parameters:    Size  Location     Type
  1444                           ;		None
  1445                           ; Auto vars:     Size  Location     Type
  1446                           ;		None
  1447                           ; Return value:  Size  Location     Type
  1448                           ;		None               void
  1449                           ; Registers used:
  1450                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1451                           ; Tracked objects:
  1452                           ;		On entry : 160/0
  1453                           ;		On exit  : 60/0
  1454                           ;		Unchanged: FFE9F/0
  1455                           ; Data sizes:     COMMON   BANK0   BANK1
  1456                           ;      Locals:         0       0       0
  1457                           ;      Temp:     0
  1458                           ;      Total:    0
  1459                           ; This function calls:
  1460                           ;		_DelayMs
  1461                           ;		_ReadiButton
  1462                           ;		_AvailabeKey
  1463                           ; This function is called by:
  1464                           ;		_LockOperation
  1465                           ; This function uses a non-reentrant model
  1466                           ; 
  1467  0345                     _InvalidKeyIndication:	;main.c: 397: void InvalidKeyIndication(void)
  1468                           ;main.c: 398: {
  1469                           ;main.c: 399: RC1=0x01;
  1470                           ; Regs used in _InvalidKeyIndication: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1471  0345  1487               	bsf	7,1
  1472                           ;main.c: 400: RC0=0x01;
  1473  0346  1407               	bsf	7,0
  1474                           ;main.c: 401: TimeCounter=0x00;
  1475  0347  01FB               	clrf	_TimeCounter
  1476  0348                     l30001894:
  1477  0348  30F0               	movlw	240
  1478  0349  027B               	subwf	_TimeCounter,w
  1479  034A  1803               	btfsc	3,0
  1480  034B  2B62               	goto	l145
  1481                           ;main.c: 403: {
  1482                           ;main.c: 404: DelayMs(420);
  1483  034C  30A4               	movlw	164
  1484  034D  00BA               	movwf	?_DelayMs
  1485  034E  3001               	movlw	1
  1486  034F  00BB               	movwf	?_DelayMs+1
  1487  0350  23F4               	fcall	_DelayMs
  1488                           ;main.c: 405: TimeCounter++;
  1489  0351  0AFB               	incf	_TimeCounter,f
  1490                           ;main.c: 407: if(ReadiButton())
  1491  0352  23BC               	fcall	_ReadiButton
  1492  0353  3A00               	xorlw	0
  1493  0354  1903               	skipnz
  1494  0355  2B48               	goto	l30001894
  1495                           ;main.c: 408: {
  1496                           ;main.c: 409: MatchKey = AvailabeKey();
  1497  0356  2428               	fcall	_AvailabeKey
  1498  0357  00FA               	movwf	_MatchKey
  1499                           ;main.c: 410: if(MatchKey != 0)
  1500  0358  087A               	movf	_MatchKey,w
  1501  0359  1903               	btfsc	3,2
  1502  035A  2B48               	goto	l30001894
  1503                           ;main.c: 411: {
  1504                           ;main.c: 412: RC1=0x00;
  1505  035B  1087               	bcf	7,1
  1506                           ;main.c: 413: RC0=0x00;
  1507  035C  1007               	bcf	7,0
  1508                           ;main.c: 414: DelayMs(500);
  1509  035D  30F4               	movlw	244
  1510  035E  00BA               	movwf	?_DelayMs
  1511  035F  3001               	movlw	1
  1512  0360  00BB               	movwf	?_DelayMs+1
  1513  0361  23F4               	fcall	_DelayMs
  1514  0362                     l145:
  1515                           ;main.c: 416: }
  1516                           ;main.c: 417: }
  1517                           ;main.c: 418: }
  1518                           ;main.c: 419: RC1=0x00;
  1519  0362  1087               	bcf	7,1
  1520                           ;main.c: 420: RC0=0x00;
  1521  0363  1007               	bcf	7,0
  1522  0364  0008               	return
  1523  0365                     __end_of_InvalidKeyIndication:
  1524                           
  1525                           	psect	text867
  1526  0520                     __ptext867:	; =============== function _InvalidKeyIndication ends ============
  1527                           ; *************** function _ToggleBuzzErrorLED *****************
  1528                           ; Defined at:
  1529                           ;		line 114 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  1530                           ; Parameters:    Size  Location     Type
  1531                           ;		None
  1532                           ; Auto vars:     Size  Location     Type
  1533                           ;		None
  1534                           ; Return value:  Size  Location     Type
  1535                           ;		None               void
  1536                           ; Registers used:
  1537                           ;		None
  1538                           ; Tracked objects:
  1539                           ;		On entry : 60/0
  1540                           ;		On exit  : 60/0
  1541                           ;		Unchanged: FFF9F/0
  1542                           ; Data sizes:     COMMON   BANK0   BANK1
  1543                           ;      Locals:         0       0       0
  1544                           ;      Temp:     0
  1545                           ;      Total:    0
  1546                           ; This function calls:
  1547                           ;		Nothing
  1548                           ; This function is called by:
  1549                           ;		_LockOperation
  1550                           ; This function uses a non-reentrant model
  1551                           ; 
  1552  0520                     _ToggleBuzzErrorLED:	;main.c: 113: void ToggleBuzzErrorLED(void)
  1553                           ;main.c: 114: {
  1554                           ;main.c: 115: if(RC2)
  1555                           ; Regs used in _ToggleBuzzErrorLED: []
  1556  0520  1D07               	btfss	7,2
  1557  0521  2D25               	goto	l23
  1558                           ;main.c: 116: {
  1559                           ;main.c: 117: RC1=0x00;
  1560  0522  1087               	bcf	7,1
  1561                           ;main.c: 118: RC2=0x00;
  1562  0523  1107               	bcf	7,2
  1563  0524  0008               	return
  1564  0525                     l23:
  1565                           ;main.c: 120: else
  1566                           ;main.c: 121: {
  1567                           ;main.c: 122: RC1=0x01;
  1568  0525  1487               	bsf	7,1
  1569                           ;main.c: 123: RC2=0x01;
  1570  0526  1507               	bsf	7,2
  1571  0527  0008               	return
  1572  0528                     __end_of_ToggleBuzzErrorLED:
  1573                           
  1574                           	psect	text868
  1575  0516                     __ptext868:	; =============== function _ToggleBuzzErrorLED ends ============
  1576                           ; *************** function _GoToSleep *****************
  1577                           ; Defined at:
  1578                           ;		line 67 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  1579                           ; Parameters:    Size  Location     Type
  1580                           ;		None
  1581                           ; Auto vars:     Size  Location     Type
  1582                           ;		None
  1583                           ; Return value:  Size  Location     Type
  1584                           ;		None               void
  1585                           ; Registers used:
  1586                           ;		wreg, status,2, status,0, pclath, cstack
  1587                           ; Tracked objects:
  1588                           ;		On entry : 60/0
  1589                           ;		On exit  : 60/0
  1590                           ;		Unchanged: FFF9F/0
  1591                           ; Data sizes:     COMMON   BANK0   BANK1
  1592                           ;      Locals:         0       0       0
  1593                           ;      Temp:     0
  1594                           ;      Total:    0
  1595                           ; This function calls:
  1596                           ;		_DelayMs
  1597                           ; This function is called by:
  1598                           ;		_ConfigureMasterKey
  1599                           ;		_main
  1600                           ; This function uses a non-reentrant model
  1601                           ; 
  1602  0516                     _GoToSleep:	;main.c: 66: void GoToSleep(void)
  1603                           ;main.c: 67: {
  1604                           ; Regs used in _GoToSleep: [wreg+status,2+status,0+pclath+cstack]
  1605  0516  1683               	bsf	3,5	;#
  1606  0517  1303               	bcf	3,6	;#
  1607  0518  1505               	bsf	5,2	;#
  1608  0519  3024               	movlw	36	;#
  1609  051A  0096               	movwf	22	;#
  1610  051B  0063               	sleep	;#
  1611                           ;main.c: 80: DelayMs(80);
  1612  051C  3050               	movlw	80
  1613  051D  00BA               	movwf	?_DelayMs
  1614  051E  01BB               	clrf	?_DelayMs+1
  1615  051F  2BF4               	ljmp	l30001511
  1616  0520                     __end_of_GoToSleep:
  1617                           
  1618                           	psect	text869
  1619  0482                     __ptext869:	; =============== function _GoToSleep ends ============
  1620                           ; *************** function _DoorClose *****************
  1621                           ; Defined at:
  1622                           ;		line 162 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  1623                           ; Parameters:    Size  Location     Type
  1624                           ;		None
  1625                           ; Auto vars:     Size  Location     Type
  1626                           ;		None
  1627                           ; Return value:  Size  Location     Type
  1628                           ;		None               void
  1629                           ; Registers used:
  1630                           ;		wreg, status,2, status,0, pclath, cstack
  1631                           ; Tracked objects:
  1632                           ;		On entry : 60/0
  1633                           ;		On exit  : 60/0
  1634                           ;		Unchanged: FFF9F/0
  1635                           ; Data sizes:     COMMON   BANK0   BANK1
  1636                           ;      Locals:         0       0       0
  1637                           ;      Temp:     0
  1638                           ;      Total:    0
  1639                           ; This function calls:
  1640                           ;		_CHK_LOW_BAT_OPEN
  1641                           ;		_DelayMs
  1642                           ; This function is called by:
  1643                           ;		_LockOperation
  1644                           ; This function uses a non-reentrant model
  1645                           ; 
  1646  0482                     _DoorClose:	;main.c: 161: void DoorClose(void)
  1647                           ;main.c: 162: {
  1648                           ;main.c: 163: CHK_LOW_BAT_OPEN();
  1649                           ; Regs used in _DoorClose: [wreg+status,2+status,0+pclath+cstack]
  1650  0482  2275               	fcall	_CHK_LOW_BAT_OPEN
  1651                           ;main.c: 164: if(LowBatt)return;;
  1652  0483  0879               	movf	_LowBatt,w
  1653  0484  1D03               	skipz
  1654  0485  0008               	return
  1655  0486  1307               	bcf	7,6
  1656  0487  1787               	bsf	7,7
  1657                           ;main.c: 168: DelayMs(400);
  1658  0488  3090               	movlw	144
  1659  0489  00BA               	movwf	?_DelayMs
  1660  048A  3001               	movlw	1
  1661  048B  00BB               	movwf	?_DelayMs+1
  1662  048C  23F4               	fcall	_DelayMs
  1663  048D  1307               	bcf	7,6
  1664  048E  1387               	bcf	7,7
  1665  048F  0008               	return
  1666  0490                     __end_of_DoorClose:
  1667                           
  1668                           	psect	text870
  1669  03D8                     __ptext870:	; =============== function _DoorClose ends ============
  1670                           ; *************** function _ClearAllKeys *****************
  1671                           ; Defined at:
  1672                           ;		line 288 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  1673                           ; Parameters:    Size  Location     Type
  1674                           ;  Master_Also     1    wreg     unsigned char 
  1675                           ; Auto vars:     Size  Location     Type
  1676                           ;  Master_Also     1    6[BANK0 ] unsigned char 
  1677                           ;  i               1    7[BANK0 ] unsigned char 
  1678                           ; Return value:  Size  Location     Type
  1679                           ;		None               void
  1680                           ; Registers used:
  1681                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1682                           ; Tracked objects:
  1683                           ;		On entry : 0/60
  1684                           ;		On exit  : 60/0
  1685                           ;		Unchanged: FFE9F/0
  1686                           ; Data sizes:     COMMON   BANK0   BANK1
  1687                           ;      Locals:         0       2       0
  1688                           ;      Temp:     0
  1689                           ;      Total:    2
  1690                           ; This function calls:
  1691                           ;		_EEPROMWriteKeyByte
  1692                           ; This function is called by:
  1693                           ;		_Configuration
  1694                           ;		_main
  1695                           ; This function uses a non-reentrant model
  1696                           ; 
  1697  03D8                     _ClearAllKeys:	;main.c: 287: void ClearAllKeys(unsigned char Master_Also)
  1698                           ;main.c: 288: {
  1699                           ; Regs used in _ClearAllKeys: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1700                           ;ClearAllKeys@Master_Also stored from wreg
  1701  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  1702  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  1703  03DA  00BC               	movwf	ClearAllKeys@Master_Also
  1704                           ;main.c: 289: unsigned char i;
  1705                           ;main.c: 291: for(i=0;i<8;i++)
  1706  03DB  01BD               	clrf	ClearAllKeys@i
  1707  03DC                     l30001570:
  1708                           ;main.c: 292: {
  1709                           ;main.c: 293: iButtonKey[i]=0x55;
  1710  03DC  083D               	movf	ClearAllKeys@i,w
  1711  03DD  3E2D               	addlw	_iButtonKey& (0+255)
  1712  03DE  0084               	movwf	4
  1713  03DF  3055               	movlw	85
  1714  03E0  1383               	bcf	3,7	;select IRP bank0
  1715  03E1  0080               	movwf	0
  1716  03E2  0ABD               	incf	ClearAllKeys@i,f
  1717  03E3  3008               	movlw	8
  1718  03E4  023D               	subwf	ClearAllKeys@i,w
  1719  03E5  1C03               	skipc
  1720  03E6  2BDC               	goto	l30001570
  1721                           ;main.c: 294: }
  1722                           ;main.c: 295: i=0x01;
  1723  03E7  01BD               	clrf	ClearAllKeys@i
  1724  03E8  0ABD               	incf	ClearAllKeys@i,f
  1725                           ;main.c: 296: if(Master_Also)
  1726  03E9  083C               	movf	ClearAllKeys@Master_Also,w
  1727  03EA  1D03               	skipz
  1728                           ;main.c: 297: i=0x00;
  1729  03EB  01BD               	clrf	ClearAllKeys@i
  1730  03EC                     l30001575:
  1731                           ;main.c: 298: for(;i<23;i++)
  1732  03EC  3017               	movlw	23
  1733  03ED  023D               	subwf	ClearAllKeys@i,w
  1734  03EE  1803               	btfsc	3,0
  1735  03EF  0008               	return
  1736                           ;main.c: 299: {
  1737                           ;main.c: 300: EEPROMWriteKeyByte(i);
  1738  03F0  083D               	movf	ClearAllKeys@i,w
  1739  03F1  2459               	fcall	_EEPROMWriteKeyByte
  1740  03F2  0ABD               	incf	ClearAllKeys@i,f
  1741  03F3  2BEC               	goto	l30001575
  1742  03F4                     __end_of_ClearAllKeys:
  1743                           
  1744                           	psect	text871
  1745  0275                     __ptext871:	; =============== function _ClearAllKeys ends ============
  1746                           ; *************** function _CHK_LOW_BAT_OPEN *****************
  1747                           ; Defined at:
  1748                           ;		line 530 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  1749                           ; Parameters:    Size  Location     Type
  1750                           ;		None
  1751                           ; Auto vars:     Size  Location     Type
  1752                           ;		None
  1753                           ; Return value:  Size  Location     Type
  1754                           ;		None               void
  1755                           ; Registers used:
  1756                           ;		wreg, status,2, status,0, pclath, cstack
  1757                           ; Tracked objects:
  1758                           ;		On entry : 60/0
  1759                           ;		On exit  : 60/0
  1760                           ;		Unchanged: FFF9F/0
  1761                           ; Data sizes:     COMMON   BANK0   BANK1
  1762                           ;      Locals:         0       0       0
  1763                           ;      Temp:     0
  1764                           ;      Total:    0
  1765                           ; This function calls:
  1766                           ;		_ReadEEPROM
  1767                           ;		_WriteEEPROM
  1768                           ;		_DelayMs
  1769                           ; This function is called by:
  1770                           ;		_DoorClose
  1771                           ; This function uses a non-reentrant model
  1772                           ; 
  1773  0275                     _CHK_LOW_BAT_OPEN:	;main.c: 529: void CHK_LOW_BAT_OPEN(void)
  1774                           ;main.c: 530: {
  1775                           ;main.c: 531: DataEEAddr = 0xFF;
  1776                           ; Regs used in _CHK_LOW_BAT_OPEN: [wreg+status,2+status,0+pclath+cstack]
  1777  0275  30FF               	movlw	255
  1778  0276  00A0               	movwf	_DataEEAddr
  1779  0277  01A1               	clrf	_DataEEAddr+1
  1780                           ;main.c: 532: ReadEEPROM();
  1781  0278  250B               	fcall	_ReadEEPROM
  1782                           ;main.c: 534: if(LowBatt)
  1783  0279  0879               	movf	_LowBatt,w
  1784  027A  1903               	btfsc	3,2
  1785  027B  2A8E               	goto	l30001617
  1786                           ;main.c: 535: {
  1787                           ;main.c: 536: if(DataEEData >= 0x03)
  1788  027C  3000               	movlw	0
  1789  027D  0277               	subwf	_DataEEData+1,w
  1790  027E  3003               	movlw	3
  1791  027F  1903               	skipnz
  1792  0280  0276               	subwf	_DataEEData,w
  1793                           ;main.c: 537: LowBatt = 0x01;
  1794  0281  01F9               	clrf	_LowBatt
  1795  0282  1C03               	skipc
  1796  0283  2A86               	goto	L1
  1797  0284  0AF9               	incf	_LowBatt,f
  1798  0285  2A96               	goto	l30001619
  1799  0286                     L1:	;main.c: 538: else
  1800                           ;main.c: 539: {
  1801                           ;main.c: 540: LowBatt = 0x00;
  1802                           ;main.c: 541: DataEEAddr = 0xFF;
  1803  0286  30FF               	movlw	255
  1804  0287  1303               	bcf	3,6	;RP1=0, select bank0
  1805  0288  00A0               	movwf	_DataEEAddr
  1806  0289  01A1               	clrf	_DataEEAddr+1
  1807                           ;main.c: 542: DataEEData++;
  1808  028A  0AF6               	incf	_DataEEData,f
  1809  028B  1903               	skipnz
  1810  028C  0AF7               	incf	_DataEEData+1,f
  1811  028D  2A96               	goto	l30001619
  1812  028E                     l30001617:
  1813                           ;main.c: 545: else
  1814                           ;main.c: 546: {
  1815                           ;main.c: 547: if(DataEEData > 0x00)
  1816  028E  0877               	movf	_DataEEData+1,w
  1817  028F  0476               	iorwf	_DataEEData,w
  1818  0290  1903               	skipnz
  1819  0291  2A96               	goto	l30001619
  1820                           ;main.c: 548: {
  1821                           ;main.c: 549: DataEEData--;
  1822  0292  3001               	movlw	1
  1823  0293  02F6               	subwf	_DataEEData,f
  1824  0294  1C03               	skipc
  1825  0295  03F7               	decf	_DataEEData+1,f
  1826  0296                     l30001619:
  1827                           ;main.c: 550: }
  1828                           ;main.c: 551: }
  1829                           ;main.c: 552: WriteEEPROM();
  1830  0296  23A0               	fcall	_WriteEEPROM
  1831                           ;main.c: 553: DelayMs(10);
  1832  0297  300A               	movlw	10
  1833  0298  1283               	bcf	3,5	;RP0=0, select bank0
  1834  0299  1303               	bcf	3,6	;RP1=0, select bank0
  1835  029A  00BA               	movwf	?_DelayMs
  1836  029B  01BB               	clrf	?_DelayMs+1
  1837  029C  2BF4               	ljmp	l30001511
  1838  029D                     __end_of_CHK_LOW_BAT_OPEN:
  1839                           
  1840                           	psect	text872
  1841  049E                     __ptext872:	; =============== function _CHK_LOW_BAT_OPEN ends ============
  1842                           ; *************** function _ClearKey *****************
  1843                           ; Defined at:
  1844                           ;		line 305 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  1845                           ; Parameters:    Size  Location     Type
  1846                           ;  KeyNum          1    wreg     unsigned char 
  1847                           ; Auto vars:     Size  Location     Type
  1848                           ;  KeyNum          1    6[BANK0 ] unsigned char 
  1849                           ;  i               1    7[BANK0 ] unsigned char 
  1850                           ; Return value:  Size  Location     Type
  1851                           ;		None               void
  1852                           ; Registers used:
  1853                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1854                           ; Tracked objects:
  1855                           ;		On entry : 160/0
  1856                           ;		On exit  : 160/0
  1857                           ;		Unchanged: FFE9F/0
  1858                           ; Data sizes:     COMMON   BANK0   BANK1
  1859                           ;      Locals:         0       2       0
  1860                           ;      Temp:     0
  1861                           ;      Total:    2
  1862                           ; This function calls:
  1863                           ;		_EEPROMWriteKeyByte
  1864                           ; This function is called by:
  1865                           ;		_Configuration
  1866                           ; This function uses a non-reentrant model
  1867                           ; 
  1868  049E                     _ClearKey:	;main.c: 304: void ClearKey(unsigned char KeyNum)
  1869                           ;main.c: 305: {
  1870                           ; Regs used in _ClearKey: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1871                           ;ClearKey@KeyNum stored from wreg
  1872  049E  00BC               	movwf	ClearKey@KeyNum
  1873                           ;main.c: 306: unsigned char i;
  1874                           ;main.c: 307: for(i=0;i<8;i++)
  1875  049F  01BD               	clrf	ClearKey@i
  1876  04A0                     l30001583:
  1877                           ;main.c: 308: {
  1878                           ;main.c: 309: iButtonKey[i]=0x55;
  1879  04A0  083D               	movf	ClearKey@i,w
  1880  04A1  3E2D               	addlw	_iButtonKey& (0+255)
  1881  04A2  0084               	movwf	4
  1882  04A3  3055               	movlw	85
  1883  04A4  0080               	movwf	0
  1884  04A5  0ABD               	incf	ClearKey@i,f
  1885  04A6  3008               	movlw	8
  1886  04A7  023D               	subwf	ClearKey@i,w
  1887  04A8  1C03               	skipc
  1888  04A9  2CA0               	goto	l30001583
  1889                           ;main.c: 310: }
  1890                           ;main.c: 311: EEPROMWriteKeyByte(KeyNum);
  1891  04AA  083C               	movf	ClearKey@KeyNum,w
  1892  04AB  2C59               	ljmp	_EEPROMWriteKeyByte
  1893  04AC                     __end_of_ClearKey:
  1894                           
  1895                           	psect	text873
  1896  0428                     __ptext873:	; =============== function _ClearKey ends ============
  1897                           ; *************** function _AvailabeKey *****************
  1898                           ; Defined at:
  1899                           ;		line 270 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  1900                           ; Parameters:    Size  Location     Type
  1901                           ;		None
  1902                           ; Auto vars:     Size  Location     Type
  1903                           ;  i               1    3[BANK0 ] unsigned char 
  1904                           ;  key             1    2[BANK0 ] unsigned char 
  1905                           ; Return value:  Size  Location     Type
  1906                           ;                  1    wreg      unsigned char 
  1907                           ; Registers used:
  1908                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1909                           ; Tracked objects:
  1910                           ;		On entry : 60/0
  1911                           ;		On exit  : 160/0
  1912                           ;		Unchanged: FFE9F/0
  1913                           ; Data sizes:     COMMON   BANK0   BANK1
  1914                           ;      Locals:         0       2       0
  1915                           ;      Temp:     0
  1916                           ;      Total:    2
  1917                           ; This function calls:
  1918                           ;		_EEPROMReadKey
  1919                           ;		_strcmp
  1920                           ; This function is called by:
  1921                           ;		_Configuration
  1922                           ;		_InvalidKeyIndication
  1923                           ;		_LockOperation
  1924                           ; This function uses a non-reentrant model
  1925                           ; 
  1926  0428                     _AvailabeKey:	;main.c: 269: unsigned char AvailabeKey(void)
  1927                           ;main.c: 270: {
  1928                           ;main.c: 271: unsigned char i, key;
  1929                           ;main.c: 272: for(i=0;i<23;i++)
  1930                           ; Regs used in _AvailabeKey: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1931  0428  01B9               	clrf	AvailabeKey@i
  1932  0429  2C2F               	goto	l30001705
  1933  042A                     l30001708:
  1934  042A  0AB9               	incf	AvailabeKey@i,f
  1935  042B  3017               	movlw	23
  1936  042C  0239               	subwf	AvailabeKey@i,w
  1937  042D  1803               	btfsc	3,0
  1938  042E  2C39               	goto	l30001710
  1939  042F                     l30001705:
  1940                           ;main.c: 273: {
  1941                           ;main.c: 274: EEPROMReadKey(i);
  1942  042F  0839               	movf	AvailabeKey@i,w
  1943  0430  2383               	fcall	_EEPROMReadKey
  1944                           ;main.c: 275: key = strcmp(iButtonKey,EEPROMKey);
  1945  0431  3024               	movlw	_EEPROMKey& (0+255)
  1946  0432  00F1               	movwf	?_strcmp
  1947  0433  302D               	movlw	_iButtonKey& (0+255)
  1948  0434  2441               	fcall	_strcmp
  1949  0435  00B8               	movwf	AvailabeKey@key
  1950                           ;main.c: 276: if(key)
  1951  0436  0838               	movf	AvailabeKey@key,w
  1952  0437  1903               	btfsc	3,2
  1953  0438  2C2A               	goto	l30001708
  1954  0439                     l30001710:
  1955                           ;main.c: 278: }
  1956                           ;main.c: 279: if(i == 0)
  1957  0439  08B9               	movf	AvailabeKey@i,f
  1958  043A  1903               	btfsc	3,2
  1959                           ;main.c: 280: return(2);
  1960  043B  3402               	retlw	2
  1961                           ;main.c: 281: else if(i < 23)
  1962  043C  3017               	movlw	23
  1963  043D  0239               	subwf	AvailabeKey@i,w
  1964  043E  1C03               	btfss	3,0
  1965                           ;main.c: 282: return(1);
  1966  043F  3401               	retlw	1
  1967                           ;main.c: 283: else
  1968                           ;main.c: 284: return(0);
  1969  0440  3400               	retlw	0
  1970  0441                     __end_of_AvailabeKey:
  1971                           
  1972                           	psect	text874
  1973  0470                     __ptext874:	; =============== function _AvailabeKey ends ============
  1974                           ; *************** function _Wait_With_LED_Blink *****************
  1975                           ; Defined at:
  1976                           ;		line 315 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  1977                           ; Parameters:    Size  Location     Type
  1978                           ;		None
  1979                           ; Auto vars:     Size  Location     Type
  1980                           ;  k               2    0[BANK0 ] unsigned int 
  1981                           ; Return value:  Size  Location     Type
  1982                           ;		None               void
  1983                           ; Registers used:
  1984                           ;		wreg, status,2, status,0, pclath, cstack
  1985                           ; Tracked objects:
  1986                           ;		On entry : 60/0
  1987                           ;		On exit  : 60/0
  1988                           ;		Unchanged: FFF9F/0
  1989                           ; Data sizes:     COMMON   BANK0   BANK1
  1990                           ;      Locals:         0       2       0
  1991                           ;      Temp:     0
  1992                           ;      Total:    2
  1993                           ; This function calls:
  1994                           ;		_ToggleLED
  1995                           ;		_CheckForiButtonDisconnect
  1996                           ; This function is called by:
  1997                           ;		_Configuration
  1998                           ;		_ConfigureMasterKey
  1999                           ; This function uses a non-reentrant model
  2000                           ; 
  2001  0470                     _Wait_With_LED_Blink:	;main.c: 314: void Wait_With_LED_Blink(void)
  2002                           ;main.c: 315: {
  2003  0470                     l30001929:	; Regs used in _Wait_With_LED_Blink: [wreg+status,2+status,0+pclath+cstack]
  2004  0470  2538               	fcall	_CheckForiButtonDisconnect
  2005  0471  3800               	iorlw	0
  2006  0472  1903               	btfsc	3,2
  2007  0473  0008               	return
  2008                           ;main.c: 318: {
  2009                           ;main.c: 319: for(k=0;k<13500;k++);
  2010  0474  01B6               	clrf	Wait_With_LED_Blink@k
  2011  0475  01B7               	clrf	Wait_With_LED_Blink@k+1
  2012  0476                     l30001926:
  2013  0476  0AB6               	incf	Wait_With_LED_Blink@k,f
  2014  0477  1903               	skipnz
  2015  0478  0AB7               	incf	Wait_With_LED_Blink@k+1,f
  2016  0479  3034               	movlw	52
  2017  047A  0237               	subwf	Wait_With_LED_Blink@k+1,w
  2018  047B  30BC               	movlw	188
  2019  047C  1903               	skipnz
  2020  047D  0236               	subwf	Wait_With_LED_Blink@k,w
  2021  047E  1C03               	skipc
  2022  047F  2C76               	goto	l30001926
  2023                           ;main.c: 320: ToggleLED();
  2024  0480  24B9               	fcall	_ToggleLED
  2025  0481  2C70               	goto	l30001929
  2026  0482                     __end_of_Wait_With_LED_Blink:
  2027                           
  2028                           	psect	text875
  2029  03BC                     __ptext875:	; =============== function _Wait_With_LED_Blink ends ============
  2030                           ; *************** function _ReadiButton *****************
  2031                           ; Defined at:
  2032                           ;		line 43 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\OneWire.
      +                          c"
  2033                           ; Parameters:    Size  Location     Type
  2034                           ;		None
  2035                           ; Auto vars:     Size  Location     Type
  2036                           ;  n               1    5[BANK0 ] unsigned char 
  2037                           ;  iButtonPrese    1    4[BANK0 ] unsigned char 
  2038                           ; Return value:  Size  Location     Type
  2039                           ;                  1    wreg      unsigned char 
  2040                           ; Registers used:
  2041                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2042                           ; Tracked objects:
  2043                           ;		On entry : 60/0
  2044                           ;		On exit  : 60/0
  2045                           ;		Unchanged: FFE9F/0
  2046                           ; Data sizes:     COMMON   BANK0   BANK1
  2047                           ;      Locals:         0       2       0
  2048                           ;      Temp:     0
  2049                           ;      Total:    2
  2050                           ; This function calls:
  2051                           ;		_InitiButton
  2052                           ;		_WriteByteToiButton
  2053                           ;		_ReadByteToiButton
  2054                           ;		_CRCCheck
  2055                           ; This function is called by:
  2056                           ;		_Configuration
  2057                           ;		_InvalidKeyIndication
  2058                           ;		_ConfigureMasterKey
  2059                           ;		_LockOperation
  2060                           ; This function uses a non-reentrant model
  2061                           ; 
  2062  03BC                     _ReadiButton:	;OneWire.c: 42: unsigned char ReadiButton(void)
  2063                           ;OneWire.c: 43: {
  2064                           ;OneWire.c: 45: iButtonPresent = InitiButton();
  2065                           ; Regs used in _ReadiButton: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2066  03BC  22E3               	fcall	_InitiButton
  2067  03BD  00BA               	movwf	ReadiButton@iButtonPresent
  2068                           ;OneWire.c: 46: if(iButtonPresent)
  2069  03BE  083A               	movf	ReadiButton@iButtonPresent,w
  2070  03BF  1903               	btfsc	3,2
  2071  03C0  2BD6               	goto	l30001791
  2072                           ;OneWire.c: 47: {
  2073                           ;OneWire.c: 48: WriteByteToiButton(0x33);
  2074  03C1  3033               	movlw	51
  2075  03C2  240E               	fcall	_WriteByteToiButton
  2076                           ;OneWire.c: 49: for (n=0; n<8; n++)
  2077  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2078  03C4  01BB               	clrf	ReadiButton@n
  2079  03C5                     l30001782:
  2080                           ;OneWire.c: 50: iButtonKey[n]=ReadByteToiButton();
  2081  03C5  083B               	movf	ReadiButton@n,w
  2082  03C6  3E2D               	addlw	_iButtonKey& (0+255)
  2083  03C7  0084               	movwf	4
  2084  03C8  2365               	fcall	_ReadByteToiButton
  2085  03C9  1383               	bcf	3,7	;select IRP bank0
  2086  03CA  0080               	movwf	0
  2087  03CB  0ABB               	incf	ReadiButton@n,f
  2088  03CC  3008               	movlw	8
  2089  03CD  023B               	subwf	ReadiButton@n,w
  2090  03CE  1C03               	skipc
  2091  03CF  2BC5               	goto	l30001782
  2092                           ;OneWire.c: 52: if(CRCCheck(iButtonKey))
  2093  03D0  302D               	movlw	_iButtonKey& (0+255)
  2094  03D1  229D               	fcall	_CRCCheck
  2095  03D2  3A00               	xorlw	0
  2096  03D3  1D03               	btfss	3,2
  2097                           ;OneWire.c: 53: return(1);
  2098  03D4  3401               	retlw	1
  2099                           ;OneWire.c: 54: else
  2100                           ;OneWire.c: 55: return(0);
  2101  03D5  3400               	retlw	0
  2102  03D6                     l30001791:
  2103                           ;OneWire.c: 56: }
  2104                           ;OneWire.c: 57: return(iButtonPresent);
  2105  03D6  083A               	movf	ReadiButton@iButtonPresent,w
  2106  03D7  0008               	return
  2107  03D8                     __end_of_ReadiButton:
  2108                           
  2109                           	psect	text876
  2110  02C1                     __ptext876:	; =============== function _ReadiButton ends ============
  2111                           ; *************** function _EEPROMWriteKey *****************
  2112                           ; Defined at:
  2113                           ;		line 241 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  2114                           ; Parameters:    Size  Location     Type
  2115                           ;  WriteAddress    1    wreg     unsigned char 
  2116                           ; Auto vars:     Size  Location     Type
  2117                           ;  WriteAddress    1    0[COMMON] unsigned char 
  2118                           ;  KeyLength       1    1[COMMON] unsigned char 
  2119                           ; Return value:  Size  Location     Type
  2120                           ;		None               void
  2121                           ; Registers used:
  2122                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2123                           ; Tracked objects:
  2124                           ;		On entry : 60/0
  2125                           ;		On exit  : 160/0
  2126                           ;		Unchanged: FFE9F/0
  2127                           ; Data sizes:     COMMON   BANK0   BANK1
  2128                           ;      Locals:         2       0       0
  2129                           ;      Temp:     0
  2130                           ;      Total:    2
  2131                           ; This function calls:
  2132                           ;		_WriteEEPROM
  2133                           ;		_DelayMs
  2134                           ; This function is called by:
  2135                           ;		_Configuration
  2136                           ;		_ConfigureMasterKey
  2137                           ; This function uses a non-reentrant model
  2138                           ; 
  2139  02C1                     _EEPROMWriteKey:	;main.c: 240: void EEPROMWriteKey(unsigned char WriteAddress)
  2140                           ;main.c: 241: {
  2141                           ; Regs used in _EEPROMWriteKey: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2142                           ;EEPROMWriteKey@WriteAddress stored from wreg
  2143  02C1  00F0               	movwf	EEPROMWriteKey@WriteAddress
  2144  02C2  307E               	movlw	126
  2145  02C3  058B               	andwf	11,f	;volatile
  2146                           ;main.c: 244: WriteAddress = WriteAddress * 8;
  2147  02C4  0DF0               	rlf	EEPROMWriteKey@WriteAddress,f
  2148  02C5  0DF0               	rlf	EEPROMWriteKey@WriteAddress,f
  2149  02C6  0D70               	rlf	EEPROMWriteKey@WriteAddress,w
  2150  02C7  39F8               	andlw	248
  2151  02C8  00F0               	movwf	EEPROMWriteKey@WriteAddress
  2152                           ;main.c: 245: for(KeyLength=0;KeyLength<8;KeyLength++)
  2153  02C9  01F1               	clrf	EEPROMWriteKey@KeyLength
  2154  02CA                     l30001592:
  2155                           ;main.c: 246: {
  2156                           ;main.c: 247: DataEEAddr = WriteAddress++;
  2157  02CA  0870               	movf	EEPROMWriteKey@WriteAddress,w
  2158  02CB  00A0               	movwf	_DataEEAddr
  2159  02CC  01A1               	clrf	_DataEEAddr+1
  2160  02CD  0AF0               	incf	EEPROMWriteKey@WriteAddress,f
  2161                           ;main.c: 248: DataEEData = iButtonKey[KeyLength];
  2162  02CE  0871               	movf	EEPROMWriteKey@KeyLength,w
  2163  02CF  3E2D               	addlw	_iButtonKey& (0+255)
  2164  02D0  0084               	movwf	4
  2165  02D1  1383               	bcf	3,7	;select IRP bank0
  2166  02D2  0800               	movf	0,w
  2167  02D3  00F6               	movwf	_DataEEData
  2168  02D4  01F7               	clrf	_DataEEData+1
  2169                           ;main.c: 249: WriteEEPROM();
  2170  02D5  23A0               	fcall	_WriteEEPROM
  2171                           ;main.c: 250: DelayMs(10);
  2172  02D6  300A               	movlw	10
  2173  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  2174  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  2175  02D9  00BA               	movwf	?_DelayMs
  2176  02DA  01BB               	clrf	?_DelayMs+1
  2177  02DB  23F4               	fcall	_DelayMs
  2178  02DC  0AF1               	incf	EEPROMWriteKey@KeyLength,f
  2179  02DD  3008               	movlw	8
  2180  02DE  0271               	subwf	EEPROMWriteKey@KeyLength,w
  2181  02DF  1C03               	skipc
  2182  02E0  2ACA               	goto	l30001592
  2183  02E1  178B               	bsf	11,7	;volatile
  2184  02E2  0008               	return
  2185  02E3                     __end_of_EEPROMWriteKey:
  2186                           
  2187                           	psect	text877
  2188  01E2                     __ptext877:	; =============== function _EEPROMWriteKey ends ============
  2189                           ; *************** function _BuzzerBeep *****************
  2190                           ; Defined at:
  2191                           ;		line 175 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  2192                           ; Parameters:    Size  Location     Type
  2193                           ;  BeepNum         1    wreg     unsigned char 
  2194                           ;  LONG_BEEP       1   10[BANK0 ] unsigned char 
  2195                           ; Auto vars:     Size  Location     Type
  2196                           ;  BeepNum         1    6[BANK0 ] unsigned char 
  2197                           ;  BeepTime        2    7[BANK0 ] unsigned int 
  2198                           ;  BeepCnt         1    9[BANK0 ] unsigned char 
  2199                           ; Return value:  Size  Location     Type
  2200                           ;		None               void
  2201                           ; Registers used:
  2202                           ;		wreg, status,2, status,0, pclath, cstack
  2203                           ; Tracked objects:
  2204                           ;		On entry : 60/0
  2205                           ;		On exit  : 60/0
  2206                           ;		Unchanged: FFE00/0
  2207                           ; Data sizes:     COMMON   BANK0   BANK1
  2208                           ;      Locals:         6       5       0
  2209                           ;      Temp:     6
  2210                           ;      Total:   11
  2211                           ; This function calls:
  2212                           ;		_DelayMs
  2213                           ; This function is called by:
  2214                           ;		_Configuration
  2215                           ;		_ConfigureMasterKey
  2216                           ;		_LockOperation
  2217                           ;		_main
  2218                           ; This function uses a non-reentrant model
  2219                           ; 
  2220  01E2                     _BuzzerBeep:	;main.c: 174: void BuzzerBeep(unsigned char BeepNum, unsigned char LONG_BEE
      +                          P)
  2221                           ;main.c: 175: {
  2222                           ; Regs used in _BuzzerBeep: [wreg+status,2+status,0+pclath+cstack]
  2223                           ;BuzzerBeep@BeepNum stored from wreg
  2224  01E2  00BC               	movwf	BuzzerBeep@BeepNum
  2225                           ;main.c: 177: unsigned int BeepTime = 0;
  2226  01E3  01BD               	clrf	BuzzerBeep@BeepTime
  2227  01E4  01BE               	clrf	BuzzerBeep@BeepTime+1
  2228                           ;main.c: 178: if(LONG_BEEP)
  2229  01E5  0840               	movf	BuzzerBeep@LONG_BEEP,w
  2230  01E6  1903               	btfsc	3,2
  2231  01E7  29ED               	goto	l30001553
  2232                           ;main.c: 179: BeepTime = (4*0x64);
  2233  01E8  3090               	movlw	144
  2234  01E9  00BD               	movwf	BuzzerBeep@BeepTime
  2235  01EA  3001               	movlw	1
  2236  01EB  00BE               	movwf	BuzzerBeep@BeepTime+1
  2237  01EC  29F0               	goto	l30001554
  2238  01ED                     l30001553:
  2239                           ;main.c: 180: else
  2240                           ;main.c: 181: BeepTime = 0x64;
  2241  01ED  3064               	movlw	100
  2242  01EE  00BD               	movwf	BuzzerBeep@BeepTime
  2243  01EF  01BE               	clrf	BuzzerBeep@BeepTime+1
  2244  01F0                     l30001554:
  2245                           ;main.c: 183: RC1=0x00;
  2246  01F0  1087               	bcf	7,1
  2247                           ;main.c: 184: for(BeepCnt=0; BeepCnt<((BeepNum * 2) - 1); BeepCnt++)
  2248  01F1  01BF               	clrf	BuzzerBeep@BeepCnt
  2249  01F2                     l30001559:
  2250  01F2  083C               	movf	BuzzerBeep@BeepNum,w
  2251  01F3  00F0               	movwf	??_BuzzerBeep
  2252  01F4  01F1               	clrf	??_BuzzerBeep+1
  2253  01F5  1003               	clrc
  2254  01F6  0D70               	rlf	??_BuzzerBeep,w
  2255  01F7  00F2               	movwf	??_BuzzerBeep+2
  2256  01F8  0D71               	rlf	??_BuzzerBeep+1,w
  2257  01F9  00F3               	movwf	??_BuzzerBeep+3
  2258  01FA  0872               	movf	??_BuzzerBeep+2,w
  2259  01FB  3EFF               	addlw	255
  2260  01FC  00F4               	movwf	??_BuzzerBeep+4
  2261  01FD  0873               	movf	??_BuzzerBeep+3,w
  2262  01FE  1803               	skipnc
  2263  01FF  3E01               	addlw	1
  2264  0200  3EFF               	addlw	255
  2265  0201  00F5               	movwf	??_BuzzerBeep+5
  2266  0202  3A80               	xorlw	128
  2267  0203  3C80               	sublw	128
  2268  0204  1D03               	skipz
  2269  0205  2A08               	goto	u1915
  2270  0206  0874               	movf	??_BuzzerBeep+4,w
  2271  0207  023F               	subwf	BuzzerBeep@BeepCnt,w
  2272  0208                     u1915:
  2273  0208  1803               	btfsc	3,0
  2274  0209  2A15               	goto	l53
  2275                           ;main.c: 185: {
  2276                           ;main.c: 186: RC1 = !RC1;
  2277  020A  3002               	movlw	2
  2278  020B  1283               	bcf	3,5	;RP0=0, select bank0
  2279  020C  1303               	bcf	3,6	;RP1=0, select bank0
  2280  020D  0687               	xorwf	7,f
  2281                           ;main.c: 187: DelayMs(BeepTime);
  2282  020E  083E               	movf	BuzzerBeep@BeepTime+1,w
  2283  020F  00BB               	movwf	?_DelayMs+1
  2284  0210  083D               	movf	BuzzerBeep@BeepTime,w
  2285  0211  00BA               	movwf	?_DelayMs
  2286  0212  23F4               	fcall	_DelayMs
  2287  0213  0ABF               	incf	BuzzerBeep@BeepCnt,f
  2288  0214  29F2               	goto	l30001559
  2289  0215                     l53:
  2290                           ;main.c: 188: }
  2291                           ;main.c: 189: RC1=0x00;
  2292  0215  1283               	bcf	3,5	;RP0=0, select bank0
  2293  0216  1303               	bcf	3,6	;RP1=0, select bank0
  2294  0217  1087               	bcf	7,1
  2295  0218  0008               	return
  2296  0219                     __end_of_BuzzerBeep:
  2297                           
  2298                           	psect	text878
  2299  0441                     __ptext878:	; =============== function _BuzzerBeep ends ============
  2300                           ; *************** function _strcmp *****************
  2301                           ; Defined at:
  2302                           ;		line 256 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  2303                           ; Parameters:    Size  Location     Type
  2304                           ;  x               1    wreg     PTR unsigned char 
  2305                           ;		 -> iButtonKey(9), 
  2306                           ;  y               1    1[COMMON] PTR unsigned char 
  2307                           ;		 -> EEPROMKey(9), 
  2308                           ; Auto vars:     Size  Location     Type
  2309                           ;  x               1    0[BANK0 ] PTR unsigned char 
  2310                           ;		 -> iButtonKey(9), 
  2311                           ;  i               1    1[BANK0 ] unsigned char 
  2312                           ; Return value:  Size  Location     Type
  2313                           ;                  1    wreg      unsigned char 
  2314                           ; Registers used:
  2315                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  2316                           ; Tracked objects:
  2317                           ;		On entry : 160/0
  2318                           ;		On exit  : 160/0
  2319                           ;		Unchanged: FFE9F/0
  2320                           ; Data sizes:     COMMON   BANK0   BANK1
  2321                           ;      Locals:         2       2       0
  2322                           ;      Temp:     1
  2323                           ;      Total:    4
  2324                           ; This function calls:
  2325                           ;		Nothing
  2326                           ; This function is called by:
  2327                           ;		_AvailabeKey
  2328                           ;		_Configuration
  2329                           ; This function uses a non-reentrant model
  2330                           ; 
  2331  0441                     _strcmp:	;main.c: 255: unsigned char strcmp(unsigned char* x, unsigned char* y)
  2332                           ;main.c: 256: {
  2333                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0]
  2334                           ;strcmp@x stored from wreg
  2335  0441  00B6               	movwf	strcmp@x
  2336                           ;main.c: 257: unsigned char i;
  2337                           ;main.c: 258: for(i=0;i<8;i++)
  2338  0442  01B7               	clrf	strcmp@i
  2339  0443                     l30001692:
  2340                           ;main.c: 259: {
  2341                           ;main.c: 260: if(*x++ != *y++)
  2342  0443  0871               	movf	strcmp@y,w
  2343  0444  0AF1               	incf	strcmp@y,f
  2344  0445  0084               	movwf	4
  2345  0446  0800               	movf	0,w
  2346  0447  00F0               	movwf	??_strcmp
  2347  0448  0836               	movf	strcmp@x,w
  2348  0449  0084               	movwf	4
  2349  044A  0AB6               	incf	strcmp@x,f
  2350  044B  0800               	movf	0,w
  2351  044C  0670               	xorwf	??_strcmp,w
  2352  044D  1D03               	btfss	3,2
  2353  044E  2C54               	goto	l30001696
  2354  044F  0AB7               	incf	strcmp@i,f
  2355  0450  3008               	movlw	8
  2356  0451  0237               	subwf	strcmp@i,w
  2357  0452  1C03               	skipc
  2358  0453  2C43               	goto	l30001692
  2359  0454                     l30001696:
  2360                           ;main.c: 262: }
  2361                           ;main.c: 263: if(i==8)
  2362  0454  0837               	movf	strcmp@i,w
  2363  0455  3A08               	xorlw	8
  2364  0456  1903               	btfsc	3,2
  2365                           ;main.c: 264: return(1);
  2366  0457  3401               	retlw	1
  2367                           ;main.c: 265: else
  2368                           ;main.c: 266: return(0);
  2369  0458  3400               	retlw	0
  2370  0459                     __end_of_strcmp:
  2371                           
  2372                           	psect	text879
  2373  0383                     __ptext879:	; =============== function _strcmp ends ============
  2374                           ; *************** function _EEPROMReadKey *****************
  2375                           ; Defined at:
  2376                           ;		line 216 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  2377                           ; Parameters:    Size  Location     Type
  2378                           ;  ReadAddress     1    wreg     unsigned char 
  2379                           ; Auto vars:     Size  Location     Type
  2380                           ;  ReadAddress     1    0[COMMON] unsigned char 
  2381                           ;  KeyLength       1    1[COMMON] unsigned char 
  2382                           ; Return value:  Size  Location     Type
  2383                           ;		None               void
  2384                           ; Registers used:
  2385                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2386                           ; Tracked objects:
  2387                           ;		On entry : 60/0
  2388                           ;		On exit  : 160/0
  2389                           ;		Unchanged: FFE9F/0
  2390                           ; Data sizes:     COMMON   BANK0   BANK1
  2391                           ;      Locals:         2       0       0
  2392                           ;      Temp:     0
  2393                           ;      Total:    2
  2394                           ; This function calls:
  2395                           ;		_ReadEEPROM
  2396                           ; This function is called by:
  2397                           ;		_AvailabeKey
  2398                           ;		_Configuration
  2399                           ;		_ConfigureMasterKey
  2400                           ; This function uses a non-reentrant model
  2401                           ; 
  2402  0383                     _EEPROMReadKey:	;main.c: 215: void EEPROMReadKey(unsigned char ReadAddress)
  2403                           ;main.c: 216: {
  2404                           ; Regs used in _EEPROMReadKey: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2405                           ;EEPROMReadKey@ReadAddress stored from wreg
  2406  0383  00F0               	movwf	EEPROMReadKey@ReadAddress
  2407  0384  307E               	movlw	126
  2408  0385  058B               	andwf	11,f	;volatile
  2409                           ;main.c: 219: ReadAddress = ReadAddress * 8;
  2410  0386  0DF0               	rlf	EEPROMReadKey@ReadAddress,f
  2411  0387  0DF0               	rlf	EEPROMReadKey@ReadAddress,f
  2412  0388  0D70               	rlf	EEPROMReadKey@ReadAddress,w
  2413  0389  39F8               	andlw	248
  2414  038A  00F0               	movwf	EEPROMReadKey@ReadAddress
  2415                           ;main.c: 220: for(KeyLength=0;KeyLength<8;KeyLength++)
  2416  038B  01F1               	clrf	EEPROMReadKey@KeyLength
  2417  038C                     l30001748:
  2418                           ;main.c: 221: {
  2419                           ;main.c: 222: DataEEAddr = ReadAddress++;
  2420  038C  0870               	movf	EEPROMReadKey@ReadAddress,w
  2421  038D  1303               	bcf	3,6	;RP1=0, select bank0
  2422  038E  00A0               	movwf	_DataEEAddr
  2423  038F  01A1               	clrf	_DataEEAddr+1
  2424  0390  0AF0               	incf	EEPROMReadKey@ReadAddress,f
  2425                           ;main.c: 223: ReadEEPROM();
  2426  0391  250B               	fcall	_ReadEEPROM
  2427                           ;main.c: 224: EEPROMKey[KeyLength] = DataEEData;
  2428  0392  0871               	movf	EEPROMReadKey@KeyLength,w
  2429  0393  3E24               	addlw	_EEPROMKey& (0+255)
  2430  0394  0084               	movwf	4
  2431  0395  0876               	movf	_DataEEData,w
  2432  0396  1383               	bcf	3,7	;select IRP bank0
  2433  0397  0080               	movwf	0
  2434  0398  0AF1               	incf	EEPROMReadKey@KeyLength,f
  2435  0399  3008               	movlw	8
  2436  039A  0271               	subwf	EEPROMReadKey@KeyLength,w
  2437  039B  1C03               	skipc
  2438  039C  2B8C               	goto	l30001748
  2439  039D  1303               	bcf	3,6	;RP1=0, select bank0
  2440  039E  178B               	bsf	11,7	;volatile
  2441  039F  0008               	return
  2442  03A0                     __end_of_EEPROMReadKey:
  2443                           
  2444                           	psect	text880
  2445  029D                     __ptext880:	; =============== function _EEPROMReadKey ends ============
  2446                           ; *************** function _CRCCheck *****************
  2447                           ; Defined at:
  2448                           ;		line 19 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\OneWire.
      +                          c"
  2449                           ; Parameters:    Size  Location     Type
  2450                           ;  KeyPointer      1    wreg     PTR unsigned char 
  2451                           ;		 -> EEPROMKey(9), iButtonKey(9), 
  2452                           ; Auto vars:     Size  Location     Type
  2453                           ;  KeyPointer      1    3[BANK0 ] PTR unsigned char 
  2454                           ;		 -> EEPROMKey(9), iButtonKey(9), 
  2455                           ;  LenForCrc       1    2[BANK0 ] unsigned char 
  2456                           ;  CRC             1    1[BANK0 ] unsigned char 
  2457                           ;  KeyAllByteZe    1    0[BANK0 ] unsigned char 
  2458                           ; Return value:  Size  Location     Type
  2459                           ;                  1    wreg      unsigned char 
  2460                           ; Registers used:
  2461                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2462                           ; Tracked objects:
  2463                           ;		On entry : 160/0
  2464                           ;		On exit  : 160/0
  2465                           ;		Unchanged: FFE9F/0
  2466                           ; Data sizes:     COMMON   BANK0   BANK1
  2467                           ;      Locals:         0       4       0
  2468                           ;      Temp:     0
  2469                           ;      Total:    4
  2470                           ; This function calls:
  2471                           ;		Nothing
  2472                           ; This function is called by:
  2473                           ;		_Configuration
  2474                           ;		_ConfigureMasterKey
  2475                           ;		_ReadiButton
  2476                           ; This function uses a non-reentrant model
  2477                           ; 
  2478  029D                     _CRCCheck:	;OneWire.c: 18: unsigned char CRCCheck(unsigned char* KeyPointer)
  2479                           ;OneWire.c: 19: {
  2480                           ; Regs used in _CRCCheck: [wreg-fsr0h+status,2+status,0+pclath]
  2481                           ;CRCCheck@KeyPointer stored from wreg
  2482  029D  00B9               	movwf	CRCCheck@KeyPointer
  2483                           ;OneWire.c: 20: unsigned char LenForCrc,CRC,KeyAllByteZero;
  2484                           ;OneWire.c: 21: CRC=0x00;
  2485  029E  01B7               	clrf	CRCCheck@CRC
  2486                           ;OneWire.c: 22: KeyAllByteZero=0x00;
  2487  029F  01B6               	clrf	CRCCheck@KeyAllByteZero
  2488                           ;OneWire.c: 23: for(LenForCrc=0;LenForCrc<7;LenForCrc++)
  2489  02A0  01B8               	clrf	CRCCheck@LenForCrc
  2490                           ;OneWire.c: 24: {
  2491                           ;OneWire.c: 25: KeyAllByteZero |= *KeyPointer;
  2492  02A1  0084               	movwf	4
  2493  02A2  1383               	bcf	3,7	;select IRP bank0
  2494  02A3  0800               	movf	0,w
  2495  02A4                     L2:
  2496  02A4  04B6               	iorwf	CRCCheck@KeyAllByteZero,f
  2497                           ;OneWire.c: 26: CRC = CRCValue[CRC^(*KeyPointer++)];
  2498  02A5  0839               	movf	CRCCheck@KeyPointer,w
  2499  02A6  0084               	movwf	4
  2500  02A7  0800               	movf	0,w
  2501  02A8  0637               	xorwf	CRCCheck@CRC,w
  2502  02A9  3E0F               	addlw	low _CRCValue
  2503  02AA  0084               	movwf	4
  2504  02AB  3000               	movlw	high _CRCValue
  2505  02AC  1803               	skipnc
  2506  02AD  3E01               	addlw	1
  2507  02AE  2500               	fcall	stringtab
  2508  02AF  00B7               	movwf	CRCCheck@CRC
  2509  02B0  0AB9               	incf	CRCCheck@KeyPointer,f
  2510  02B1  0AB8               	incf	CRCCheck@LenForCrc,f
  2511  02B2  3007               	movlw	7
  2512  02B3  0238               	subwf	CRCCheck@LenForCrc,w
  2513                           ;OneWire.c: 27: }
  2514                           ;OneWire.c: 28: if(*KeyPointer == CRC && KeyAllByteZero != 0)
  2515  02B4  0839               	movf	CRCCheck@KeyPointer,w
  2516  02B5  0084               	movwf	4
  2517  02B6  1383               	bcf	3,7	;select IRP bank0
  2518  02B7  0800               	movf	0,w
  2519  02B8  1C03               	skipc
  2520  02B9  2AA4               	goto	L2
  2521  02BA  0637               	xorwf	CRCCheck@CRC,w
  2522  02BB  1D03               	skipz
  2523  02BC  3400               	retlw	0
  2524  02BD  0836               	movf	CRCCheck@KeyAllByteZero,w
  2525  02BE  1D03               	skipz
  2526                           ;OneWire.c: 29: return(1);
  2527  02BF  3401               	retlw	1
  2528                           ;OneWire.c: 30: else
  2529                           ;OneWire.c: 31: return(0);
  2530  02C0  3400               	retlw	0
  2531  02C1                     __end_of_CRCCheck:
  2532                           
  2533                           	psect	text881
  2534  040E                     __ptext881:	; =============== function _CRCCheck ends ============
  2535                           ; *************** function _WriteByteToiButton *****************
  2536                           ; Defined at:
  2537                           ;		line 119 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\OneWire
      +                          .c"
  2538                           ; Parameters:    Size  Location     Type
  2539                           ;  d               1    wreg     unsigned char 
  2540                           ; Auto vars:     Size  Location     Type
  2541                           ;  d               1    0[COMMON] unsigned char 
  2542                           ;  n               1    1[COMMON] unsigned char 
  2543                           ; Return value:  Size  Location     Type
  2544                           ;		None               void
  2545                           ; Registers used:
  2546                           ;		wreg, status,2, status,0, pclath, cstack
  2547                           ; Tracked objects:
  2548                           ;		On entry : 60/0
  2549                           ;		On exit  : 60/20
  2550                           ;		Unchanged: FFF9F/0
  2551                           ; Data sizes:     COMMON   BANK0   BANK1
  2552                           ;      Locals:         2       0       0
  2553                           ;      Temp:     0
  2554                           ;      Total:    2
  2555                           ; This function calls:
  2556                           ;		_delay_10us
  2557                           ; This function is called by:
  2558                           ;		_ReadiButton
  2559                           ; This function uses a non-reentrant model
  2560                           ; 
  2561  040E                     _WriteByteToiButton:	;OneWire.c: 118: void WriteByteToiButton(unsigned char d)
  2562                           ;OneWire.c: 119: {
  2563                           ; Regs used in _WriteByteToiButton: [wreg+status,2+status,0+pclath+cstack]
  2564                           ;WriteByteToiButton@d stored from wreg
  2565  040E  00F0               	movwf	WriteByteToiButton@d
  2566                           ;OneWire.c: 120: unsigned char n;
  2567                           ;OneWire.c: 121: for(n=0; n<8; n++)
  2568  040F  01F1               	clrf	WriteByteToiButton@n
  2569  0410                     l215:
  2570                           ;OneWire.c: 122: {
  2571                           ;OneWire.c: 123: TRISA2=0x00;
  2572  0410  1683               	bsf	3,5	;RP0=1, select bank1
  2573  0411  1105               	bcf	5,2
  2574                           ;OneWire.c: 124: RA2=0x00;
  2575  0412  1283               	bcf	3,5	;RP0=0, select bank0
  2576  0413  1105               	bcf	5,2
  2577                           ;OneWire.c: 125: t=6;;
  2578  0414  3006               	movlw	6
  2579  0415  00A3               	movwf	_t
  2580                           ;OneWire.c: 126: if (d&0x01)
  2581  0416  1C70               	btfss	WriteByteToiButton@d,0
  2582  0417  2C1D               	goto	l30001770
  2583  0418  0000               	nop	;#
  2584                           ;OneWire.c: 129: TRISA2=0x01;
  2585  0419  1683               	bsf	3,5	;RP0=1, select bank1
  2586  041A  1505               	bsf	5,2
  2587                           ;OneWire.c: 130: delay_10us();
  2588  041B  24AC               	fcall	_delay_10us
  2589  041C  2C20               	goto	l30001772
  2590  041D                     l30001770:
  2591                           ;OneWire.c: 132: else
  2592                           ;OneWire.c: 133: {
  2593                           ;OneWire.c: 134: delay_10us();
  2594  041D  24AC               	fcall	_delay_10us
  2595                           ;OneWire.c: 135: TRISA2=0x01;
  2596  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2597  041F  1505               	bsf	5,2
  2598  0420                     l30001772:
  2599                           ;OneWire.c: 136: }
  2600                           ;OneWire.c: 137: d=d>>1;
  2601  0420  1003               	clrc
  2602  0421  0CF0               	rrf	WriteByteToiButton@d,f
  2603  0422  0AF1               	incf	WriteByteToiButton@n,f
  2604  0423  3008               	movlw	8
  2605  0424  0271               	subwf	WriteByteToiButton@n,w
  2606  0425  1803               	btfsc	3,0
  2607  0426  0008               	return
  2608  0427  2C10               	goto	l215
  2609  0428                     __end_of_WriteByteToiButton:
  2610                           
  2611                           	psect	text882
  2612  0459                     __ptext882:	; =============== function _WriteByteToiButton ends ============
  2613                           ; *************** function _EEPROMWriteKeyByte *****************
  2614                           ; Defined at:
  2615                           ;		line 230 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  2616                           ; Parameters:    Size  Location     Type
  2617                           ;  WriteAddress    1    wreg     unsigned char 
  2618                           ; Auto vars:     Size  Location     Type
  2619                           ;  WriteAddress    1    0[COMMON] unsigned char 
  2620                           ; Return value:  Size  Location     Type
  2621                           ;		None               void
  2622                           ; Registers used:
  2623                           ;		wreg, status,2, status,0, pclath, cstack
  2624                           ; Tracked objects:
  2625                           ;		On entry : 60/0
  2626                           ;		On exit  : 60/0
  2627                           ;		Unchanged: FFF9F/0
  2628                           ; Data sizes:     COMMON   BANK0   BANK1
  2629                           ;      Locals:         1       0       0
  2630                           ;      Temp:     0
  2631                           ;      Total:    1
  2632                           ; This function calls:
  2633                           ;		_WriteEEPROM
  2634                           ;		_DelayMs
  2635                           ; This function is called by:
  2636                           ;		_ClearAllKeys
  2637                           ;		_ClearKey
  2638                           ; This function uses a non-reentrant model
  2639                           ; 
  2640  0459                     _EEPROMWriteKeyByte:	;main.c: 229: void EEPROMWriteKeyByte(unsigned char WriteAddress)
  2641                           ;main.c: 230: {
  2642                           ; Regs used in _EEPROMWriteKeyByte: [wreg+status,2+status,0+pclath+cstack]
  2643                           ;EEPROMWriteKeyByte@WriteAddress stored from wreg
  2644  0459  00F0               	movwf	EEPROMWriteKeyByte@WriteAddress
  2645  045A  307E               	movlw	126
  2646  045B  058B               	andwf	11,f	;volatile
  2647                           ;main.c: 232: WriteAddress = WriteAddress * 8;
  2648  045C  0DF0               	rlf	EEPROMWriteKeyByte@WriteAddress,f
  2649  045D  0DF0               	rlf	EEPROMWriteKeyByte@WriteAddress,f
  2650  045E  0D70               	rlf	EEPROMWriteKeyByte@WriteAddress,w
  2651  045F  39F8               	andlw	248
  2652  0460  00F0               	movwf	EEPROMWriteKeyByte@WriteAddress
  2653                           ;main.c: 233: DataEEAddr = WriteAddress++;
  2654  0461  00A0               	movwf	_DataEEAddr
  2655  0462  01A1               	clrf	_DataEEAddr+1
  2656  0463  0AF0               	incf	EEPROMWriteKeyByte@WriteAddress,f
  2657                           ;main.c: 234: DataEEData = iButtonKey[0];
  2658  0464  082D               	movf	_iButtonKey,w
  2659  0465  00F6               	movwf	_DataEEData
  2660  0466  01F7               	clrf	_DataEEData+1
  2661                           ;main.c: 235: WriteEEPROM();
  2662  0467  23A0               	fcall	_WriteEEPROM
  2663                           ;main.c: 236: DelayMs(10);
  2664  0468  300A               	movlw	10
  2665  0469  1283               	bcf	3,5	;RP0=0, select bank0
  2666  046A  1303               	bcf	3,6	;RP1=0, select bank0
  2667  046B  00BA               	movwf	?_DelayMs
  2668  046C  01BB               	clrf	?_DelayMs+1
  2669  046D  23F4               	fcall	_DelayMs
  2670  046E  178B               	bsf	11,7	;volatile
  2671  046F  0008               	return
  2672  0470                     __end_of_EEPROMWriteKeyByte:
  2673                           
  2674                           	psect	text883
  2675  0538                     __ptext883:	; =============== function _EEPROMWriteKeyByte ends ============
  2676                           ; *************** function _CheckForiButtonDisconnect *****************
  2677                           ; Defined at:
  2678                           ;		line 68 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\OneWire.
      +                          c"
  2679                           ; Parameters:    Size  Location     Type
  2680                           ;		None
  2681                           ; Auto vars:     Size  Location     Type
  2682                           ;		None
  2683                           ; Return value:  Size  Location     Type
  2684                           ;                  1    wreg      unsigned char 
  2685                           ; Registers used:
  2686                           ;		wreg, status,2, status,0, pclath, cstack
  2687                           ; Tracked objects:
  2688                           ;		On entry : 60/0
  2689                           ;		On exit  : 60/0
  2690                           ;		Unchanged: FFF9F/0
  2691                           ; Data sizes:     COMMON   BANK0   BANK1
  2692                           ;      Locals:         0       0       0
  2693                           ;      Temp:     0
  2694                           ;      Total:    0
  2695                           ; This function calls:
  2696                           ;		_InitiButton
  2697                           ; This function is called by:
  2698                           ;		_Wait_With_LED_Blink
  2699                           ;		_LockOperation
  2700                           ; This function uses a non-reentrant model
  2701                           ; 
  2702  0538                     _CheckForiButtonDisconnect:	;OneWire.c: 67: unsigned char CheckForiButtonDisconnect(void
      +                          )
  2703                           ;OneWire.c: 68: {
  2704                           ;OneWire.c: 69: return(InitiButton());
  2705                           ; Regs used in _CheckForiButtonDisconnect: [wreg+status,2+status,0+pclath+cstack]
  2706  0538  2AE3               	ljmp	l30001905
  2707  0539                     __end_of_CheckForiButtonDisconnect:
  2708                           
  2709                           	psect	text884
  2710  04B9                     __ptext884:	; =============== function _CheckForiButtonDisconnect ends ============
  2711                           ; *************** function _ToggleLED *****************
  2712                           ; Defined at:
  2713                           ;		line 84 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  2714                           ; Parameters:    Size  Location     Type
  2715                           ;		None
  2716                           ; Auto vars:     Size  Location     Type
  2717                           ;		None
  2718                           ; Return value:  Size  Location     Type
  2719                           ;		None               void
  2720                           ; Registers used:
  2721                           ;		status,2, status,0
  2722                           ; Tracked objects:
  2723                           ;		On entry : 60/0
  2724                           ;		On exit  : 60/0
  2725                           ;		Unchanged: FFF9F/0
  2726                           ; Data sizes:     COMMON   BANK0   BANK1
  2727                           ;      Locals:         0       0       0
  2728                           ;      Temp:     0
  2729                           ;      Total:    0
  2730                           ; This function calls:
  2731                           ;		Nothing
  2732                           ; This function is called by:
  2733                           ;		_Wait_With_LED_Blink
  2734                           ;		_Configuration
  2735                           ; This function uses a non-reentrant model
  2736                           ; 
  2737  04B9                     _ToggleLED:	;main.c: 83: void ToggleLED(void)
  2738                           ;main.c: 84: {
  2739                           ;main.c: 85: if(RC0)
  2740                           ; Regs used in _ToggleLED: [status]
  2741  04B9  1C07               	btfss	7,0
  2742  04BA  2CBD               	goto	l30001760
  2743                           ;main.c: 86: RC0=0x00;
  2744  04BB  1007               	bcf	7,0
  2745  04BC  0008               	return
  2746  04BD                     l30001760:
  2747                           ;main.c: 87: else
  2748                           ;main.c: 88: {
  2749                           ;main.c: 89: if(ToggleSkipFlag == 0)
  2750  04BD  08A2               	movf	_ToggleSkipFlag,f
  2751  04BE  1D03               	skipz
  2752  04BF  2CC4               	goto	l30001762
  2753                           ;main.c: 90: {
  2754                           ;main.c: 91: ToggleSkipFlag=0x01;
  2755  04C0  01A2               	clrf	_ToggleSkipFlag
  2756  04C1  0AA2               	incf	_ToggleSkipFlag,f
  2757                           ;main.c: 92: RC0=0x01;
  2758  04C2  1407               	bsf	7,0
  2759  04C3  0008               	return
  2760  04C4                     l30001762:
  2761                           ;main.c: 94: else
  2762                           ;main.c: 95: ToggleSkipFlag=0x00;
  2763  04C4  01A2               	clrf	_ToggleSkipFlag
  2764  04C5  0008               	return
  2765  04C6                     __end_of_ToggleLED:
  2766                           
  2767                           	psect	text885
  2768  0365                     __ptext885:	; =============== function _ToggleLED ends ============
  2769                           ; *************** function _ReadByteToiButton *****************
  2770                           ; Defined at:
  2771                           ;		line 148 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\OneWire
      +                          .c"
  2772                           ; Parameters:    Size  Location     Type
  2773                           ;		None
  2774                           ; Auto vars:     Size  Location     Type
  2775                           ;  n               1    2[BANK0 ] unsigned char 
  2776                           ;  i_byte          1    1[BANK0 ] unsigned char 
  2777                           ;  temp            1    0[BANK0 ] unsigned char 
  2778                           ; Return value:  Size  Location     Type
  2779                           ;                  1    wreg      unsigned char 
  2780                           ; Registers used:
  2781                           ;		wreg, status,2, status,0, pclath, cstack
  2782                           ; Tracked objects:
  2783                           ;		On entry : 60/0
  2784                           ;		On exit  : 60/0
  2785                           ;		Unchanged: FFF9F/0
  2786                           ; Data sizes:     COMMON   BANK0   BANK1
  2787                           ;      Locals:         0       3       0
  2788                           ;      Temp:     0
  2789                           ;      Total:    3
  2790                           ; This function calls:
  2791                           ;		_delay_10us
  2792                           ; This function is called by:
  2793                           ;		_ReadiButton
  2794                           ; This function uses a non-reentrant model
  2795                           ; 
  2796  0365                     _ReadByteToiButton:	;OneWire.c: 147: unsigned char ReadByteToiButton(void)
  2797                           ;OneWire.c: 148: {
  2798                           ;OneWire.c: 149: unsigned char n, i_byte, temp, mask;
  2799                           ;OneWire.c: 150: for (n=0; n<8; n++)
  2800                           ; Regs used in _ReadByteToiButton: [wreg+status,2+status,0+pclath+cstack]
  2801  0365  01B8               	clrf	ReadByteToiButton@n
  2802  0366                     l221:
  2803                           ;OneWire.c: 151: {
  2804                           ;OneWire.c: 152: TRISA2=0x00;
  2805  0366  1683               	bsf	3,5	;RP0=1, select bank1
  2806  0367  1105               	bcf	5,2
  2807                           ;OneWire.c: 153: RA2=0x00;
  2808  0368  1283               	bcf	3,5	;RP0=0, select bank0
  2809  0369  1105               	bcf	5,2
  2810  036A  0000               	nop	;#
  2811  036B  0000               	nop	;#
  2812                           ;OneWire.c: 160: TRISA2=0x01;
  2813  036C  1683               	bsf	3,5	;RP0=1, select bank1
  2814  036D  1505               	bsf	5,2
  2815  036E  0000               	nop	;#
  2816  036F  0000               	nop	;#
  2817                           ;OneWire.c: 165: temp=PORTA;
  2818  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2819  0371  0805               	movf	5,w	;volatile
  2820  0372  00B6               	movwf	ReadByteToiButton@temp
  2821                           ;OneWire.c: 166: if (temp & 4)
  2822  0373  1D36               	btfss	ReadByteToiButton@temp,2
  2823  0374  2B77               	goto	l224
  2824                           ;OneWire.c: 167: {
  2825                           ;OneWire.c: 168: i_byte=(i_byte>>1) | 0x80;
  2826  0375  1403               	setc
  2827  0376  2B78               	goto	L3
  2828  0377                     l224:
  2829                           ;OneWire.c: 170: else
  2830                           ;OneWire.c: 171: {
  2831                           ;OneWire.c: 172: i_byte=i_byte >> 1;
  2832  0377  1003               	clrc
  2833  0378                     L3:
  2834  0378  0CB7               	rrf	ReadByteToiButton@i_byte,f
  2835                           ;OneWire.c: 173: }
  2836                           ;OneWire.c: 174: t=6;;
  2837  0379  3006               	movlw	6
  2838  037A  00A3               	movwf	_t
  2839                           ;OneWire.c: 175: delay_10us();
  2840  037B  24AC               	fcall	_delay_10us
  2841  037C  0AB8               	incf	ReadByteToiButton@n,f
  2842  037D  3008               	movlw	8
  2843  037E  0238               	subwf	ReadByteToiButton@n,w
  2844  037F  1C03               	skipc
  2845  0380  2B66               	goto	l221
  2846                           ;OneWire.c: 176: }
  2847                           ;OneWire.c: 177: return(i_byte);
  2848  0381  0837               	movf	ReadByteToiButton@i_byte,w
  2849  0382  0008               	return
  2850  0383                     __end_of_ReadByteToiButton:
  2851                           
  2852                           	psect	text886
  2853  03F4                     __ptext886:	; =============== function _ReadByteToiButton ends ============
  2854                           ; *************** function _DelayMs *****************
  2855                           ; Defined at:
  2856                           ;		line 58 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  2857                           ; Parameters:    Size  Location     Type
  2858                           ;  TimeCnt         2    4[BANK0 ] unsigned int 
  2859                           ; Auto vars:     Size  Location     Type
  2860                           ;  j               2    2[BANK0 ] unsigned int 
  2861                           ;  i               2    0[BANK0 ] unsigned int 
  2862                           ; Return value:  Size  Location     Type
  2863                           ;		None               void
  2864                           ; Registers used:
  2865                           ;		wreg, status,2, status,0
  2866                           ; Tracked objects:
  2867                           ;		On entry : 60/0
  2868                           ;		On exit  : 60/0
  2869                           ;		Unchanged: FFF9F/0
  2870                           ; Data sizes:     COMMON   BANK0   BANK1
  2871                           ;      Locals:         0       6       0
  2872                           ;      Temp:     0
  2873                           ;      Total:    6
  2874                           ; This function calls:
  2875                           ;		Nothing
  2876                           ; This function is called by:
  2877                           ;		_GoToSleep
  2878                           ;		_DoorOpen
  2879                           ;		_DoorClose
  2880                           ;		_BuzzerBeep
  2881                           ;		_EEPROMWriteKeyByte
  2882                           ;		_EEPROMWriteKey
  2883                           ;		_Configuration
  2884                           ;		_InvalidKeyIndication
  2885                           ;		_LockOperation
  2886                           ;		_CHK_LOW_BAT_OPEN
  2887                           ;		_main
  2888                           ; This function uses a non-reentrant model
  2889                           ; 
  2890  03F4                     _DelayMs:	;main.c: 57: void DelayMs(unsigned int TimeCnt)
  2891                           ;main.c: 58: {
  2892  03F4                     l30001511:	; Regs used in _DelayMs: [wreg+status,2+status,0]
  2893                           ;main.c: 59: unsigned int i,j;
  2894                           ;main.c: 60: for(i=0;i<TimeCnt;i++)
  2895  03F4  01B6               	clrf	DelayMs@i
  2896  03F5  01B7               	clrf	DelayMs@i+1
  2897  03F6                     l30001518:
  2898  03F6  083B               	movf	DelayMs@TimeCnt+1,w
  2899  03F7  0237               	subwf	DelayMs@i+1,w
  2900  03F8  1D03               	skipz
  2901  03F9  2BFC               	goto	u1835
  2902  03FA  083A               	movf	DelayMs@TimeCnt,w
  2903  03FB  0236               	subwf	DelayMs@i,w
  2904  03FC                     u1835:
  2905  03FC  1803               	btfsc	3,0
  2906  03FD  0008               	return
  2907                           ;main.c: 61: {
  2908                           ;main.c: 62: for(j=0;j<50;j++);
  2909  03FE  01B8               	clrf	DelayMs@j
  2910  03FF  01B9               	clrf	DelayMs@j+1
  2911  0400                     l30001515:
  2912  0400  0AB8               	incf	DelayMs@j,f
  2913  0401  1903               	skipnz
  2914  0402  0AB9               	incf	DelayMs@j+1,f
  2915  0403  3000               	movlw	0
  2916  0404  0239               	subwf	DelayMs@j+1,w
  2917  0405  3032               	movlw	50
  2918  0406  1903               	skipnz
  2919  0407  0238               	subwf	DelayMs@j,w
  2920  0408  1C03               	skipc
  2921  0409  2C00               	goto	l30001515
  2922  040A  0AB6               	incf	DelayMs@i,f
  2923  040B  1903               	skipnz
  2924  040C  0AB7               	incf	DelayMs@i+1,f
  2925  040D  2BF6               	goto	l30001518
  2926  040E                     __end_of_DelayMs:
  2927                           
  2928                           	psect	text887
  2929  050B                     __ptext887:	; =============== function _DelayMs ends ============
  2930                           ; *************** function _ReadEEPROM *****************
  2931                           ; Defined at:
  2932                           ;		line 193 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  2933                           ; Parameters:    Size  Location     Type
  2934                           ;		None
  2935                           ; Auto vars:     Size  Location     Type
  2936                           ;		None
  2937                           ; Return value:  Size  Location     Type
  2938                           ;		None               void
  2939                           ; Registers used:
  2940                           ;		wreg, status,2
  2941                           ; Tracked objects:
  2942                           ;		On entry : 60/0
  2943                           ;		On exit  : 60/40
  2944                           ;		Unchanged: FFF9F/0
  2945                           ; Data sizes:     COMMON   BANK0   BANK1
  2946                           ;      Locals:         0       0       0
  2947                           ;      Temp:     0
  2948                           ;      Total:    0
  2949                           ; This function calls:
  2950                           ;		Nothing
  2951                           ; This function is called by:
  2952                           ;		_EEPROMReadKey
  2953                           ;		_CHK_LOW_BAT_OPEN
  2954                           ; This function uses a non-reentrant model
  2955                           ; 
  2956  050B                     _ReadEEPROM:	;main.c: 192: void ReadEEPROM(void)
  2957                           ;main.c: 193: {
  2958                           ;main.c: 194: EEADR=DataEEAddr;
  2959                           ; Regs used in _ReadEEPROM: [wreg+status,2]
  2960  050B  0820               	movf	_DataEEAddr,w
  2961  050C  1703               	bsf	3,6	;RP1=1, select bank2
  2962  050D  008D               	movwf	13	;volatile
  2963                           ;main.c: 195: EECON1=0x00;
  2964  050E  1683               	bsf	3,5	;RP0=1, select bank3
  2965  050F  018C               	clrf	12	;volatile
  2966                           ;main.c: 196: RD=0x01;
  2967  0510  140C               	bsf	12,0
  2968                           ;main.c: 197: DataEEData=EEDAT;
  2969  0511  1283               	bcf	3,5	;RP0=0, select bank2
  2970  0512  080C               	movf	12,w	;volatile
  2971  0513  00F6               	movwf	_DataEEData
  2972  0514  01F7               	clrf	_DataEEData+1
  2973  0515  0008               	return
  2974  0516                     __end_of_ReadEEPROM:
  2975                           
  2976                           	psect	text888
  2977  02E3                     __ptext888:	; =============== function _ReadEEPROM ends ============
  2978                           ; *************** function _InitiButton *****************
  2979                           ; Defined at:
  2980                           ;		line 80 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\OneWire.
      +                          c"
  2981                           ; Parameters:    Size  Location     Type
  2982                           ;		None
  2983                           ; Auto vars:     Size  Location     Type
  2984                           ;  PresencePuls    1    0[COMMON] unsigned char 
  2985                           ; Return value:  Size  Location     Type
  2986                           ;                  1    wreg      unsigned char 
  2987                           ; Registers used:
  2988                           ;		wreg, status,2, status,0, pclath, cstack
  2989                           ; Tracked objects:
  2990                           ;		On entry : 60/0
  2991                           ;		On exit  : 60/0
  2992                           ;		Unchanged: FFF9F/0
  2993                           ; Data sizes:     COMMON   BANK0   BANK1
  2994                           ;      Locals:         1       0       0
  2995                           ;      Temp:     0
  2996                           ;      Total:    1
  2997                           ; This function calls:
  2998                           ;		_delay_10us
  2999                           ; This function is called by:
  3000                           ;		_ReadiButton
  3001                           ;		_CheckForiButtonDisconnect
  3002                           ; This function uses a non-reentrant model
  3003                           ; 
  3004  02E3                     _InitiButton:	;OneWire.c: 79: unsigned char InitiButton(void)
  3005                           ;OneWire.c: 80: {
  3006  02E3                     l30001905:	; Regs used in _InitiButton: [wreg+status,2+status,0+pclath+cstack]
  3007                           ;OneWire.c: 81: unsigned char PresencePulse;
  3008                           ;OneWire.c: 83: TRISA2=0x00;
  3009  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  3010  02E4  1105               	bcf	5,2
  3011                           ;OneWire.c: 84: RA2=0x01;
  3012  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  3013  02E6  1505               	bsf	5,2
  3014                           ;OneWire.c: 85: TRISA2=0x00;
  3015  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  3016  02E8  1105               	bcf	5,2
  3017                           ;OneWire.c: 86: RA2=0x00;
  3018  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  3019  02EA  1105               	bcf	5,2
  3020                           ;OneWire.c: 88: t=42;;
  3021  02EB  302A               	movlw	42
  3022  02EC  00A3               	movwf	_t
  3023                           ;OneWire.c: 89: delay_10us();
  3024  02ED  24AC               	fcall	_delay_10us
  3025                           ;OneWire.c: 91: TRISA2=0x00;
  3026  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  3027  02EF  1105               	bcf	5,2
  3028                           ;OneWire.c: 92: RA2=0x01;
  3029  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  3030  02F1  1505               	bsf	5,2
  3031                           ;OneWire.c: 94: t=6;;
  3032  02F2  3006               	movlw	6
  3033  02F3  00A3               	movwf	_t
  3034                           ;OneWire.c: 95: delay_10us();
  3035  02F4  24AC               	fcall	_delay_10us
  3036                           ;OneWire.c: 97: TRISA2=0x01;
  3037  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  3038  02F6  1505               	bsf	5,2
  3039                           ;OneWire.c: 98: if (RA2 == 1)
  3040  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  3041                           ;OneWire.c: 99: PresencePulse=0x00;
  3042  02F8  01F0               	clrf	InitiButton@PresencePulse
  3043  02F9  1D05               	btfss	5,2
  3044                           ;OneWire.c: 100: else
  3045                           ;OneWire.c: 101: PresencePulse=0x01;
  3046  02FA  0AF0               	incf	InitiButton@PresencePulse,f
  3047                           ;OneWire.c: 103: t=50;;
  3048  02FB  3032               	movlw	50
  3049  02FC  00A3               	movwf	_t
  3050                           ;OneWire.c: 104: delay_10us();
  3051  02FD  24AC               	fcall	_delay_10us
  3052                           ;OneWire.c: 106: TRISA2=0x00;
  3053  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  3054  02FF  1105               	bcf	5,2
  3055                           ;OneWire.c: 107: RA2=0x01;
  3056  0300  1283               	bcf	3,5	;RP0=0, select bank0
  3057  0301  1505               	bsf	5,2
  3058                           ;OneWire.c: 108: return (PresencePulse);
  3059  0302  0870               	movf	InitiButton@PresencePulse,w
  3060  0303  0008               	return
  3061  0304                     __end_of_InitiButton:
  3062                           
  3063                           	psect	text889
  3064  03A0                     __ptext889:	; =============== function _InitiButton ends ============
  3065                           ; *************** function _WriteEEPROM *****************
  3066                           ; Defined at:
  3067                           ;		line 201 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  3068                           ; Parameters:    Size  Location     Type
  3069                           ;		None
  3070                           ; Auto vars:     Size  Location     Type
  3071                           ;		None
  3072                           ; Return value:  Size  Location     Type
  3073                           ;		None               void
  3074                           ; Registers used:
  3075                           ;		wreg, status,2
  3076                           ; Tracked objects:
  3077                           ;		On entry : 20/0
  3078                           ;		On exit  : 60/60
  3079                           ;		Unchanged: FFF9F/0
  3080                           ; Data sizes:     COMMON   BANK0   BANK1
  3081                           ;      Locals:         0       0       0
  3082                           ;      Temp:     0
  3083                           ;      Total:    0
  3084                           ; This function calls:
  3085                           ;		Nothing
  3086                           ; This function is called by:
  3087                           ;		_EEPROMWriteKeyByte
  3088                           ;		_EEPROMWriteKey
  3089                           ;		_CHK_LOW_BAT_OPEN
  3090                           ;		_main
  3091                           ; This function uses a non-reentrant model
  3092                           ; 
  3093  03A0                     _WriteEEPROM:	;main.c: 200: void WriteEEPROM(void)
  3094                           ;main.c: 201: {
  3095                           ;main.c: 202: EEADR=DataEEAddr;
  3096                           ; Regs used in _WriteEEPROM: [wreg+status,2]
  3097  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  3098  03A1  0820               	movf	_DataEEAddr,w
  3099  03A2  1703               	bsf	3,6	;RP1=1, select bank2
  3100  03A3  008D               	movwf	13	;volatile
  3101                           ;main.c: 203: EEDAT=DataEEData;
  3102  03A4  0876               	movf	_DataEEData,w
  3103  03A5  008C               	movwf	12	;volatile
  3104                           ;main.c: 204: EECON1=0x00;
  3105  03A6  1683               	bsf	3,5	;RP0=1, select bank3
  3106  03A7  018C               	clrf	12	;volatile
  3107                           ;main.c: 205: WREN=0x01;
  3108  03A8  150C               	bsf	12,2
  3109                           ;main.c: 206: GIE=0x00;
  3110  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  3111  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  3112  03AB  138B               	bcf	11,7
  3113  03AC                     l58:
  3114  03AC  1B8B               	btfsc	11,7
  3115  03AD  2BAC               	goto	l58
  3116                           ;main.c: 208: EECON2=0x55;
  3117  03AE  3055               	movlw	85
  3118  03AF  1683               	bsf	3,5	;RP0=1, select bank3
  3119  03B0  1703               	bsf	3,6	;RP1=1, select bank3
  3120  03B1  008D               	movwf	13	;volatile
  3121                           ;main.c: 209: EECON2=0xAA;
  3122  03B2  30AA               	movlw	170
  3123  03B3  008D               	movwf	13	;volatile
  3124                           ;main.c: 210: WR=0x01;
  3125  03B4  148C               	bsf	12,1
  3126                           ;main.c: 211: GIE=0x01;
  3127  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  3128  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  3129  03B7  178B               	bsf	11,7
  3130                           ;main.c: 212: WREN=0x00;
  3131  03B8  1683               	bsf	3,5	;RP0=1, select bank3
  3132  03B9  1703               	bsf	3,6	;RP1=1, select bank3
  3133  03BA  110C               	bcf	12,2
  3134  03BB  0008               	return
  3135  03BC                     __end_of_WriteEEPROM:
  3136                           
  3137                           	psect	text890
  3138  04AC                     __ptext890:	; =============== function _WriteEEPROM ends ============
  3139                           ; *************** function _delay_10us *****************
  3140                           ; Defined at:
  3141                           ;		line 186 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\OneWire
      +                          .c"
  3142                           ; Parameters:    Size  Location     Type
  3143                           ;		None
  3144                           ; Auto vars:     Size  Location     Type
  3145                           ;		None
  3146                           ; Return value:  Size  Location     Type
  3147                           ;		None               void
  3148                           ; Registers used:
  3149                           ;		None
  3150                           ; Tracked objects:
  3151                           ;		On entry : 40/20
  3152                           ;		On exit  : 40/20
  3153                           ;		Unchanged: FFFFFFBF/0
  3154                           ; Data sizes:     COMMON   BANK0   BANK1
  3155                           ;      Locals:         0       0       0
  3156                           ;      Temp:     0
  3157                           ;      Total:    0
  3158                           ; This function calls:
  3159                           ;		Nothing
  3160                           ; This function is called by:
  3161                           ;		_InitiButton
  3162                           ;		_WriteByteToiButton
  3163                           ;		_ReadByteToiButton
  3164                           ; This function uses a non-reentrant model
  3165                           ; 
  3166  04AC                     _delay_10us:	;OneWire.c: 185: void delay_10us(void)
  3167                           ;OneWire.c: 186: {
  3168                           ; Regs used in _delay_10us: []
  3169  04AC  1283               	bcf	3,5	;#
  3170  04AD                     DELAY_10US_XZ:
  3171                           ;#
  3172  04AD  0000               	nop	;#
  3173  04AE  0000               	nop	;#
  3174  04AF  0000               	nop	;#
  3175  04B0  0000               	nop	;#
  3176  04B1  0000               	nop	;#
  3177  04B2  0000               	nop	;#
  3178  04B3  0000               	nop	;#
  3179  04B4  0000               	nop	;#
  3180  04B5  0000               	nop	;#
  3181  04B6  0BA3               	decfsz	_t,f	;#
  3182  04B7  2CAD               	goto	DELAY_10US_XZ	;#
  3183  04B8  0008               	return
  3184  04B9                     __end_of_delay_10us:
  3185                           
  3186                           	psect	text891
  3187  0490                     __ptext891:	; =============== function _delay_10us ends ============
  3188                           ; *************** function _isr *****************
  3189                           ; Defined at:
  3190                           ;		line 424 in file "D:\Amit\E-Projects\PIC Projects\Mechatronics_Proto23Jan2012\main.c"
  3191                           ; Parameters:    Size  Location     Type
  3192                           ;		None
  3193                           ; Auto vars:     Size  Location     Type
  3194                           ;		None
  3195                           ; Return value:  Size  Location     Type
  3196                           ;		None               void
  3197                           ; Registers used:
  3198                           ;		wreg, status,2
  3199                           ; Tracked objects:
  3200                           ;		On entry : 0/0
  3201                           ;		On exit  : 60/0
  3202                           ;		Unchanged: FFF9F/0
  3203                           ; Data sizes:     COMMON   BANK0   BANK1
  3204                           ;      Locals:         0       3       0
  3205                           ;      Temp:     3
  3206                           ;      Total:    3
  3207                           ; This function calls:
  3208                           ;		Nothing
  3209                           ; This function is called by:
  3210                           ;		Interrupt level 1
  3211                           ; This function uses a non-reentrant model
  3212                           ; 
  3213  0490                     _isr:	;main.c: 423: static void interrupt isr(void)
  3214                           ;main.c: 424: {
  3215                           ;main.c: 425: unsigned char i;
  3216                           ;main.c: 426: i=PORTA;
  3217  0490  0805               	movf	5,w	;volatile
  3218                           ;main.c: 427: RABIF=0x00;
  3219  0491  100B               	bcf	11,0
  3220                           ;main.c: 428: IOCA=0x00;
  3221  0492  1683               	bsf	3,5	;RP0=1, select bank1
  3222  0493  0196               	clrf	22
  3223  0494  1283               	bcf	3,5	;RP0=0, select bank0
  3224  0495  084A               	movf	??_isr+2,w
  3225  0496  00FE               	movwf	126
  3226  0497  0849               	movf	??_isr+1,w
  3227  0498  008A               	movwf	10
  3228  0499  0848               	movf	??_isr,w
  3229  049A  0083               	movwf	3
  3230  049B  0EFF               	swapf	127,f
  3231  049C  0E7F               	swapf	127,w
  3232  049D  0009               	retfie
  3233  049E                     __end_of_isr:
  3234                           
  3235                           	psect	intentry
  3236  0004                     __pintentry:	; Regs used in _isr: [wreg+status,2]
  3237  0004                     interrupt_function:
  3238  007F                     saved_w	set	btemp+1
  3239  0004  00FF               	movwf	btemp+1
  3240  0005  0803               	movf	3,w
  3241  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3242  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3243  0008  00C8               	movwf	??_isr
  3244  0009  080A               	movf	10,w
  3245  000A  00C9               	movwf	??_isr+1
  3246  000B  087E               	movf	btemp,w
  3247  000C  00CA               	movwf	??_isr+2
  3248  000D  2C90               	ljmp	_isr
  3249                           
  3250                           	psect	text892
  3251  0539                     __ptext892:	; =============== function _isr ends ============
  3252  007E                     btemp	set	126	;btemp


HI-TECH Software PICC Macro Assembler V9.70 build 5239 
Symbol Table                                                                                   Tue Jan 24 14:23:19 2012

       __end_of_Wait_With_LED_Blink 0482                     ??_ToggleBuzzLED 0070  
                  __size_of_DelayMs 001A                                   l1 0000  
                                 l5 0000                  ReadByteToiButton@n 0038  
                 ?_CHK_LOW_BAT_OPEN 0070                                   _t 0023  
                                 pc 0002                   __size_of_ClearKey 000E  
                    _ToggleSkipFlag 0022          ?_CheckForiButtonDisconnect 0071  
                                l20 0535                                  l13 0000  
                                _DA 04A5                                  _BF 04A0  
                                l23 0525                                  _DC 0019  
                                l61 0000                                  l53 0215  
                                l71 0000                                  l56 0000  
                                l64 0000                                  l57 0000  
                                l49 0000                                  l81 0000  
                                l58 03AC                                  l74 0000  
                                l78 0000                                  _PD 001B  
                                _RD 0C60                                  _UA 04A1  
                                _TO 001C                                  _RW 04A2  
                                _WR 0C61                                  fsr 0004  
                CRCCheck@KeyPointer 0039                       ??_WriteEEPROM 0070  
                     _LockOperation 017B                      ClearKey@KeyNum 003C  
                       __pbssCOMMON 0076           __end_of_ReadByteToiButton 0383  
        __end_of_WriteByteToiButton 0428                  _ConfigureMasterKey 0304  
__size_of_CheckForiButtonDisconnect 0001                                 l112 0000  
                               _C1R 08CA                                 l210 0000  
                               _C2R 08D2                                 l211 0000  
                               l123 0000                                 l220 0000  
                               l116 0000                                 l221 0366  
                               l214 0000                                 l142 0000  
                               l215 0410                                 l224 0377  
                               l145 0362                                 l226 0000  
                               l162 01BA                                 l155 031D  
                               l180 0000                                 l156 0323  
                    _EEPROMWriteKey 02C1                ??_EEPROMWriteKeyByte 0070  
         _CheckForiButtonDisconnect 0538                   __size_of_DoorOpen 002C  
                               _CKE 04A6                                 _CKP 00A4  
                               _GIE 005F                                 _BOR 0470  
                               _RA0 0028                                 _RA1 0029  
                               _RA2 002A                                 _RA3 002B  
                               _RC0 0038                                 _RA4 002C  
                               _RC1 0039                                 _RA5 002D  
                               _RC2 003A                                 _RB4 0034  
                               _RC3 003B                                 _RB5 0035  
                               _RC4 003C                                 _RB6 0036  
                               _RC5 003D                                 _RB7 0037  
                               _RC6 003E                                 _RC7 003F  
                         _ToggleLED 04B9                  DoorOpen@BattStatus 0070  
                               _FSR 0004                                 _PCL 0002  
                               _PS0 0408                                 _PS1 0409  
                               _PS2 040A                                 _RP0 001D  
                               _IRP 001F                                 _RP1 001E  
                               _HTS 047A                                 _SR0 0CF6  
                               _SR1 0CF7                                 _SCS 0478  
                               _PSA 040B                                 _LTS 0479  
                               _VR0 08C0                                 _VR1 08C1  
                               _VR2 08C2                                 _VR3 08C3  
                               _POR 0471                                 _SMP 04A7  
                         _PowerInit 0219                                 _VRR 08C5  
                 __end_of_ToggleLED 04C6                   __end_of_PowerInit 0249  
                  Configuration@key 0041                     ?_EEPROMWriteKey 0072  
                               _isr 0490                  __size_of_GoToSleep 000A  
                               fsr0 0004                                 indf 0000  
        Configuration@KeyConfigured 0042                        ??_BuzzerBeep 0070  
                        ?_ToggleLED 0070      LockOperation@ShouldCheckConfig 0046  
                   __size_of_strcmp 0018                          ?_PowerInit 0070  
                     ??_InitiButton 0070                 ?_ToggleBuzzErrorLED 0070  
                  ??_EEPROMWriteKey 0070                 __size_of_delay_10us 000D  
      __end_of_InvalidKeyIndication 0365               __end_of_LockOperation 01E2  
      __size_of_Wait_With_LED_Blink 0012                  ??_CHK_LOW_BAT_OPEN 0070  
                     ??_ReadiButton 0070                  __size_of_DoorClose 000E  
                              _C1IE 046D                                _C1IF 006D  
                              _C2IE 046E                                _C2IF 006E  
                              _C1OE 08CD                                _C2OE 08D5  
                              _C1ON 08CF                                _C2ON 08D7  
                       _TimeCounter 007B                                _ADIE 0466  
                              _ADIF 0066                                _ADFM 00FF  
                              ?_isr 004B                                _ADON 00F8  
                              _CHS0 00FA                                _CHS1 00FB  
                              _CHS2 00FC                                _CHS3 00FD  
                              _EEIE 046C                                _EEIF 006C  
                              _ANS0 08F0                                _ANS1 08F1  
                              _ANS2 08F2                                _ANS3 08F3  
                              _ANS4 08F4                                _ANS5 08F5  
                              _ANS6 08F6                                _ANS7 08F7  
                              _ANS8 08F8                                _ANS9 08F9  
                              _T0IE 005D                                _T0IF 005A  
                              _T0CS 040D                                _T0SE 040C  
                              _IOCA 0096                                _IOCB 0116  
                              _INDF 0000              __size_of_EEPROMReadKey 001D  
                              _PIE1 008C                                _PIE2 008D  
                              u1835 03FC                                u1915 0208  
                              _PEIE 005E                                _INTE 005C  
                              _INTF 0059                                _RBIE 005B  
                              _RBIF 0058                                _PCON 008E  
                              _PIR1 000C                                _PIR2 000D  
                              _RBPU 040F                                _VCFG 00FE  
                              _TMR0 0001                                _WCOL 00A7  
                      _ClearAllKeys 03D8                                _OSTS 047B  
                              _TUN0 0480                                _TUN1 0481  
                              _TUN2 0482                                _TUN3 0483  
                              _TUN4 0484                                _STOP 04A4  
                              _ZERO 001A                                _WREN 0C62  
                              _WPUA 0095                                _WPUB 0115  
                       ??_ToggleLED 0070              __size_of_ToggleBuzzLED 0008  
                       ??_PowerInit 0070                    __end_of_CRCCheck 02C1  
             ReadByteToiButton@temp 0036                     __end_of_DelayMs 040E  
       __size_of_ConfigureMasterKey 0021                                _main 0325  
                              btemp 007E                      ?_Configuration 0044  
              __end_of_ClearAllKeys 03F4                  BuzzerBeep@BeepTime 003D  
               BuzzerBeep@LONG_BEEP 0040                                start 000E  
                   ??_Configuration 0036                   interrupt_function 0004  
            __end_of_EEPROMWriteKey 02E3                 start_initialization 04C6  
                          clear_ram 0528            EEPROMReadKey@ReadAddress 0070  
                    Configuration@i 0043                ??_WriteByteToiButton 0070  
                             ??_isr 0048                           stringcode 0508  
                           _CM1CON0 0119                             _CM2CON0 011A  
                           _CM2CON1 011B                         _AvailabeKey 0428  
                             _C1CH0 08C8                               _C1CH1 08C9  
                             _C2CH0 08D0                               _C2CH1 08D1  
                _EEPROMWriteKeyByte 0459                               _C1SEN 0CF5  
                             _C2REN 0CF4                               _C1POL 08CC  
                             _C2POL 08D4                               _C1OUT 08CE  
                             _C2OUT 08D6                               _ADCS0 04FC  
                             _ADCS1 04FD                               _ADCS2 04FE  
                             ?_main 0048                 __end_of_AvailabeKey 0441  
                         __ptext860 0304                               _EEADR 010D  
                         __ptext861 017B                           __ptext870 03D8  
                         __ptext862 0219                           __ptext871 0275  
                         __ptext863 010F                           __ptext880 029D  
                         __ptext872 049E                           __ptext864 0530  
                         __ptext881 040E                           __ptext873 0428  
                         __ptext865 0249                           __ptext890 04AC  
                         __ptext882 0459                           __ptext874 0470  
                         __ptext866 0345                           __ptext891 0490  
                         __ptext883 0538                           __ptext875 03BC  
                         __ptext867 0520                           __ptext892 0539  
                         __ptext884 04B9                           __ptext876 02C1  
                         __ptext868 0516                               _ANS10 08FA  
                             _EEDAT 010C                           __ptext885 0365  
                         __ptext877 01E2                           __ptext869 0482  
                             _ANS11 08FB                           __ptext886 03F4  
                         __ptext878 0441                           __ptext887 050B  
                         __ptext879 0383                           __ptext888 02E3  
                         __ptext889 03A0                 ?_ConfigureMasterKey 0042  
                             _CARRY 0018                               _ANSEL 011E  
                             _T1CON 0010                               _IOCA0 04B0  
                             _IOCA1 04B1                               _IOCA2 04B2  
                             _IOCA3 04B3                               _IOCA4 04B4  
                             _IOCA5 04B5                               _IOCB4 08B4  
                    AvailabeKey@key 0038                               _IOCB5 08B5  
                             _IOCB6 08B6                               _IOCB7 08B7  
                             _T1GSS 08D9                             _T1CKPS0 0084  
                           _T1CKPS1 0085                          _iButtonKey 002D  
                           ?_strcmp 0071                               _IRCF0 047C  
                             _IRCF1 047D                               _IRCF2 047E  
                             _RABIE 005B                               _RABIF 0058  
                             i1l148 0000                           _EEPROMKey 0024  
                             _RABPU 040F                            ??_strcmp 0070  
                             _OSFIE 046F                               _OSFIF 006F  
                             _VP6EN 08C4                               _TMR1H 000F  
                             _TMR1L 000E                               _PORTA 0005  
                             _PORTB 0006                             _T1OSCEN 0083  
                             _PORTC 0007                               _SRCON 019E  
                             _START 04A3                               _PULSR 0CF2  
                             _PULSS 0CF3                               _SSPM0 00A0  
                             _SSPM1 00A1                               _SSPM2 00A2  
                             _SSPM3 00A3                               _TRISA 0085  
                             _TRISB 0086                               _TRISC 0087  
                             _SSPIE 0463                               _SSPIF 0063  
                             _SSPEN 00A5                               _VRCON 0118  
           ClearAllKeys@Master_Also 003C                               _WPUA0 04A8  
                             _WPUA1 04A9                               _WPUA2 04AA  
                             _WPUA4 04AC                               _WPUA5 04AD  
                             _WPUB4 08AC                               _SSPOV 00A6  
                             _WPUB5 08AD                               _WPUB6 08AE  
                             _WPUB7 08AF                               _WRERR 0C63  
                         __pstrings 0500                 __size_of_ReadEEPROM 000B  
     ConfigureMasterKey@PowerOnBeep 0041                  __size_of_ToggleLED 000D  
                __size_of_PowerInit 0030                      __pcstackCOMMON 0070  
                  __end_of_ClearKey 04AC                             _OSCTUNE 0090  
            __size_of_Configuration 006C       __size_of_InvalidKeyIndication 0020  
              ?_Wait_With_LED_Blink 0071                          _DataEEAddr 0020  
                        _DataEEData 0076                             _SSPSTAT 0094  
        __end_of_ToggleBuzzErrorLED 0528   __end_of_CheckForiButtonDisconnect 0539  
                     ClearAllKeys@i 003D                               pclath 000A  
                     ?_ClearAllKeys 0071                        ?_AvailabeKey 0072  
             ??_Wait_With_LED_Blink 0070         __size_of_EEPROMWriteKeyByte 0017  
                  __end_of_DoorOpen 0275                             _DelayMs 03F4  
                          intlevel1 0004                   _ReadByteToiButton 0365  
                             status 0003                            ?_DelayMs 003A  
                      ReadiButton@n 003B                           ??_DelayMs 0070  
           __size_of_EEPROMWriteKey 0022                           ClearKey@i 003D  
                     _EEPROMReadKey 0383                __size_of_AvailabeKey 0019  
    EEPROMWriteKeyByte@WriteAddress 0070                       _ToggleBuzzLED 0530  
                           _LowBatt 0079          __size_of_ReadByteToiButton 001E  
               __size_of_BuzzerBeep 0037                  _WriteByteToiButton 040E  
                     __size_of_main 0020                          __pbssBANK0 0020  
             __size_of_ClearAllKeys 001C                            l30001400 0000  
                          l30001401 0000                            l30001402 0000  
                          l30001403 0000                            l30001404 0000  
                          l30001405 0000                            l30001511 03F4  
                          l30001520 0000                            l30001521 0000  
                          l30001610 0000                            l30001530 0000  
                          l30001522 0000                            l30001515 0400  
                          l30001611 0000                            l30001531 0000  
                          l30001516 0000                            l30001620 0000  
                          l30001612 0000                            l30001540 0000  
                          l30001532 0000                            l30001541 0000  
                          l30001533 0000                            l30001525 0000  
                          l30001518 03F6                            l30001550 0000  
                          l30001710 0439                            l30001702 0000  
                          l30001390 0000                            l30001551 0000  
                          l30001615 0000                            l30001519 0000  
                          l30001543 0273                            l30001383 0000  
                          l30001391 0000                            l30001560 0000  
                          l30001720 0000                            l30001552 0000  
                          l30001616 0000                            l30001544 0000  
                          l30001536 0000                            l30001528 0000  
                          l30001392 0000                            l30001561 0000  
                          l30001553 01ED                            l30001705 042F  
                          l30001617 028E                            l30001609 0000  
                          l30001545 0000                            l30001385 0000  
                          l30001529 0000                            l30001393 0000  
                          l30001562 0000                            l30001730 0000  
                          l30001554 01F0                            l30001706 0000  
                          l30001570 03DC                            l30001810 013E  
                          l30001802 012D                            l30001394 0000  
                          l30001563 0000                            l30001555 0000  
                          l30001619 0296                            l30001571 0000  
                          l30001547 0000                            l30001539 0000  
                          l30001803 0000                            l30001395 0000  
                          l30001387 0000                            l30001740 0000  
                          l30001564 0000                            l30001724 0000  
                          l30001708 042A                            l30001580 0000  
                          l30001572 0000                            l30001548 0000  
                          l30001820 0000                            l30001804 0000  
                          l30001396 0000                            l30001388 0000  
                          l30001900 0000                            l30001741 0000  
                          l30001565 0000                            l30001725 0000  
                          l30001557 0000                            l30001709 0000  
                          l30001573 0000                            l30001549 0000  
                          l30001821 0158                            l30001805 0000  
                          l30001397 0000                            l30001389 0000  
                          l30001901 0000                            l30001742 0000  
                          l30001910 0000                            l30001566 0000  
                          l30001726 0000                            l30001750 0000  
                          l30001558 0000                            l30001574 0000  
                          l30001814 0144                            l30001806 0000  
                          l30001830 0116                            l30001398 0000  
                          l30001735 0000                            l30001911 0000  
                          l30001727 0000                            l30001751 0000  
                          l30001743 0000                            l30001559 01F2  
                          l30001583 04A0                            l30001575 03EC  
                          l30001567 0000                            l30001831 0177  
                          l30001807 0000                            l30001823 0161  
                          l30001399 0000                            l30001904 0000  
                          l30001736 0000                            l30001912 0000  
                          l30001760 04BD                            l30001920 0000  
                          l30001752 0000                            l30001744 0000  
                          l30001592 02CA                            l30001584 0000  
                          l30001832 0000                            l30001816 0000  
                          l30001808 0128                            l30001840 0000  
                          l30001737 0000                            l30001905 02E3  
                          l30001753 0000                            l30001745 0000  
                          l30001593 0000                            l30001585 0000  
                          l30001825 0000                            l30001817 0000  
                          l30001809 0000                            l30001833 0000  
                          l30001738 0000                            l30001906 0000  
                          l30001754 0000                            l30001930 0000  
                          l30001762 04C4                            l30001770 041D  
                          l30001594 0000                            l30001578 0000  
                          l30001826 016B                            l30001818 0000  
                          l30001850 0000                            l30001842 0000  
                          l30001915 0000                            l30001907 0000  
                          l30001755 0000                            l30001771 0000  
                          l30001763 0000                            l30001595 0000  
                          l30001587 0000                            l30001819 0153  
                          l30001827 016F                            l30001843 01A0  
                          l30001835 0000                            l30001916 0000  
                          l30001908 0000                            l30001756 0000  
                          l30001772 0420                            l30001748 038C  
                          l30001692 0443                            l30001596 0000  
                          l30001588 0000                            l30001828 0000  
                          l30001852 018E                            l30001836 0000  
                          l30001860 01C4                            l30001917 0000  
                          l30001909 0000                            l30001757 0000  
                          l30001933 0000                            l30001773 0000  
                          l30001749 0000                            l30001597 0000  
                          l30001589 0000                            l30001829 0000  
                          l30001853 0000                            l30001837 0000  
                          l30001918 0000                            l30001934 0000  
                          l30001758 0000                            l30001774 0000  
                          l30001766 0000                            l30001598 0000  
                          l30001782 03C5                            l30001926 0476  
                          l30001870 01DD                            l30001862 0000  
                          l30001854 0000                            l30001838 0000  
                          l30001767 0000                            l30001695 0000  
                          l30001783 0000                            l30001791 03D6  
                          l30001775 0000                            l30001927 0000  
                          l30001863 01CC                            l30001847 01AD  
                          l30001855 0198                            l30001839 0000  
                          l30001871 0000                            l30001696 0454  
                          l30001784 0000                            l30001776 0000  
                          l30001856 0000                            l30001880 0000  
                          l30001872 0000                            l30001937 0000  
                          l30001769 0000                            l30001689 0000  
                          l30001777 0000                            l30001929 0470  
                          l30001793 0000                            l30001857 0000  
                          l30001849 0000                            l30001881 0000  
                          l30001873 0000                            l30001938 0000  
                          l30001778 0000                            l30001794 0000  
                          l30001866 01CE                            l30001858 01BE  
                          l30001882 0000                            l30001874 0000  
                          l30001939 0000                            l30001779 0000  
                          l30001891 0000                            l30001795 0000  
                          l30001867 0000                            l30001875 033C  
                          l30001892 0000                            l30001868 0000  
                          l30001884 0000                            l30001876 0000  
                          l30001893 0000                            l30001885 0000  
                          l30001869 0000                            l30001877 0340  
                          l30001894 0348                            l30001886 0000  
                          l30001798 0000                            l30001878 0330  
                          l30001895 0000                            l30001879 0000  
                          l30001888 0000                            l30001889 0000  
                          l30001898 0313                     _InvalidKeyCount 0078  
                       __stringbase 050B              EEPROMReadKey@KeyLength 0071  
               WriteByteToiButton@d 0070                          _delay_10us 04AC  
              Wait_With_LED_Blink@k 0036                 WriteByteToiButton@n 0071  
             __end_of_EEPROMReadKey 03A0                  __end_of_delay_10us 04B9  
                    ?_LockOperation 0047              CRCCheck@KeyAllByteZero 0036  
             __end_of_ToggleBuzzLED 0538                 ?_EEPROMWriteKeyByte 0071  
                ?_ReadByteToiButton 0070                              ??_main 0036  
                   ??_LockOperation 0036                        AvailabeKey@i 0039  
                        __pmaintext 0325                   BuzzerBeep@BeepCnt 003F  
          __end_of_CHK_LOW_BAT_OPEN 029D                   BuzzerBeep@BeepNum 003C  
                       ?_delay_10us 0070          __end_of_ConfigureMasterKey 0325  
              ??_ToggleBuzzErrorLED 0070                          __pintentry 0004  
       __size_of_WriteByteToiButton 001A                              _C1VREN 08C7  
                          stringdir 050A                              _C2VREN 08C6  
                            _C2SYNC 08D8                            stringtab 0500  
                       CRCCheck@CRC 0037                              _ADCON0 001F  
                            _ADCON1 009F                              _ADRESH 001E  
                            _ADRESL 009E                              _EEADRL 010D  
                            _EEDATA 010C                              _EEDATL 010C  
                            _EECON1 018C                              _EECON2 018D  
                            _ANSELH 011F                              _MC1OUT 08DF  
                            _MC2OUT 08DE                        __end_of_main 0345  
                            _T1GINV 0087                         _WriteEEPROM 03A0  
                            _GODONE 00F9                end_of_initialization 04CF  
                            _T1SYNC 0082                      LockOperation@i 0044  
                            _INTEDG 040E                              _PCLATH 000A  
                            _INTCON 000B                       __pcstackBANK0 0036  
                     ??_AvailabeKey 0071                            _CRCCheck 029D  
                            _SBOREN 0474                              _OSCCON 008F  
               __end_of_WriteEEPROM 03BC                              _TMR1GE 0086  
                            _TMR1IE 0460                              _TMR1IF 0060  
                            _TMR1CS 0081                              _OPTION 0081  
                            _TMR1ON 0080                              _WDTCON 0097  
                         ?_CRCCheck 0070                              _WDTPS0 04B9  
                            _WDTPS1 04BA                              _WDTPS2 04BB  
                            _WDTPS3 04BC                              _SSPADD 0093  
                            _TRISA0 0428                              _TRISA1 0429  
                            _TRISA2 042A                              _TRISA3 042B  
                            _TRISC0 0438                              _TRISA4 042C  
                            _TRISC1 0439                              _TRISA5 042D  
                            _TRISC2 043A                              _TRISB4 0434  
                            _TRISC3 043B                              _TRISB5 0435  
                            _TRISC4 043C                              _TRISB6 0436  
                            _TRISC5 043D                              _TRISB7 0437  
                            _TRISC6 043E                              _TRISC7 043F  
                            _STATUS 0003                       _Configuration 010F  
                          _CRCValue 000F                      DelayMs@TimeCnt 003A  
                            _SSPCON 0014                              _SSPBUF 0013  
                            _SWDTEN 04B8                              _ULPWUE 0475  
                            _SSPMSK 0093                      __end_of_strcmp 0459  
                          DelayMs@i 0036                            DelayMs@j 0038  
                        ??_CRCCheck 0070             ReadByteToiButton@i_byte 0037  
                      ??_delay_10us 0070                         _InitiButton 02E3  
            __size_of_LockOperation 0067                 __end_of_InitiButton 0304  
                      __size_of_isr 000E                         _ReadiButton 03BC  
         ReadiButton@iButtonPresent 003A                 ?_WriteByteToiButton 0072  
                        _ReadEEPROM 050B               __end_of_Configuration 017B  
               __end_of_ReadiButton 03D8                  __end_of_ReadEEPROM 0516  
                      ?_WriteEEPROM 0070                           _GoToSleep 0516  
                        i1l30001406 0000                          i1l30001407 0000  
                        i1l30001408 0000                             strcmp@i 0037  
                 __end_of_GoToSleep 0520                             strcmp@x 0036  
                           strcmp@y 0071           __size_of_CHK_LOW_BAT_OPEN 0028  
               ??_ReadByteToiButton 0070                        DELAY_10US_XZ 04AD  
                 __size_of_CRCCheck 0024                              _strcmp 0441  
                            clrloop 0529                         __end_of_isr 049E  
                   main@PowerOnBeep 0047                ??_ConfigureMasterKey 0036  
                        ?_GoToSleep 0070                         ?_ReadEEPROM 0070  
              __size_of_WriteEEPROM 001C                           _DoorClose 0482  
                 __end_of_DoorClose 0490                        ?_InitiButton 0071  
        __end_of_EEPROMWriteKeyByte 0470                  _ToggleBuzzErrorLED 0520  
                            saved_w 007F            InitiButton@PresencePulse 0070  
        EEPROMWriteKey@WriteAddress 0070                            _ClearKey 049E  
                     __pstringtext1 000F                          ?_DoorClose 0070  
                      ?_ReadiButton 0072                 _Wait_With_LED_Blink 0470  
                         ?_ClearKey 0071                         ??_GoToSleep 0070  
              __size_of_InitiButton 0021                _InvalidKeyIndication 0345  
                        _BuzzerBeep 01E2                          ??_ClearKey 0070  
                          _DoorOpen 0249                  __end_of_BuzzerBeep 0219  
                    ??_ClearAllKeys 0070                __size_of_ReadiButton 001C  
             ?_InvalidKeyIndication 0072                            _MatchKey 007A  
                         ?_DoorOpen 0071         ??_CheckForiButtonDisconnect 0070  
                       ??_DoorClose 0070                    _CHK_LOW_BAT_OPEN 0275  
                 CRCCheck@LenForCrc 0038                        ??_ReadEEPROM 0070  
                        ??_DoorOpen 0070                      ?_EEPROMReadKey 0072  
            ??_InvalidKeyIndication 0071         __size_of_ToggleBuzzErrorLED 0008  
                       ?_BuzzerBeep 0040             EEPROMWriteKey@KeyLength 0071  
                    ?_ToggleBuzzLED 0070                     ??_EEPROMReadKey 0070  
