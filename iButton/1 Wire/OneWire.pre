
# 1 "D:\Amit\E-Projects\PIC Projects\iButton\1 Wire\OneWire.c"

# 21 "C:\Program Files\HI-TECH Software\PICC\9.70\include\pic16f685.h"
volatile unsigned char INDF @ 0x000;
volatile unsigned char TMR0 @ 0x001;
volatile unsigned char PCL @ 0x002;
volatile unsigned char STATUS @ 0x003;
unsigned char FSR @ 0x004;
volatile unsigned char PORTA @ 0x005;
volatile unsigned char PORTB @ 0x006;
volatile unsigned char PORTC @ 0x007;
volatile unsigned char PCLATH @ 0x00A;
volatile unsigned char INTCON @ 0x00B;
volatile unsigned char PIR1 @ 0x00C;
volatile unsigned char PIR2 @ 0x00D;
volatile unsigned char TMR1L @ 0x00E;
volatile unsigned char TMR1H @ 0x00F;
unsigned char T1CON @ 0x010;

# 41
volatile unsigned char SSPBUF @ 0x013;
volatile unsigned char SSPCON @ 0x014;

# 59
volatile unsigned char ADRESH @ 0x01E;
volatile unsigned char ADCON0 @ 0x01F;

unsigned char OPTION @ 0x081;
volatile unsigned char TRISA @ 0x085;
volatile unsigned char TRISB @ 0x086;
volatile unsigned char TRISC @ 0x087;
unsigned char PIE1 @ 0x08C;
unsigned char PIE2 @ 0x08D;
volatile unsigned char PCON @ 0x08E;
volatile unsigned char OSCCON @ 0x08F;
unsigned char OSCTUNE @ 0x090;

# 75
unsigned char SSPADD @ 0x093;

unsigned char SSPMSK @ 0x093;
volatile unsigned char SSPSTAT @ 0x094;

unsigned char WPUA @ 0x095;
unsigned char IOCA @ 0x096;
volatile unsigned char WDTCON @ 0x097;

# 90
volatile unsigned char ADRESL @ 0x09E;
unsigned char ADCON1 @ 0x09F;

volatile unsigned char EEDAT @ 0x10C;

volatile unsigned char EEDATA @ 0x10C;

volatile unsigned char EEDATL @ 0x10C;
volatile unsigned char EEADR @ 0x10D;

volatile unsigned char EEADRL @ 0x10D;

# 105
unsigned char WPUB @ 0x115;
unsigned char IOCB @ 0x116;
unsigned char VRCON @ 0x118;
volatile unsigned char CM1CON0 @ 0x119;
volatile unsigned char CM2CON0 @ 0x11A;
volatile unsigned char CM2CON1 @ 0x11B;
unsigned char ANSEL @ 0x11E;

unsigned char ANSELH @ 0x11F;

volatile unsigned char EECON1 @ 0x18C;
volatile unsigned char EECON2 @ 0x18D;

# 120
volatile unsigned char SRCON @ 0x19E;



volatile bit CARRY @ ((unsigned)&STATUS*8)+0;
volatile bit DC @ ((unsigned)&STATUS*8)+1;
volatile bit ZERO @ ((unsigned)&STATUS*8)+2;
volatile bit PD @ ((unsigned)&STATUS*8)+3;
volatile bit TO @ ((unsigned)&STATUS*8)+4;
bit RP0 @ ((unsigned)&STATUS*8)+5;
bit RP1 @ ((unsigned)&STATUS*8)+6;
bit IRP @ ((unsigned)&STATUS*8)+7;


volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
volatile bit RA5 @ ((unsigned)&PORTA*8)+5;


volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
volatile bit RB7 @ ((unsigned)&PORTB*8)+7;


volatile bit RC0 @ ((unsigned)&PORTC*8)+0;
volatile bit RC1 @ ((unsigned)&PORTC*8)+1;
volatile bit RC2 @ ((unsigned)&PORTC*8)+2;
volatile bit RC3 @ ((unsigned)&PORTC*8)+3;
volatile bit RC4 @ ((unsigned)&PORTC*8)+4;
volatile bit RC5 @ ((unsigned)&PORTC*8)+5;
volatile bit RC6 @ ((unsigned)&PORTC*8)+6;
volatile bit RC7 @ ((unsigned)&PORTC*8)+7;


volatile bit RABIF @ ((unsigned)&INTCON*8)+0;

volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
volatile bit INTF @ ((unsigned)&INTCON*8)+1;
volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
bit RABIE @ ((unsigned)&INTCON*8)+3;

bit RBIE @ ((unsigned)&INTCON*8)+3;
bit INTE @ ((unsigned)&INTCON*8)+4;
bit T0IE @ ((unsigned)&INTCON*8)+5;
bit PEIE @ ((unsigned)&INTCON*8)+6;
volatile bit GIE @ ((unsigned)&INTCON*8)+7;


volatile bit TMR1IF @ ((unsigned)&PIR1*8)+0;

# 178
volatile bit SSPIF @ ((unsigned)&PIR1*8)+3;

# 185
volatile bit ADIF @ ((unsigned)&PIR1*8)+6;



volatile bit EEIF @ ((unsigned)&PIR2*8)+4;
volatile bit C1IF @ ((unsigned)&PIR2*8)+5;
volatile bit C2IF @ ((unsigned)&PIR2*8)+6;
volatile bit OSFIF @ ((unsigned)&PIR2*8)+7;


bit TMR1ON @ ((unsigned)&T1CON*8)+0;
bit TMR1CS @ ((unsigned)&T1CON*8)+1;
bit T1SYNC @ ((unsigned)&T1CON*8)+2;
bit T1OSCEN @ ((unsigned)&T1CON*8)+3;
bit T1CKPS0 @ ((unsigned)&T1CON*8)+4;
bit T1CKPS1 @ ((unsigned)&T1CON*8)+5;
bit TMR1GE @ ((unsigned)&T1CON*8)+6;
bit T1GINV @ ((unsigned)&T1CON*8)+7;

# 217
bit SSPM0 @ ((unsigned)&SSPCON*8)+0;
bit SSPM1 @ ((unsigned)&SSPCON*8)+1;
bit SSPM2 @ ((unsigned)&SSPCON*8)+2;
bit SSPM3 @ ((unsigned)&SSPCON*8)+3;
bit CKP @ ((unsigned)&SSPCON*8)+4;
bit SSPEN @ ((unsigned)&SSPCON*8)+5;
volatile bit SSPOV @ ((unsigned)&SSPCON*8)+6;
volatile bit WCOL @ ((unsigned)&SSPCON*8)+7;

# 275
bit ADON @ ((unsigned)&ADCON0*8)+0;
volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
bit CHS0 @ ((unsigned)&ADCON0*8)+2;
bit CHS1 @ ((unsigned)&ADCON0*8)+3;
bit CHS2 @ ((unsigned)&ADCON0*8)+4;
bit CHS3 @ ((unsigned)&ADCON0*8)+5;
bit VCFG @ ((unsigned)&ADCON0*8)+6;
bit ADFM @ ((unsigned)&ADCON0*8)+7;



bit PS0 @ ((unsigned)&OPTION*8)+0;
bit PS1 @ ((unsigned)&OPTION*8)+1;
bit PS2 @ ((unsigned)&OPTION*8)+2;
bit PSA @ ((unsigned)&OPTION*8)+3;
bit T0SE @ ((unsigned)&OPTION*8)+4;
bit T0CS @ ((unsigned)&OPTION*8)+5;
bit INTEDG @ ((unsigned)&OPTION*8)+6;
bit RABPU @ ((unsigned)&OPTION*8)+7;

bit RBPU @ ((unsigned)&OPTION*8)+7;


bit TRISA0 @ ((unsigned)&TRISA*8)+0;
bit TRISA1 @ ((unsigned)&TRISA*8)+1;
bit TRISA2 @ ((unsigned)&TRISA*8)+2;
bit TRISA3 @ ((unsigned)&TRISA*8)+3;
bit TRISA4 @ ((unsigned)&TRISA*8)+4;
bit TRISA5 @ ((unsigned)&TRISA*8)+5;


volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;


volatile bit TRISC0 @ ((unsigned)&TRISC*8)+0;
volatile bit TRISC1 @ ((unsigned)&TRISC*8)+1;
volatile bit TRISC2 @ ((unsigned)&TRISC*8)+2;
volatile bit TRISC3 @ ((unsigned)&TRISC*8)+3;
volatile bit TRISC4 @ ((unsigned)&TRISC*8)+4;
volatile bit TRISC5 @ ((unsigned)&TRISC*8)+5;
volatile bit TRISC6 @ ((unsigned)&TRISC*8)+6;
volatile bit TRISC7 @ ((unsigned)&TRISC*8)+7;


bit TMR1IE @ ((unsigned)&PIE1*8)+0;

# 328
bit SSPIE @ ((unsigned)&PIE1*8)+3;

# 335
bit ADIE @ ((unsigned)&PIE1*8)+6;



bit EEIE @ ((unsigned)&PIE2*8)+4;
bit C1IE @ ((unsigned)&PIE2*8)+5;
bit C2IE @ ((unsigned)&PIE2*8)+6;
bit OSFIE @ ((unsigned)&PIE2*8)+7;


volatile bit BOR @ ((unsigned)&PCON*8)+0;
volatile bit POR @ ((unsigned)&PCON*8)+1;
bit SBOREN @ ((unsigned)&PCON*8)+4;
bit ULPWUE @ ((unsigned)&PCON*8)+5;


bit SCS @ ((unsigned)&OSCCON*8)+0;
volatile bit LTS @ ((unsigned)&OSCCON*8)+1;
volatile bit HTS @ ((unsigned)&OSCCON*8)+2;
volatile bit OSTS @ ((unsigned)&OSCCON*8)+3;
bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
bit IRCF2 @ ((unsigned)&OSCCON*8)+6;


bit TUN0 @ ((unsigned)&OSCTUNE*8)+0;
bit TUN1 @ ((unsigned)&OSCTUNE*8)+1;
bit TUN2 @ ((unsigned)&OSCTUNE*8)+2;
bit TUN3 @ ((unsigned)&OSCTUNE*8)+3;
bit TUN4 @ ((unsigned)&OSCTUNE*8)+4;



volatile bit BF @ ((unsigned)&SSPSTAT*8)+0;
volatile bit UA @ ((unsigned)&SSPSTAT*8)+1;
volatile bit RW @ ((unsigned)&SSPSTAT*8)+2;
volatile bit START @ ((unsigned)&SSPSTAT*8)+3;
volatile bit STOP @ ((unsigned)&SSPSTAT*8)+4;
volatile bit DA @ ((unsigned)&SSPSTAT*8)+5;
bit CKE @ ((unsigned)&SSPSTAT*8)+6;
bit SMP @ ((unsigned)&SSPSTAT*8)+7;



bit WPUA0 @ ((unsigned)&WPUA*8)+0;
bit WPUA1 @ ((unsigned)&WPUA*8)+1;
bit WPUA2 @ ((unsigned)&WPUA*8)+2;
bit WPUA4 @ ((unsigned)&WPUA*8)+4;
bit WPUA5 @ ((unsigned)&WPUA*8)+5;


bit IOCA0 @ ((unsigned)&IOCA*8)+0;
bit IOCA1 @ ((unsigned)&IOCA*8)+1;
bit IOCA2 @ ((unsigned)&IOCA*8)+2;
bit IOCA3 @ ((unsigned)&IOCA*8)+3;
bit IOCA4 @ ((unsigned)&IOCA*8)+4;
bit IOCA5 @ ((unsigned)&IOCA*8)+5;


bit SWDTEN @ ((unsigned)&WDTCON*8)+0;
bit WDTPS0 @ ((unsigned)&WDTCON*8)+1;
bit WDTPS1 @ ((unsigned)&WDTCON*8)+2;
bit WDTPS2 @ ((unsigned)&WDTCON*8)+3;
bit WDTPS3 @ ((unsigned)&WDTCON*8)+4;

# 442
bit ADCS0 @ ((unsigned)&ADCON1*8)+4;
bit ADCS1 @ ((unsigned)&ADCON1*8)+5;
bit ADCS2 @ ((unsigned)&ADCON1*8)+6;



bit WPUB4 @ ((unsigned)&WPUB*8)+4;
bit WPUB5 @ ((unsigned)&WPUB*8)+5;
bit WPUB6 @ ((unsigned)&WPUB*8)+6;
bit WPUB7 @ ((unsigned)&WPUB*8)+7;


bit IOCB4 @ ((unsigned)&IOCB*8)+4;
bit IOCB5 @ ((unsigned)&IOCB*8)+5;
bit IOCB6 @ ((unsigned)&IOCB*8)+6;
bit IOCB7 @ ((unsigned)&IOCB*8)+7;


bit VR0 @ ((unsigned)&VRCON*8)+0;
bit VR1 @ ((unsigned)&VRCON*8)+1;
bit VR2 @ ((unsigned)&VRCON*8)+2;
bit VR3 @ ((unsigned)&VRCON*8)+3;
bit VP6EN @ ((unsigned)&VRCON*8)+4;
bit VRR @ ((unsigned)&VRCON*8)+5;
bit C2VREN @ ((unsigned)&VRCON*8)+6;
bit C1VREN @ ((unsigned)&VRCON*8)+7;


bit C1CH0 @ ((unsigned)&CM1CON0*8)+0;
bit C1CH1 @ ((unsigned)&CM1CON0*8)+1;
bit C1R @ ((unsigned)&CM1CON0*8)+2;
bit C1POL @ ((unsigned)&CM1CON0*8)+4;
bit C1OE @ ((unsigned)&CM1CON0*8)+5;
volatile bit C1OUT @ ((unsigned)&CM1CON0*8)+6;
bit C1ON @ ((unsigned)&CM1CON0*8)+7;


bit C2CH0 @ ((unsigned)&CM2CON0*8)+0;
bit C2CH1 @ ((unsigned)&CM2CON0*8)+1;
bit C2R @ ((unsigned)&CM2CON0*8)+2;
bit C2POL @ ((unsigned)&CM2CON0*8)+4;
bit C2OE @ ((unsigned)&CM2CON0*8)+5;
volatile bit C2OUT @ ((unsigned)&CM2CON0*8)+6;
bit C2ON @ ((unsigned)&CM2CON0*8)+7;


bit C2SYNC @ ((unsigned)&CM2CON1*8)+0;
bit T1GSS @ ((unsigned)&CM2CON1*8)+1;
volatile bit MC2OUT @ ((unsigned)&CM2CON1*8)+6;
volatile bit MC1OUT @ ((unsigned)&CM2CON1*8)+7;


bit ANS0 @ ((unsigned)&ANSEL*8)+0;
bit ANS1 @ ((unsigned)&ANSEL*8)+1;
bit ANS2 @ ((unsigned)&ANSEL*8)+2;
bit ANS3 @ ((unsigned)&ANSEL*8)+3;
bit ANS4 @ ((unsigned)&ANSEL*8)+4;
bit ANS5 @ ((unsigned)&ANSEL*8)+5;
bit ANS6 @ ((unsigned)&ANSEL*8)+6;
bit ANS7 @ ((unsigned)&ANSEL*8)+7;



bit ANS8 @ ((unsigned)&ANSELH*8)+0;
bit ANS9 @ ((unsigned)&ANSELH*8)+1;
bit ANS10 @ ((unsigned)&ANSELH*8)+2;
bit ANS11 @ ((unsigned)&ANSELH*8)+3;



volatile bit RD @ ((unsigned)&EECON1*8)+0;
volatile bit WR @ ((unsigned)&EECON1*8)+1;
volatile bit WREN @ ((unsigned)&EECON1*8)+2;
volatile bit WRERR @ ((unsigned)&EECON1*8)+3;

# 528
volatile bit PULSR @ ((unsigned)&SRCON*8)+2;
volatile bit PULSS @ ((unsigned)&SRCON*8)+3;
bit C2REN @ ((unsigned)&SRCON*8)+4;
bit C1SEN @ ((unsigned)&SRCON*8)+5;
bit SR0 @ ((unsigned)&SRCON*8)+6;
bit SR1 @ ((unsigned)&SRCON*8)+7;

# 392 "C:\Program Files\HI-TECH Software\PICC\9.70\include\pic.h"
extern unsigned int flash_read(unsigned short addr);

# 41 "C:\Program Files\HI-TECH Software\PICC\9.70\include\eeprom_routines.h"
extern void eeprom_write(unsigned char addr, unsigned char value);
extern unsigned char eeprom_read(unsigned char addr);


# 465 "C:\Program Files\HI-TECH Software\PICC\9.70\include\pic.h"
#pragma inline(_delay)
extern void _delay(unsigned long);

# 9 "D:\Amit\E-Projects\PIC Projects\iButton\1 Wire\OneWire.h"
unsigned char t;

void delay_10us(void);
unsigned char ReadiButton(void);
unsigned char InitiButton(void);
unsigned char CRCCheck(union USR *);
unsigned char ReadByteToiButton(void);
void WriteByteToiButton(unsigned char);
unsigned char CheckForiButtonDisconnect(void);




union USR
{
struct
{
union
{
unsigned char BYTE[8];
unsigned char CRC;
}KEY;
}DATA;
unsigned char BYTE[13];
};

extern union USR USER;

# 18 "D:\Amit\E-Projects\PIC Projects\iButton\1 Wire\OneWire.c"
unsigned char CRCCheck(union USR * USER_PTR)
{
unsigned char i, j, CRC, KeyAllByteZero;
unsigned char crc_lsb_bit, data_lsb_bit,TmpByte;

CRC=0x00;
KeyAllByteZero=0x00;

for(i=8;i>1;i--)
{
TmpByte = USER_PTR->BYTE[i];
KeyAllByteZero |= TmpByte;
for(j=0;j<8;j++)
{
data_lsb_bit = (TmpByte>>j) & 0x01;
crc_lsb_bit=(CRC & 0x01);

CRC >>= 1;
if(data_lsb_bit !=crc_lsb_bit)
CRC ^= 0x8C;
}
}
if(USER_PTR->DATA.KEY.CRC == CRC && KeyAllByteZero != 0)
return(1);
else
return(0);
}

# 54
unsigned char ReadiButton(void)
{
signed char n, iButtonPresent = 0;
iButtonPresent = InitiButton();

USER.DATA.KEY.CRC=0x00;

if(iButtonPresent)
{
WriteByteToiButton(0x33);
for (n=7; n>=0; n--)
USER.DATA.KEY.BYTE[n]=ReadByteToiButton();

if(CRCCheck(&USER))
return(1);
else
return(0);
}
return(iButtonPresent);
}

# 82
unsigned char CheckForiButtonDisconnect(void)
{
return(InitiButton());
}

# 94
unsigned char InitiButton(void)
{
unsigned char PresencePulse;

TRISA2=0x00;
RA2=0x01;
TRISA2=0x00;
RA2=0x00;

t=42;
delay_10us();

TRISA2=0x00;
RA2=0x01;

t=6;
delay_10us();

TRISA2=0x01;
if (RA2 == 1)
PresencePulse=0x00;
else
PresencePulse=0x01;

t=50;
delay_10us();

TRISA2=0x00;
RA2=0x01;
return (PresencePulse);
}

# 133
void WriteByteToiButton(unsigned char d)
{
unsigned char n;
for(n=0; n<8; n++)
{
TRISA2=0x00;
RA2=0x00;
t=6;
if (d&0x01)
{
asm ("nop");
TRISA2=0x01;
delay_10us();
}
else
{
delay_10us();
TRISA2=0x01;
}
d=d>>1;
}
}

# 162
unsigned char ReadByteToiButton(void)
{
unsigned char n, i_byte, temp, mask;
for (n=0; n<8; n++)
{
TRISA2=0x00;
RA2=0x00;

# 169
#asm
     NOP
 NOP

# 172
#endasm 
 TRISA2=0x01;

# 174
#asm
     NOP
 NOP

# 177
#endasm 
 temp=PORTA;
if (temp & 4)
{
i_byte=(i_byte>>1) | 0x80;
}
else
{
i_byte=i_byte >> 1;
}
t=6;
delay_10us();
}
return(i_byte);
}

# 200
void delay_10us(void)
{

# 202
#asm
 BCF _STATUS,5
DELAY_10US_XZ:
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 NOP
 DECFSZ _t,F
 GOTO DELAY_10US_XZ
#endasm 
}
